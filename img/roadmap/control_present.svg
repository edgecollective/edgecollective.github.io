<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   xmlns:ns0="https://launchpad.net/jessyink"
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   width="800"
   height="504.45892"
   viewBox="0 0 211.66667 133.47142"
   version="1.1"
   id="svg8"
   inkscape:version="0.92.3 (2405546, 2018-03-11)"
   sodipodi:docname="control_present.svg"
   inkscape:export-filename="/home/dwblair/h_019.png"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96">
  <sodipodi:namedview
     id="base"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageopacity="0.0"
     inkscape:pageshadow="2"
     inkscape:zoom="1.0821433"
     inkscape:cx="511.47587"
     inkscape:cy="247.47053"
     inkscape:document-units="mm"
     inkscape:current-layer="g4562"
     showgrid="false"
     inkscape:window-width="1366"
     inkscape:window-height="719"
     inkscape:window-x="0"
     inkscape:window-y="25"
     inkscape:window-maximized="1"
     showguides="false"
     inkscape:measure-start="0,0"
     inkscape:measure-end="0,0"
     units="px" />
  <defs
     id="defs2">
    <marker
       inkscape:stockid="Arrow1Lend"
       orient="auto"
       refY="0"
       refX="0"
       id="marker2198"
       style="overflow:visible"
       inkscape:isstock="true">
      <path
         inkscape:connector-curvature="0"
         id="path2196"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         style="fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.00000003pt;stroke-opacity:1"
         transform="matrix(-0.8,0,0,-0.8,-10,0)" />
    </marker>
    <marker
       inkscape:isstock="true"
       style="overflow:visible"
       id="marker8401"
       refX="0"
       refY="0"
       orient="auto"
       inkscape:stockid="Arrow1Lend">
      <path
         transform="matrix(-0.8,0,0,-0.8,-10,0)"
         style="fill:#ff0000;fill-opacity:1;fill-rule:evenodd;stroke:#ff0000;stroke-width:1.00000003pt;stroke-opacity:1"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path8399"
         inkscape:connector-curvature="0" />
    </marker>
    <marker
       inkscape:isstock="true"
       style="overflow:visible"
       id="marker7864"
       refX="0"
       refY="0"
       orient="auto"
       inkscape:stockid="Arrow1Lend">
      <path
         transform="matrix(-0.8,0,0,-0.8,-10,0)"
         style="fill:#ff0000;fill-opacity:1;fill-rule:evenodd;stroke:#ff0000;stroke-width:1.00000003pt;stroke-opacity:1"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path7862"
         inkscape:connector-curvature="0" />
    </marker>
    <marker
       inkscape:stockid="Arrow1Lstart"
       orient="auto"
       refY="0"
       refX="0"
       id="marker6962"
       style="overflow:visible"
       inkscape:isstock="true">
      <path
         id="path6960"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         style="fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.00000003pt;stroke-opacity:1"
         transform="matrix(0.8,0,0,0.8,10,0)"
         inkscape:connector-curvature="0" />
    </marker>
    <marker
       inkscape:isstock="true"
       style="overflow:visible"
       id="marker5259"
       refX="0"
       refY="0"
       orient="auto"
       inkscape:stockid="Arrow1Lend">
      <path
         transform="matrix(-0.8,0,0,-0.8,-10,0)"
         style="fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.00000003pt;stroke-opacity:1"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path5257"
         inkscape:connector-curvature="0" />
    </marker>
    <marker
       inkscape:stockid="Arrow1Lend"
       orient="auto"
       refY="0"
       refX="0"
       id="Arrow1Lend-6"
       style="overflow:visible"
       inkscape:isstock="true">
      <path
         inkscape:connector-curvature="0"
         id="path871-2"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         style="fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.00000003pt;stroke-opacity:1"
         transform="matrix(-0.8,0,0,-0.8,-10,0)" />
    </marker>
    <marker
       inkscape:stockid="Arrow1Lend"
       orient="auto"
       refY="0"
       refX="0"
       id="Arrow1Lend-61"
       style="overflow:visible"
       inkscape:isstock="true">
      <path
         inkscape:connector-curvature="0"
         id="path871-8"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         style="fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.00000003pt;stroke-opacity:1"
         transform="matrix(-0.8,0,0,-0.8,-10,0)" />
    </marker>
    <marker
       inkscape:stockid="Arrow1Lend"
       orient="auto"
       refY="0"
       refX="0"
       id="Arrow1Lend-61-2"
       style="overflow:visible"
       inkscape:isstock="true">
      <path
         inkscape:connector-curvature="0"
         id="path871-8-8"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         style="fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.00000003pt;stroke-opacity:1"
         transform="matrix(-0.8,0,0,-0.8,-10,0)" />
    </marker>
    <marker
       inkscape:stockid="Arrow1Lend"
       orient="auto"
       refY="0"
       refX="0"
       id="Arrow1Lend-61-2-9"
       style="overflow:visible"
       inkscape:isstock="true">
      <path
         inkscape:connector-curvature="0"
         id="path871-8-8-3"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         style="fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.00000003pt;stroke-opacity:1"
         transform="matrix(-0.8,0,0,-0.8,-10,0)" />
    </marker>
    <marker
       inkscape:stockid="Arrow1Lend"
       orient="auto"
       refY="0"
       refX="0"
       id="Arrow1Lend-61-7"
       style="overflow:visible"
       inkscape:isstock="true">
      <path
         inkscape:connector-curvature="0"
         id="path871-8-4"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         style="fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.00000003pt;stroke-opacity:1"
         transform="matrix(-0.8,0,0,-0.8,-10,0)" />
    </marker>
    <marker
       inkscape:stockid="Arrow1Lend"
       orient="auto"
       refY="0"
       refX="0"
       id="Arrow1Lend-6-5"
       style="overflow:visible"
       inkscape:isstock="true">
      <path
         inkscape:connector-curvature="0"
         id="path871-2-2"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         style="fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.00000003pt;stroke-opacity:1"
         transform="matrix(-0.8,0,0,-0.8,-10,0)" />
    </marker>
    <marker
       inkscape:stockid="Arrow1Lend"
       orient="auto"
       refY="0"
       refX="0"
       id="Arrow1Lend-5"
       style="overflow:visible"
       inkscape:isstock="true">
      <path
         inkscape:connector-curvature="0"
         id="path871-4"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         style="fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.00000003pt;stroke-opacity:1"
         transform="matrix(-0.8,0,0,-0.8,-10,0)" />
    </marker>
    <marker
       inkscape:isstock="true"
       style="overflow:visible"
       id="marker5307-4"
       refX="0"
       refY="0"
       orient="auto"
       inkscape:stockid="Arrow1Lend">
      <path
         inkscape:connector-curvature="0"
         transform="matrix(-0.8,0,0,-0.8,-10,0)"
         style="fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.00000003pt;stroke-opacity:1"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path5305-9" />
    </marker>
    <marker
       inkscape:isstock="true"
       style="overflow:visible"
       id="marker8401-9"
       refX="0"
       refY="0"
       orient="auto"
       inkscape:stockid="Arrow1Lend">
      <path
         inkscape:connector-curvature="0"
         transform="matrix(-0.8,0,0,-0.8,-10,0)"
         style="fill:#ff0000;fill-opacity:1;fill-rule:evenodd;stroke:#ff0000;stroke-width:1.00000003pt;stroke-opacity:1"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path8399-3" />
    </marker>
    <marker
       inkscape:isstock="true"
       style="overflow:visible"
       id="marker7864-6"
       refX="0"
       refY="0"
       orient="auto"
       inkscape:stockid="Arrow1Lend">
      <path
         inkscape:connector-curvature="0"
         transform="matrix(-0.8,0,0,-0.8,-10,0)"
         style="fill:#ff0000;fill-opacity:1;fill-rule:evenodd;stroke:#ff0000;stroke-width:1.00000003pt;stroke-opacity:1"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path7862-0" />
    </marker>
    <marker
       inkscape:isstock="true"
       style="overflow:visible"
       id="marker8401-9-9"
       refX="0"
       refY="0"
       orient="auto"
       inkscape:stockid="Arrow1Lend">
      <path
         inkscape:connector-curvature="0"
         transform="matrix(-0.8,0,0,-0.8,-10,0)"
         style="fill:#ff0000;fill-opacity:1;fill-rule:evenodd;stroke:#ff0000;stroke-width:1.00000003pt;stroke-opacity:1"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path8399-3-1" />
    </marker>
    <marker
       inkscape:isstock="true"
       style="overflow:visible"
       id="marker7864-6-2"
       refX="0"
       refY="0"
       orient="auto"
       inkscape:stockid="Arrow1Lend">
      <path
         inkscape:connector-curvature="0"
         transform="matrix(-0.8,0,0,-0.8,-10,0)"
         style="fill:#ff0000;fill-opacity:1;fill-rule:evenodd;stroke:#ff0000;stroke-width:1.00000003pt;stroke-opacity:1"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path7862-0-7" />
    </marker>
    <marker
       inkscape:stockid="Arrow1Lend"
       orient="auto"
       refY="0"
       refX="0"
       id="marker2198-3"
       style="overflow:visible"
       inkscape:isstock="true">
      <path
         inkscape:connector-curvature="0"
         id="path2196-6"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         style="fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.00000003pt;stroke-opacity:1"
         transform="matrix(-0.8,0,0,-0.8,-10,0)" />
    </marker>
    <marker
       inkscape:collect="always"
       inkscape:isstock="true"
       style="overflow:visible"
       id="marker5259-3"
       refX="0"
       refY="0"
       orient="auto"
       inkscape:stockid="Arrow1Lend">
      <path
         transform="matrix(-0.8,0,0,-0.8,-10,0)"
         style="fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:1.00000003pt;stroke-opacity:1"
         d="M 0,0 5,-5 -12.5,0 5,5 Z"
         id="path5257-5"
         inkscape:connector-curvature="0" />
    </marker>
  </defs>
  <metadata
     id="metadata5">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title></dc:title>
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <g
     ns0:masterSlide="masterSlide"
     style="display:inline"
     inkscape:label="Masterslide"
     inkscape:groupmode="layer"
     id="layer1"
     transform="translate(-52.168766,65.729442)">
    <path
       style="fill:none;stroke:#000000;stroke-width:0.14180104px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
       d="m -96.834626,-18.55251 c -0.43073,-1.454109 -2.03743,-2.793639 -4.665844,-2.997549 -3.36286,1.120591 -1.86501,6.367544 -4.28717,2.84201 -3.12616,-1.206096 -6.01886,3.573169 -6.60294,8.143167 -2.04091,-2.357889 -4.61879,0.540082 -5.62611,3.4895094 -2.21038,3.36192 -0.5861,7.33079101 0.90476,10.2810313 -1.71424,4.4352026 0.12609,11.4084923 3.55533,11.8913513 3.08147,-1.308358 4.63142,4.599856 7.48344,4.989184 2.15189,0.682497 4.92516,1.01642 6.291254,-2.302801 0.83421,-1.353083 2.88464,2.542871 4.58313,1.780267 1.94881,0.113464 3.94943,-0.294757 5.79944,-1.169931 1.71315,-2.183554 1.70267,-6.98318 4.58166,-6.166495 3.42182,-1.916443 3.66029,-8.4759518 3.20494,-13.22329059 -0.15275,-3.71957401 -3.52703,-4.84056801 -1.94233,-8.41593001 0.49537,-4.4700364 -2.13453,-7.0880574 -4.5586,-6.8339574 -1.26984,-2.207759 -2.77406,-6.460245 -4.95115,-3.481979 -0.68476,0.731906 -3.24256,-1.241256 -3.76981,1.175413 z"
       id="path2747-8-6-2-2"
       inkscape:connector-curvature="0"
       sodipodi:nodetypes="ccccccccccccccccc"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:10.58333302px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.26458332"
       x="-418.63666"
       y="572.11829"
       id="text804"><tspan
         sodipodi:role="line"
         id="tspan802"
         x="-418.63666"
         y="581.48206"
         style="stroke-width:0.26458332" /></text>
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501782px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="-99.335999"
       y="-12.549198"
       id="text14-4-1-6-3-6"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-4-8-0-40-6"
         x="-99.335999"
         y="-12.549198"
         style="text-align:center;text-anchor:middle;stroke-width:0.06087548">Commercial</tspan><tspan
         sodipodi:role="line"
         x="-99.335999"
         y="-9.5054255"
         style="text-align:center;text-anchor:middle;stroke-width:0.06087548"
         id="tspan6831">Data</tspan><tspan
         sodipodi:role="line"
         x="-99.335999"
         y="-6.4616537"
         style="text-align:center;text-anchor:middle;stroke-width:0.06087548"
         id="tspan6833">Platform</tspan></text>
    <rect
       id="rect10-7-6-3-18-6"
       width="15.698288"
       height="8.447073"
       x="-107.24969"
       y="-3.6519454"
       style="fill:#ffd5d5;fill-opacity:1;stroke:#000000;stroke-width:0.08410808"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501782px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="-102.80705"
       y="1.4105604"
       id="text14-4-4-1-1-5-9"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-78-5-2-5-97-8"
         x="-102.80705"
         y="1.4105604"
         style="stroke-width:0.06087548">Server</tspan></text>
    <rect
       id="rect10-36-9-9-5-7"
       width="15.741463"
       height="8.5702715"
       x="-107.29287"
       y="4.7951531"
       style="fill:#ffd5d5;fill-opacity:1;stroke:#000000;stroke-width:0.08483564"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501782px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="-104.63374"
       y="9.8795109"
       id="text14-4-2-5-9-7-3-2"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-78-0-6-0-6-8-8"
         x="-104.63374"
         y="9.8795109"
         style="stroke-width:0.06087548">Database</tspan></text>
    <rect
       id="rect10-7-6-3-4-2"
       width="15.900514"
       height="8.447073"
       x="-39.486336"
       y="-1.3749888"
       style="fill:#00ffff;stroke:#000000;stroke-width:0.0846481"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501782px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="-35.809853"
       y="3.509167"
       id="text14-4-1-6-4-8"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-4-8-0-4-8"
         x="-35.809853"
         y="3.509167"
         style="stroke-width:0.06087548">Router</tspan></text>
    <rect
       id="rect10-7-6-3-4-8-6"
       width="16.646711"
       height="8.447073"
       x="-68.621758"
       y="-1.1916993"
       style="fill:#ffd5d5;stroke:#000000;stroke-width:0.08661154"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <path
       style="fill:none;stroke:#000000;stroke-width:0.09198696;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="m -40.971426,2.8118395 h -9.69277"
       id="path58-7-2-0-4-8-6"
       inkscape:connector-curvature="0"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <rect
       style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.20043296;stroke-miterlimit:4;stroke-dasharray:0.60129883, 0.60129883;stroke-dashoffset:0"
       id="rect9374"
       width="120.89586"
       height="49.681694"
       x="126.38096"
       y="-26.085312" />
    <circle
       id="path213-1-9-8"
       cx="155.69382"
       cy="7.7206659"
       r="1.7100055"
       style="fill:#b7c8be;stroke:#24221c;stroke-width:0.11115433;stroke-miterlimit:4;stroke-dasharray:none"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <rect
       id="rect215-7-4-9"
       width="4.9745612"
       height="7.6691155"
       x="153.25838"
       y="10.15614"
       style="fill:#b7c8be;stroke:#24221c;stroke-width:0.11115433;stroke-miterlimit:4;stroke-dasharray:none"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <rect
       id="rect10-7-6-3-1-6-5-5-1"
       width="20.921648"
       height="8.447073"
       x="-41.866768"
       y="18.906351"
       style="fill:#e3dbdb;stroke:#000000;stroke-width:0.09709784"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:3.94944429px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.09873616"
       x="183.27567"
       y="-28.609747"
       id="text14-4-4-1-1-2-2-7-9-9-5-7"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         x="183.27567"
         y="-28.609747"
         style="stroke-width:0.09873616"
         id="tspan1749-4">Farm</tspan></text>
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501782px;line-height:1.25;font-family:sans-serif;text-align:center;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="-60.127754"
       y="2.4020793"
       id="text14-4-4-1-1-4-8-8-0-0"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-78-5-2-5-7-9-3-1-1"
         x="-60.127754"
         y="2.4020793"
         style="text-align:center;text-anchor:middle;stroke-width:0.06087548">Cable</tspan><tspan
         sodipodi:role="line"
         x="-60.127754"
         y="5.4458518"
         style="text-align:center;text-anchor:middle;stroke-width:0.06087548"
         id="tspan10703">Modem</tspan></text>
    <g
       id="g2648"
       transform="translate(-200.63907,10.025621)">
      <g
         id="g1670">
        <path
           style="fill:none;stroke:#000000;stroke-width:0.147487;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
           d="M 223.59272,-7.8599634 H 210.30313"
           id="path58-4-5-2-9"
           inkscape:connector-curvature="0"
           inkscape:export-filename="/home/dwblair/cloud001.png"
           inkscape:export-xdpi="96"
           inkscape:export-ydpi="96" />
        <path
           style="fill:none;stroke:#000000;stroke-width:0.14102559px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
           d="m 211.33395,-9.0269087 c -0.0745,-0.6783743 0.65406,-2.3724123 1.17493,-1.3507173 -0.036,0.551221 0.48251,1.8956786 0.74518,0.769807 -0.058,-0.629378 0.65213,-1.891216 0.8461,-0.698761 -0.17417,0.6876031 0.10949,2.7066173 0.73894,1.334947 0.26444,-0.3618712 0.1956,-1.885866 0.6765,-1.488896 0.11761,0.354892 -0.0456,0.9659459 0.34306,1.1241315"
           id="path2525-4-2-3-9"
           inkscape:connector-curvature="0"
           inkscape:export-filename="/home/dwblair/cloud001.png"
           inkscape:export-xdpi="96"
           inkscape:export-ydpi="96" />
        <text
           xml:space="preserve"
           style="font-style:normal;font-weight:normal;font-size:2.52020955px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06300524"
           x="216.74127"
           y="-8.9398928"
           id="text2576-9-8-7-1"
           inkscape:export-filename="/home/dwblair/cloud001.png"
           inkscape:export-xdpi="96"
           inkscape:export-ydpi="96"><tspan
             sodipodi:role="line"
             id="tspan2574-2-9-5-4"
             x="216.74127"
             y="-8.9398928"
             style="stroke-width:0.06300524">LoRa</tspan></text>
      </g>
      <rect
         inkscape:export-ydpi="96"
         inkscape:export-xdpi="96"
         inkscape:export-filename="/home/dwblair/cloud001.png"
         style="fill:#00ffff;stroke:#000000;stroke-width:0.09550962"
         y="-12.325556"
         x="189.88872"
         height="8.4462175"
         width="20.244879"
         id="rect10-7-6-3-1-6-6-3-9" />
      <path
         inkscape:export-ydpi="96"
         inkscape:export-xdpi="96"
         inkscape:export-filename="/home/dwblair/cloud001.png"
         style="fill:none;stroke:#000000;stroke-width:0.0696606px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
         d="m 180.46377,-8.261878 c 0.19439,-0.586564 0.58415,-1.2978052 1.29368,-1.2937022"
         id="path2508-3-4-4-2-6"
         inkscape:connector-curvature="0" />
      <path
         inkscape:export-ydpi="96"
         inkscape:export-xdpi="96"
         inkscape:export-filename="/home/dwblair/cloud001.png"
         style="fill:none;stroke:#000000;stroke-width:0.0696606px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
         d="m 179.73021,-8.5718958 c 0.0232,-1.0818103 1.20359,-1.7018842 2.16382,-1.7239722"
         id="path2510-6-8-7-9-9"
         inkscape:connector-curvature="0" />
      <g
         id="g2630">
        <path
           inkscape:connector-curvature="0"
           id="path2514-0-7-8-3-4"
           d="m 179.02653,-8.8357725 c -0.0855,-1.2697995 1.25331,-2.1917595 2.4277,-2.0758385"
           style="fill:none;stroke:#000000;stroke-width:0.0696606px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
           inkscape:export-filename="/home/dwblair/cloud001.png"
           inkscape:export-xdpi="96"
           inkscape:export-ydpi="96" />
        <text
           xml:space="preserve"
           style="font-style:normal;font-weight:normal;font-size:2.54387355px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06359684"
           x="182.81612"
           y="-8.818902"
           id="text2523-6-1-4-1-2"
           inkscape:export-filename="/home/dwblair/cloud001.png"
           inkscape:export-xdpi="96"
           inkscape:export-ydpi="96"><tspan
             sodipodi:role="line"
             id="tspan2521-2-7-5-9-2"
             x="182.81612"
             y="-8.818902"
             style="stroke-width:0.06359684">WiFi</tspan></text>
        <path
           style="fill:none;stroke:#000000;stroke-width:0.147487;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
           d="M 189.28943,-7.5711543 H 177.41647"
           id="path58-7-2-0-4-6"
           inkscape:connector-curvature="0"
           inkscape:export-filename="/home/dwblair/cloud001.png"
           inkscape:export-xdpi="96"
           inkscape:export-ydpi="96" />
      </g>
      <text
         inkscape:export-ydpi="96"
         inkscape:export-xdpi="96"
         inkscape:export-filename="/home/dwblair/cloud001.png"
         id="text14-4-1-6-3"
         y="-9.1473732"
         x="200.13651"
         style="font-style:normal;font-weight:normal;font-size:2.43501782px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
         xml:space="preserve"><tspan
           style="text-align:center;text-anchor:middle;stroke-width:0.06087548"
           y="-9.1473732"
           x="200.13651"
           id="tspan12-4-8-0-40"
           sodipodi:role="line">On-Site</tspan><tspan
           id="tspan8665"
           style="text-align:center;text-anchor:middle;stroke-width:0.06087548"
           y="-6.103601"
           x="200.13651"
           sodipodi:role="line">LoRa Gateway</tspan></text>
    </g>
    <path
       style="fill:none;stroke:#000000;stroke-width:0.14180104px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
       d="m 536.70609,21.080834 c -0.43073,-1.454108 -2.03744,-2.793638 -4.66586,-2.997549 -3.36286,1.120592 -1.865,6.367544 -4.28717,2.842011 -3.12615,-1.206098 -6.01885,3.573169 -6.60293,8.143166 -2.04092,-2.357887 -4.6188,0.540083 -5.62611,3.489507 -2.21039,3.36192 -0.5861,7.3308 0.90475,10.28103 -1.71423,4.43521 0.1261,11.4085 3.55533,11.89136 3.08148,-1.30836 4.63143,4.59985 7.48345,4.98918 2.15189,0.6825 4.92516,1.01642 6.29125,-2.3028 0.83421,-1.35308 2.88465,2.54287 4.58313,1.78027 1.94881,0.11346 3.94943,-0.29476 5.79944,-1.16994 1.71315,-2.18355 1.70267,-6.98318 4.58166,-6.16649 3.42182,-1.91644 3.66029,-8.47595 3.20494,-13.22329 -0.15275,-3.71957 -3.52703,-4.84057 -1.94233,-8.415932 0.49537,-4.470035 -2.13453,-7.088058 -4.5586,-6.833957 -1.26984,-2.207757 -2.77406,-6.460244 -4.95115,-3.481978 -0.68476,0.731904 -3.24256,-1.241258 -3.7698,1.175412 z"
       id="path2747-8-6-2-2-3"
       inkscape:connector-curvature="0"
       sodipodi:nodetypes="ccccccccccccccccc"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501806px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="534.20471"
       y="27.084146"
       id="text14-4-1-6-3-6-6"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-4-8-0-40-6-7"
         x="534.20471"
         y="27.084146"
         style="text-align:center;text-anchor:middle;stroke-width:0.06087548">Commercial</tspan><tspan
         sodipodi:role="line"
         x="534.20471"
         y="30.127918"
         style="text-align:center;text-anchor:middle;stroke-width:0.06087548"
         id="tspan6831-5">Data</tspan><tspan
         sodipodi:role="line"
         x="534.20471"
         y="33.171692"
         style="text-align:center;text-anchor:middle;stroke-width:0.06087548"
         id="tspan6833-3">Platform</tspan></text>
    <rect
       id="rect10-7-6-3-18-6-5"
       width="15.698288"
       height="8.447073"
       x="526.29102"
       y="35.981403"
       style="fill:#ffd5d5;fill-opacity:1;stroke:#000000;stroke-width:0.08410808"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501806px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="530.73364"
       y="41.043911"
       id="text14-4-4-1-1-5-9-6"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-78-5-2-5-97-8-2"
         x="530.73364"
         y="41.043911"
         style="stroke-width:0.06087548">Server</tspan></text>
    <rect
       id="rect10-36-9-9-5-7-9"
       width="15.741463"
       height="8.5702715"
       x="526.24786"
       y="44.428493"
       style="fill:#ffd5d5;fill-opacity:1;stroke:#000000;stroke-width:0.08483564"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501806px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="528.90698"
       y="49.512859"
       id="text14-4-2-5-9-7-3-2-1"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-78-0-6-0-6-8-8-2"
         x="528.90698"
         y="49.512859"
         style="stroke-width:0.06087548">Database</tspan></text>
    <rect
       style="opacity:1;fill:#ffd5d5;stroke:#241c1c;stroke-width:0.04902124;stroke-miterlimit:4;stroke-dasharray:none"
       id="rect6887-7"
       width="5.8309851"
       height="4.6348863"
       x="525.67169"
       y="201.70483"
       transform="rotate(-22.81308)" />
    <ellipse
       style="opacity:1;fill:#ffd5d5;stroke:#1c241f;stroke-width:0.04902124;stroke-miterlimit:4;stroke-dasharray:none"
       id="path6885-0"
       cx="528.51245"
       cy="206.33969"
       rx="5.2329359"
       ry="2.3921988"
       transform="rotate(-22.81308)" />
    <rect
       style="opacity:1;fill:#1c241f;stroke:none;stroke-width:0.04902124;stroke-miterlimit:4;stroke-dasharray:none"
       id="rect6889-9"
       width="0.29902485"
       height="3.2145181"
       x="528.5343"
       y="206.82672"
       transform="rotate(-22.81308)" />
    <path
       style="fill:none;stroke:#000000;stroke-width:0.147487;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="M 663.1858,28.103783 H 649.89622"
       id="path58-4-5-2-9-3"
       inkscape:connector-curvature="0"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <path
       style="fill:none;stroke:#000000;stroke-width:0.1410256px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
       d="m 650.92705,26.936836 c -0.0745,-0.678373 0.65405,-2.372411 1.17493,-1.350717 -0.036,0.551223 0.48251,1.895679 0.74518,0.769808 -0.058,-0.629378 0.65212,-1.891218 0.84609,-0.698762 -0.17417,0.687605 0.10949,2.706619 0.73894,1.334947 0.26445,-0.36187 0.1956,-1.885865 0.6765,-1.488895 0.11761,0.354891 -0.0456,0.965946 0.34308,1.12413"
       id="path2525-4-2-3-9-6"
       inkscape:connector-curvature="0"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.52020955px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06300524"
       x="656.33435"
       y="27.023859"
       id="text2576-9-8-7-1-0"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan2574-2-9-5-4-62"
         x="656.33435"
         y="27.023859"
         style="stroke-width:0.06300524">LoRa</tspan></text>
    <rect
       id="rect10-7-6-3-1-8-9-6"
       width="16.964396"
       height="14.637877"
       x="663.70557"
       y="23.876047"
       style="fill:#00ffff;stroke:#000000;stroke-width:0.11509769"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.38568735px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.05964219"
       x="667.88245"
       y="35.855907"
       id="text14-6-0-9-2-9-4-4-1"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-7-7-2-6-6-8-8-8"
         x="667.88245"
         y="35.855907"
         style="stroke-width:0.05964219">Sensor</tspan></text>
    <rect
       id="rect10-7-6-3-1-6-6-3-9-7"
       width="20.244879"
       height="8.4462175"
       x="629.48181"
       y="23.638186"
       style="fill:#00ffff;stroke:#000000;stroke-width:0.09550962"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <path
       style="fill:none;stroke:#000000;stroke-width:0.147487;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="m 626.91305,19.113273 -57.63,-29.855213"
       id="path8667-9"
       inkscape:connector-curvature="0" />
    <g
       id="g8762-2"
       transform="matrix(0.28506666,0.14610924,-0.14610924,0.28506666,886.31456,-69.732423)">
      <g
         id="g8769-0"
         transform="rotate(1.6080189,-743.56578,608.7526)">
        <g
           id="g8719-2"
           transform="matrix(0.5116404,0,0,1,-374.91571,0)">
          <path
             inkscape:export-ydpi="96"
             inkscape:export-xdpi="96"
             inkscape:export-filename="/home/dwblair/cloud001.png"
             inkscape:connector-curvature="0"
             id="path2525-4-2-3-9-0-37"
             d="m -767.68771,610.64177 c -0.23235,-2.11773 2.04186,-7.40617 3.66791,-4.21664 -0.11244,1.72084 1.50624,5.91795 2.32627,2.4032 -0.18143,-1.96481 2.0358,-5.90396 2.64134,-2.18138 -0.54349,2.14656 0.3421,8.4495 2.30682,4.16743 0.82547,-1.12968 0.61058,-5.88727 2.11182,-4.64806 0.36733,1.10792 -0.14231,3.01554 1.07099,3.50931"
             style="fill:none;stroke:#000000;stroke-width:0.44025177px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
          <path
             inkscape:export-ydpi="96"
             inkscape:export-xdpi="96"
             inkscape:export-filename="/home/dwblair/cloud001.png"
             inkscape:connector-curvature="0"
             id="path2525-4-2-3-9-0-3-5"
             d="m -753.56256,609.67563 c -0.23235,-2.11773 2.04186,-7.40618 3.66791,-4.21664 -0.11244,1.72084 1.50624,5.91795 2.32627,2.40319 -0.18143,-1.9648 2.0358,-5.90396 2.64134,-2.18137 -0.54349,2.14656 0.3421,8.4495 2.30682,4.16743 0.82547,-1.12969 0.61058,-5.88728 2.11182,-4.64806 0.36733,1.10792 -0.14231,3.01554 1.07099,3.50931"
             style="fill:none;stroke:#000000;stroke-width:0.44025177px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
        </g>
        <text
           xml:space="preserve"
           style="font-style:normal;font-weight:normal;font-size:7.8675561px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.19668888"
           x="-751.23499"
           y="611.12762"
           id="text2576-9-8-7-1-4-9"
           inkscape:export-filename="/home/dwblair/cloud001.png"
           inkscape:export-xdpi="96"
           inkscape:export-ydpi="96"><tspan
             sodipodi:role="line"
             id="tspan2574-2-9-5-4-0-2"
             x="-751.23499"
             y="611.12762"
             style="stroke-width:0.19668888">Satellite</tspan></text>
      </g>
    </g>
    <path
       style="fill:none;stroke:#000000;stroke-width:0.147487;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="M 568.18506,-9.780619 545.69767,18.370299"
       id="path8780-2"
       inkscape:connector-curvature="0" />
    <g
       id="g8762-9-8"
       transform="matrix(0.08027198,-0.31010855,0.31010855,0.08027198,420.49606,-284.90422)">
      <g
         id="g8769-1-9"
         transform="rotate(1.6080189,-743.56578,608.7526)">
        <g
           id="g8719-9-7"
           transform="matrix(0.47670805,0.18580994,-0.36316511,0.9317248,-193.21527,200.22996)">
          <path
             inkscape:export-ydpi="96"
             inkscape:export-xdpi="96"
             inkscape:export-filename="/home/dwblair/cloud001.png"
             inkscape:connector-curvature="0"
             id="path2525-4-2-3-9-0-6-3"
             d="m -767.68771,610.64177 c -0.23235,-2.11773 2.04186,-7.40617 3.66791,-4.21664 -0.11244,1.72084 1.50624,5.91795 2.32627,2.4032 -0.18143,-1.96481 2.0358,-5.90396 2.64134,-2.18138 -0.54349,2.14656 0.3421,8.4495 2.30682,4.16743 0.82547,-1.12968 0.61058,-5.88727 2.11182,-4.64806 0.36733,1.10792 -0.14231,3.01554 1.07099,3.50931"
             style="fill:none;stroke:#000000;stroke-width:0.44025177px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
          <path
             inkscape:export-ydpi="96"
             inkscape:export-xdpi="96"
             inkscape:export-filename="/home/dwblair/cloud001.png"
             inkscape:connector-curvature="0"
             id="path2525-4-2-3-9-0-3-2-6"
             d="m -753.56256,609.67563 c -0.23235,-2.11773 2.04186,-7.40618 3.66791,-4.21664 -0.11244,1.72084 1.50624,5.91795 2.32627,2.40319 -0.18143,-1.9648 2.0358,-5.90396 2.64134,-2.18137 -0.54349,2.14656 0.3421,8.4495 2.30682,4.16743 0.82547,-1.12969 0.61058,-5.88728 2.11182,-4.64806 0.36733,1.10792 -0.14231,3.01554 1.07099,3.50931"
             style="fill:none;stroke:#000000;stroke-width:0.44025177px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
        </g>
        <text
           xml:space="preserve"
           style="font-style:normal;font-weight:normal;font-size:7.8675561px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.19668888"
           x="-483.62622"
           y="867.8559"
           id="text2576-9-8-7-1-4-5-1"
           inkscape:export-filename="/home/dwblair/cloud001.png"
           inkscape:export-xdpi="96"
           inkscape:export-ydpi="96"
           transform="rotate(21.294704)"><tspan
             sodipodi:role="line"
             id="tspan2574-2-9-5-4-0-4-2"
             x="-483.62622"
             y="867.8559"
             style="stroke-width:0.19668888">Satellite</tspan></text>
      </g>
    </g>
    <path
       inkscape:connector-curvature="0"
       id="path2508-3-4-4-2-6-93"
       d="m 620.05686,27.701868 c 0.19439,-0.586566 0.58415,-1.297805 1.29368,-1.293702"
       style="fill:none;stroke:#000000;stroke-width:0.0696606px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <path
       inkscape:connector-curvature="0"
       id="path2510-6-8-7-9-9-1"
       d="m 619.3233,27.39185 c 0.0232,-1.08181 1.20359,-1.701884 2.16382,-1.723972"
       style="fill:none;stroke:#000000;stroke-width:0.0696606px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <path
       inkscape:connector-curvature="0"
       id="path2514-0-7-8-3-4-9"
       d="m 618.61962,27.127973 c -0.0855,-1.269799 1.25331,-2.19176 2.4277,-2.075839"
       style="fill:none;stroke:#000000;stroke-width:0.0696606px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.54387355px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06359684"
       x="622.40924"
       y="27.144846"
       id="text2523-6-1-4-1-2-4"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan2521-2-7-5-9-2-7"
         x="622.40924"
         y="27.144846"
         style="stroke-width:0.06359684">WiFi</tspan></text>
    <path
       style="fill:none;stroke:#000000;stroke-width:0.147487;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="M 628.88253,28.392592 H 617.00957"
       id="path58-7-2-0-4-6-8"
       inkscape:connector-curvature="0"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <rect
       id="rect10-7-6-3-4-2-4"
       width="15.900515"
       height="8.447073"
       x="600.65588"
       y="23.869753"
       style="fill:#00ffff;stroke:#000000;stroke-width:0.0846481"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501806px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="604.33234"
       y="28.753908"
       id="text14-4-1-6-4-8-5"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-4-8-0-4-8-03"
         x="604.33234"
         y="28.753908"
         style="stroke-width:0.06087548">Router</tspan></text>
    <rect
       id="rect10-7-6-3-4-8-6-6"
       width="16.646711"
       height="8.447073"
       x="571.52045"
       y="24.053041"
       style="fill:#ffd5d5;stroke:#000000;stroke-width:0.08661154"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.96630192px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.07415754"
       x="590.87097"
       y="26.691233"
       id="text2523-6-1-4-1-8-04-1"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan2521-2-7-5-9-8-7-0"
         x="590.87097"
         y="26.691233"
         style="stroke-width:0.07415754">wire</tspan></text>
    <path
       style="fill:none;stroke:#000000;stroke-width:0.09198696;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="m 599.17076,28.056581 h -9.69277"
       id="path58-7-2-0-4-8-6-6"
       inkscape:connector-curvature="0"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.89315391px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.07232888"
       x="557.98413"
       y="35.279499"
       id="text2523-6-1-4-1-8-0-7-3"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"
       inkscape:transform-center-x="-1.6555874"
       inkscape:transform-center-y="6.2870139e-06"><tspan
         sodipodi:role="line"
         id="tspan2521-2-7-5-9-8-6-9-2"
         x="557.98413"
         y="35.279499"
         style="stroke-width:0.07232888">wire</tspan></text>
    <path
       style="fill:none;stroke:#000000;stroke-width:0.1245961;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="M 570.8101,36.187399 H 553.02707"
       id="path58-7-2-0-4-8-4-0-0"
       inkscape:connector-curvature="0"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501806px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="696.01349"
       y="-23.722971"
       id="text14-4-1-6-3-3-6"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-4-8-0-40-3-1"
         x="696.01349"
         y="-23.722971"
         style="text-align:center;text-anchor:middle;stroke-width:0.06087548">Off-Site</tspan><tspan
         sodipodi:role="line"
         x="696.01349"
         y="-20.679199"
         style="text-align:center;text-anchor:middle;stroke-width:0.06087548"
         id="tspan8665-3-5">LoRa Gateway</tspan></text>
    <rect
       id="rect10-7-6-3-1-3-7-5"
       width="20.244879"
       height="8.4462175"
       x="685.93524"
       y="-10.193349"
       style="fill:#e3dbdb;stroke:#000000;stroke-width:0.09550962"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501806px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="689.29407"
       y="-5.1361899"
       id="text14-4-4-1-1-2-9-3-4"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-78-5-2-5-9-19-2-7"
         x="689.29407"
         y="-5.1361899"
         style="stroke-width:0.06087548">LoRa Radio</tspan></text>
    <rect
       id="rect10-7-6-3-1-6-6-6-6"
       width="20.244879"
       height="8.4462175"
       x="685.93524"
       y="-18.639559"
       style="fill:#e3dbdb;stroke:#000000;stroke-width:0.09550962"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501806px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="690.47821"
       y="-13.581536"
       id="text14-4-4-1-1-2-2-9-5-5"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-78-5-2-5-9-1-3-2-6"
         x="690.47821"
         y="-13.581536"
         style="stroke-width:0.06087548">Ethernet</tspan></text>
    <path
       style="fill:none;stroke:#000000;stroke-width:0.147487;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="M 698.31144,-0.48550702 685.09362,22.397776"
       id="path58-4-5-2-9-8-9"
       inkscape:connector-curvature="0"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <g
       id="g10354-3"
       transform="matrix(0.68397959,-1.3066802,1.3066802,0.68397959,448.53013,162.8488)"
       inkscape:transform-center-x="1.1349668"
       inkscape:transform-center-y="-0.22795325">
      <path
         inkscape:export-ydpi="96"
         inkscape:export-xdpi="96"
         inkscape:export-filename="/home/dwblair/cloud001.png"
         inkscape:connector-curvature="0"
         id="path2525-4-2-3-9-70-7"
         d="m 162.4773,97.000986 c -0.0505,-0.459951 0.44347,-1.608559 0.79664,-0.915815 -0.0245,0.37375 0.32714,1.285327 0.50524,0.521953 -0.0394,-0.426738 0.44217,-1.28229 0.57368,-0.47378 -0.11804,0.466216 0.0743,1.835161 0.50103,0.905137 0.17928,-0.245362 0.13261,-1.278667 0.45866,-1.009519 0.0798,0.240631 -0.0309,0.654945 0.23261,0.76219"
         style="fill:none;stroke:#000000;stroke-width:0.09561899px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
      <text
         inkscape:export-ydpi="96"
         inkscape:export-xdpi="96"
         inkscape:export-filename="/home/dwblair/cloud001.png"
         id="text2576-9-8-7-1-8-4"
         y="97.060013"
         x="166.14359"
         style="font-style:normal;font-weight:normal;font-size:1.70876718px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.04271918"
         xml:space="preserve"><tspan
           style="stroke-width:0.04271918"
           y="97.060013"
           x="166.14359"
           id="tspan2574-2-9-5-4-6-5"
           sodipodi:role="line">LoRa</tspan></text>
    </g>
    <rect
       style="opacity:1;fill:none;fill-opacity:1;stroke:#000000;stroke-width:0.23175567;stroke-miterlimit:4;stroke-dasharray:0.69526699, 0.69526699;stroke-dashoffset:0"
       id="rect9374-2"
       width="129.00266"
       height="62.24889"
       x="565.98352"
       y="3.147311" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.93665266px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.0734163"
       x="524.72571"
       y="15.988566"
       id="text14-4-1-6-4-3-8-2-3-5"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-4-8-0-4-1-3-8-0-4"
         x="524.72571"
         y="15.988566"
         style="stroke-width:0.0734163">&quot;The Cloud&quot;</tspan></text>
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501806px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="592.13202"
       y="48.8634"
       id="text14-2-2-1-6-0-1-7"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         x="592.13202"
         y="48.8634"
         style="stroke-width:0.06087548"
         id="tspan227-0-1-7-4">Smartphone</tspan></text>
    <circle
       id="path213-1-9-8-4"
       cx="583.44415"
       cy="56.478069"
       r="1.7100055"
       style="fill:#b7c8be;stroke:#24221c;stroke-width:0.11115434;stroke-miterlimit:4;stroke-dasharray:none"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <rect
       id="rect215-7-4-9-3"
       width="4.9745612"
       height="7.6691155"
       x="581.00873"
       y="58.91354"
       style="fill:#b7c8be;stroke:#24221c;stroke-width:0.11115434;stroke-miterlimit:4;stroke-dasharray:none"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <rect
       id="rect10-7-6-3-1-6-5-5-1-0"
       width="20.921648"
       height="8.447073"
       x="589.45819"
       y="51.044559"
       style="fill:#e3dbdb;stroke:#000000;stroke-width:0.09709784"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501806px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="594.50763"
       y="56.103008"
       id="text14-4-4-1-1-2-2-7-9-5-7"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-78-5-2-5-9-1-4-4-4-8"
         x="594.50763"
         y="56.103008"
         style="stroke-width:0.06087548">WiFi Radio</tspan></text>
    <rect
       id="rect10-7-6-3-1-6-5-5-6-9-6"
       width="20.921648"
       height="8.447073"
       x="589.45819"
       y="59.491642"
       style="fill:#e3dbdb;stroke:#000000;stroke-width:0.09709784"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501806px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="591.58307"
       y="64.550095"
       id="text14-4-4-1-1-2-2-7-9-9-2-8"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-78-5-2-5-9-1-4-4-2-5-8"
         x="591.58307"
         y="64.550095"
         style="stroke-width:0.06087548">Cellular Radio</tspan></text>
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501806px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="581.02423"
       y="53.102398"
       id="text14-4-4-1-1-2-2-7-9-9-5-7-4"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         x="581.02423"
         y="53.102398"
         style="stroke-width:0.06087548"
         id="tspan1749-4-3">User</tspan></text>
    <g
       id="g9539-1"
       transform="matrix(0.19312983,-0.25556169,0.25556169,0.19312983,559.85023,-290.53769)">
      <path
         inkscape:export-ydpi="96"
         inkscape:export-xdpi="96"
         inkscape:export-filename="/home/dwblair/cloud001.png"
         style="fill:none;stroke:#000000;stroke-width:0.21746551px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
         d="m -745.04435,773.54592 c 0.60697,-1.83117 1.82364,-4.05147 4.03864,-4.03865"
         id="path2508-3-4-4-2-6-9-4"
         inkscape:connector-curvature="0" />
      <path
         inkscape:export-ydpi="96"
         inkscape:export-xdpi="96"
         inkscape:export-filename="/home/dwblair/cloud001.png"
         style="fill:none;stroke:#000000;stroke-width:0.21746551px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
         d="m -747.3343,772.57812 c 0.0726,-3.3772 3.75733,-5.31293 6.75498,-5.38189"
         id="path2510-6-8-7-9-9-3-9"
         inkscape:connector-curvature="0" />
      <path
         inkscape:export-ydpi="96"
         inkscape:export-xdpi="96"
         inkscape:export-filename="/home/dwblair/cloud001.png"
         style="fill:none;stroke:#000000;stroke-width:0.21746551px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
         d="m -749.53102,771.75434 c -0.26722,-3.96401 3.91253,-6.84221 7.57874,-6.48033"
         id="path2514-0-7-8-3-4-5-2"
         inkscape:connector-curvature="0" />
      <text
         inkscape:export-ydpi="96"
         inkscape:export-xdpi="96"
         inkscape:export-filename="/home/dwblair/cloud001.png"
         id="text2523-6-1-4-1-2-7-0"
         y="771.80707"
         x="-737.70074"
         style="font-style:normal;font-weight:normal;font-size:7.94143057px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.19853577"
         xml:space="preserve"><tspan
           style="stroke-width:0.19853577"
           y="771.80707"
           x="-737.70074"
           id="tspan2521-2-7-5-9-2-0-6"
           sodipodi:role="line">WiFi</tspan></text>
    </g>
    <path
       style="fill:none;stroke:#000000;stroke-width:0.15641126;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="m 614.51376,40.604699 -5.75324,9.45765"
       id="path9532-8"
       inkscape:connector-curvature="0" />
    <g
       transform="matrix(-0.1030438,-0.30330333,0.30330333,-0.1030438,410.76879,-72.173806)"
       id="g8769-9-1-9">
      <g
         id="g9469-9-2">
        <g
           id="g9476-9-6"
           transform="rotate(94.976782,-732.47987,632.77191)">
          <g
             transform="matrix(0.5116404,0,0,1,-374.91571,0)"
             id="g8719-93-7-6">
            <path
               style="fill:none;stroke:#000000;stroke-width:0.44025177px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
               d="m -767.68771,610.64177 c -0.23235,-2.11773 2.04186,-7.40617 3.66791,-4.21664 -0.11244,1.72084 1.50624,5.91795 2.32627,2.4032 -0.18143,-1.96481 2.0358,-5.90396 2.64134,-2.18138 -0.54349,2.14656 0.3421,8.4495 2.30682,4.16743 0.82547,-1.12968 0.61058,-5.88727 2.11182,-4.64806 0.36733,1.10792 -0.14231,3.01554 1.07099,3.50931"
               id="path2525-4-2-3-9-0-60-8-4"
               inkscape:connector-curvature="0"
               inkscape:export-filename="/home/dwblair/cloud001.png"
               inkscape:export-xdpi="96"
               inkscape:export-ydpi="96" />
            <path
               style="fill:none;stroke:#000000;stroke-width:0.44025177px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
               d="m -753.56256,609.67563 c -0.23235,-2.11773 2.04186,-7.40618 3.66791,-4.21664 -0.11244,1.72084 1.50624,5.91795 2.32627,2.40319 -0.18143,-1.9648 2.0358,-5.90396 2.64134,-2.18137 -0.54349,2.14656 0.3421,8.4495 2.30682,4.16743 0.82547,-1.12969 0.61058,-5.88728 2.11182,-4.64806 0.36733,1.10792 -0.14231,3.01554 1.07099,3.50931"
               id="path2525-4-2-3-9-0-3-5-2-9"
               inkscape:connector-curvature="0"
               inkscape:export-filename="/home/dwblair/cloud001.png"
               inkscape:export-xdpi="96"
               inkscape:export-ydpi="96" />
          </g>
          <text
             inkscape:export-ydpi="96"
             inkscape:export-xdpi="96"
             inkscape:export-filename="/home/dwblair/cloud001.png"
             id="text2576-9-8-7-1-4-0-5-5"
             y="611.12762"
             x="-751.23499"
             style="font-style:normal;font-weight:normal;font-size:7.8675561px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.19668888"
             xml:space="preserve"><tspan
               style="stroke-width:0.19668888"
               y="611.12762"
               x="-751.23499"
               id="tspan2574-2-9-5-4-0-2-3-0"
               sodipodi:role="line">Cellular</tspan></text>
        </g>
      </g>
    </g>
    <rect
       id="rect10-7-6-3-1-3-7-0-4"
       width="45.543869"
       height="6.6879029"
       x="390.81882"
       y="-38.255562"
       style="fill:#e3dbdb;stroke:#000000;stroke-width:0.12747304"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <rect
       id="rect10-7-6-3-1-6-6-6-1-8"
       width="45.543869"
       height="6.6879029"
       x="390.81882"
       y="-31.567667"
       style="fill:#ffd5d5;stroke:#000000;stroke-width:0.12747304"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <rect
       id="rect10-7-6-3-1-3-7-0-2-7"
       width="45.543869"
       height="6.6879029"
       x="390.81882"
       y="-44.943451"
       style="fill:#00ffff;stroke:#000000;stroke-width:0.12747304"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501806px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="398.72656"
       y="-40.858482"
       id="text14-4-4-1-1-2-8-1-1"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-78-5-2-5-9-5-0-7"
         x="398.72656"
         y="-40.858482"
         style="stroke-width:0.06087548">User owned / controlled</tspan></text>
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501806px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="397.27576"
       y="-34.375435"
       id="text14-4-4-1-1-2-8-1-3-2"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-78-5-2-5-9-5-0-1-7"
         x="397.27576"
         y="-34.375435"
         style="stroke-width:0.06087548">Mixed ownership / control</tspan></text>
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501806px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="393.43445"
       y="-27.565943"
       id="text14-4-4-1-1-2-8-1-3-1-2"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-78-5-2-5-9-5-0-1-9-2"
         x="393.43445"
         y="-27.565943"
         style="stroke-width:0.06087548">Commercially owned / controlled</tspan></text>
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.93665266px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.0734163"
       x="656.7821"
       y="6.8605142"
       id="text14-4-1-6-4-3-8-2-0-6"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         x="656.7821"
         y="6.8605142"
         style="stroke-width:0.0734163"
         id="tspan9579-6-1">On-Site Location</tspan></text>
    <path
       style="fill:none;stroke:#000000;stroke-width:0.15108892;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="m 639.92055,49.815029 c 10.97386,23.85266 41.94552,19.98772 56.03834,2.20519 3.68194,-4.09852 7.18931,-8.46807 11.41762,-11.85014"
       id="path10393-0"
       inkscape:connector-curvature="0" />
    <path
       style="fill:none;stroke:#000000;stroke-width:0.15689673;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="m 611.36129,68.255149 c 25.16836,13.72076 58.47026,12.4474 81.01985,-6.27507 6.66727,-5.75687 12.07707,-13.1877 15.15378,-21.64641"
       id="path10395-6"
       inkscape:connector-curvature="0" />
    <g
       transform="matrix(0.11569388,-0.29870694,0.29870694,0.11569388,549.84243,-222.68802)"
       id="g8769-9-1-7-1"
       inkscape:transform-center-x="5.4453713"
       inkscape:transform-center-y="-2.1135835">
      <g
         id="g9469-9-7-5">
        <g
           id="g9476-9-4-9"
           transform="rotate(94.976782,-732.47987,632.77191)">
          <g
             transform="matrix(0.5116404,0,0,1,-374.91571,0)"
             id="g8719-93-7-0-4">
            <path
               style="fill:none;stroke:#000000;stroke-width:0.44025177px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
               d="m -767.68771,610.64177 c -0.23235,-2.11773 2.04186,-7.40617 3.66791,-4.21664 -0.11244,1.72084 1.50624,5.91795 2.32627,2.4032 -0.18143,-1.96481 2.0358,-5.90396 2.64134,-2.18138 -0.54349,2.14656 0.3421,8.4495 2.30682,4.16743 0.82547,-1.12968 0.61058,-5.88727 2.11182,-4.64806 0.36733,1.10792 -0.14231,3.01554 1.07099,3.50931"
               id="path2525-4-2-3-9-0-60-8-6-9"
               inkscape:connector-curvature="0"
               inkscape:export-filename="/home/dwblair/cloud001.png"
               inkscape:export-xdpi="96"
               inkscape:export-ydpi="96" />
            <path
               style="fill:none;stroke:#000000;stroke-width:0.44025177px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
               d="m -753.56256,609.67563 c -0.23235,-2.11773 2.04186,-7.40618 3.66791,-4.21664 -0.11244,1.72084 1.50624,5.91795 2.32627,2.40319 -0.18143,-1.9648 2.0358,-5.90396 2.64134,-2.18137 -0.54349,2.14656 0.3421,8.4495 2.30682,4.16743 0.82547,-1.12969 0.61058,-5.88728 2.11182,-4.64806 0.36733,1.10792 -0.14231,3.01554 1.07099,3.50931"
               id="path2525-4-2-3-9-0-3-5-2-4-0"
               inkscape:connector-curvature="0"
               inkscape:export-filename="/home/dwblair/cloud001.png"
               inkscape:export-xdpi="96"
               inkscape:export-ydpi="96" />
          </g>
          <text
             inkscape:export-ydpi="96"
             inkscape:export-xdpi="96"
             inkscape:export-filename="/home/dwblair/cloud001.png"
             id="text2576-9-8-7-1-4-0-5-7-9"
             y="611.12762"
             x="-751.23499"
             style="font-style:normal;font-weight:normal;font-size:7.8675561px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.19668888"
             xml:space="preserve"><tspan
               style="stroke-width:0.19668888"
               y="611.12762"
               x="-751.23499"
               id="tspan2574-2-9-5-4-0-2-3-4-1"
               sodipodi:role="line">Cellular</tspan></text>
        </g>
      </g>
    </g>
    <path
       style="fill:none;stroke:#000000;stroke-width:0.147487;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="m 709.25772,66.739009 c -20.14259,16.82942 -47.18719,23.34701 -73.02781,21.8339 -32.69722,-1.83547 -64.36797,-13.61498 -92.08854,-30.70111"
       id="path10464-7"
       inkscape:connector-curvature="0" />
    <path
       style="fill:none;stroke:#000000;stroke-width:0.14610039;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="m 707.14183,-15.821295 c 35.79725,19.365281 31.52237,74.572354 1.47957,97.371824 -27.87137,22.017011 -66.06743,17.15435 -99.00384,13.71825 -28.12708,-4.58122 -55.89307,-16.22812 -75.85946,-37.06616"
       id="path10468-7"
       inkscape:connector-curvature="0" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.52020979px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06300524"
       x="614.17676"
       y="318.76965"
       id="text2576-9-8-7-1-4-0-5-6-1"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"
       transform="rotate(-19.78235)"><tspan
         sodipodi:role="line"
         id="tspan2574-2-9-5-4-0-2-3-46-1"
         x="614.17676"
         y="318.76965"
         style="stroke-width:0.06300524">mix</tspan></text>
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.52020979px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06300524"
       x="637.28705"
       y="189.42479"
       id="text2576-9-8-7-1-4-0-5-6-2-5"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"
       transform="rotate(-8.7098422)"
       inkscape:transform-center-x="-5.1704812"
       inkscape:transform-center-y="12.340889"><tspan
         sodipodi:role="line"
         id="tspan2574-2-9-5-4-0-2-3-46-8-9"
         x="637.28705"
         y="189.42479"
         style="stroke-width:0.06300524">mix</tspan></text>
    <path
       style="fill:#ffd5d5;stroke:#000000;stroke-width:0.03871353"
       d="m 709.99308,65.452139 c -0.33001,-0.16699 -0.62182,-0.30405 -0.64844,-0.30469 -0.0267,0 -0.0484,-0.019 -0.0484,-0.0399 0,-0.0215 -0.0349,-0.0386 -0.0776,-0.0386 -0.0426,0 -0.0773,-0.017 -0.0773,-0.0388 0,-0.0216 -0.0209,-0.0388 -0.0465,-0.0388 -0.0254,0 -0.25866,-0.10457 -0.51795,-0.23225 -0.25929,-0.12765 -0.48953,-0.2323 -0.51163,-0.2323 -0.022,0 -0.0459,-0.0133 -0.0531,-0.0308 -0.0151,-0.0348 -0.44048,-0.24039 -0.49789,-0.24039 -0.0206,0 -0.0376,-0.017 -0.0376,-0.0388 0,-0.0215 -0.0349,-0.0386 -0.0773,-0.0386 -0.0426,0 -0.0773,-0.017 -0.0773,-0.0388 0,-0.0216 -0.0217,-0.0386 -0.0479,-0.0386 -0.0607,0 -0.47054,-0.20327 -0.48773,-0.24197 -0.007,-0.0151 -0.035,-0.0292 -0.0621,-0.0292 -0.0271,0 -0.2041,-0.0781 -0.39359,-0.1736 -0.1895,-0.0955 -0.36632,-0.17398 -0.39293,-0.17417 -0.0267,-2.4e-4 -0.0484,-0.017 -0.0484,-0.0393 0,-0.0215 -0.0188,-0.0388 -0.0421,-0.0388 -0.0233,0 -0.38037,-0.1666 -0.79359,-0.37004 -0.83939,-0.4133 -0.79537,-0.36425 -0.69086,-0.76948 0.0333,-0.12916 0.0782,-0.30449 0.0995,-0.38967 0.0212,-0.0851 0.0552,-0.20834 0.0749,-0.27373 0.0198,-0.0654 0.036,-0.15715 0.036,-0.2038 0,-0.0468 0.0151,-0.11517 0.0345,-0.15204 0.0188,-0.037 0.064,-0.2066 0.10025,-0.37694 0.0362,-0.17038 0.0818,-0.33997 0.10121,-0.37692 0.0193,-0.0371 0.0352,-0.1112 0.0352,-0.16509 0,-0.0539 0.0151,-0.12803 0.0352,-0.16509 0.0193,-0.0371 0.0821,-0.27628 0.13957,-0.53178 0.0574,-0.2555 0.11991,-0.49481 0.13901,-0.53178 0.019,-0.0371 0.0349,-0.1112 0.0349,-0.16509 0,-0.0539 0.0151,-0.12803 0.0345,-0.16509 0.0188,-0.0371 0.064,-0.2066 0.10047,-0.37692 0.0363,-0.17039 0.0816,-0.33998 0.10117,-0.37695 0.0193,-0.0371 0.0352,-0.11875 0.0352,-0.18154 0,-0.063 0.0151,-0.12405 0.0347,-0.13577 0.0191,-0.0114 0.0431,-0.0868 0.0533,-0.1668 0.0249,-0.19415 0.18119,-0.825 0.2254,-0.90947 0.0193,-0.0371 0.0352,-0.1112 0.0352,-0.16509 0,-0.0539 0.0151,-0.12803 0.0349,-0.16509 0.0193,-0.0371 0.082,-0.27626 0.13975,-0.53178 0.0577,-0.25552 0.11933,-0.49941 0.13693,-0.54199 0.0172,-0.0426 0.0399,-0.12973 0.0496,-0.19357 0.0204,-0.13427 0.16454,-0.71828 0.22061,-0.89316 0.0209,-0.0654 0.038,-0.16566 0.038,-0.2226 0,-0.0571 0.0151,-0.10363 0.0347,-0.10363 0.0191,0 0.0431,-0.0654 0.0533,-0.14523 0.0251,-0.194 0.18114,-0.82483 0.22535,-0.90923 0.0193,-0.0371 0.0352,-0.11876 0.0352,-0.18154 0,-0.063 0.0151,-0.12406 0.0347,-0.13578 0.019,-0.0114 0.0437,-0.0868 0.0546,-0.16679 0.0114,-0.08 0.0486,-0.25866 0.0842,-0.39706 0.0352,-0.13843 0.0791,-0.32131 0.0974,-0.40648 0.019,-0.0851 0.051,-0.21583 0.0726,-0.29036 0.0913,-0.31525 0.24746,-0.95936 0.26527,-1.09366 0.009,-0.0798 0.0329,-0.14505 0.0499,-0.14505 0.0172,0 0.0389,-0.0654 0.0491,-0.14523 0.0249,-0.194 0.18116,-0.82482 0.22537,-0.90925 0.0193,-0.0371 0.0352,-0.11989 0.0352,-0.18438 0,-0.0645 0.0151,-0.1475 0.0352,-0.18437 0.0443,-0.0845 0.2006,-0.71531 0.22542,-0.90948 0.009,-0.08 0.0342,-0.15507 0.0533,-0.16679 0.0188,-0.0113 0.0347,-0.0728 0.0347,-0.13578 0,-0.063 0.0151,-0.14467 0.0352,-0.18154 0.0329,-0.0628 0.16242,-0.56429 0.23749,-0.91892 0.0188,-0.0851 0.0499,-0.22456 0.0707,-0.30971 0.12386,-0.50433 0.17092,-0.71071 0.18796,-0.82302 0.009,-0.0694 0.0347,-0.13578 0.0535,-0.1475 0.019,-0.0113 0.0345,-0.0728 0.0345,-0.13578 0,-0.063 0.0151,-0.14467 0.0356,-0.18154 0.0196,-0.0371 0.0645,-0.20658 0.0994,-0.37693 0.0352,-0.17038 0.0802,-0.34974 0.10007,-0.39863 0.0196,-0.049 0.0357,-0.1405 0.0357,-0.20325 0,-0.0628 0.0151,-0.11422 0.0347,-0.11422 0.0193,0 0.0433,-0.0653 0.0538,-0.14504 0.009,-0.0798 0.0662,-0.3281 0.12367,-0.55168 0.0576,-0.22356 0.11268,-0.45873 0.1229,-0.52263 0.009,-0.0639 0.0329,-0.1509 0.0505,-0.19356 0.0172,-0.0425 0.0794,-0.28648 0.1371,-0.542 0.0578,-0.25549 0.12065,-0.50456 0.13976,-0.55347 0.0188,-0.049 0.0347,-0.1318 0.0347,-0.18437 0,-0.0526 0.0151,-0.12576 0.0356,-0.16263 0.0196,-0.0371 0.0645,-0.2066 0.0994,-0.37694 0.0352,-0.17039 0.0802,-0.34974 0.10007,-0.39864 0.0196,-0.049 0.0359,-0.14031 0.0359,-0.20325 0,-0.0628 0.0172,-0.11422 0.0388,-0.11422 0.0212,0 0.0388,-0.0613 0.0388,-0.13596 0,-0.0747 0.0151,-0.16623 0.0352,-0.20325 0.0564,-0.10779 0.19346,-0.78666 0.17074,-0.8457 -0.0114,-0.0295 -0.0416,-0.0539 -0.0673,-0.0539 -0.0653,0 -0.28659,-0.22335 -0.36232,-0.36542 -0.0932,-0.17474 -0.0852,-0.66314 0.0132,-0.81582 0.22551,-0.34928 0.46099,-0.48345 0.84852,-0.48345 0.14221,0 0.25207,0.017 0.25207,0.0388 0,0.0212 0.0349,0.0388 0.0774,0.0388 0.0426,0 0.0775,0.017 0.0775,0.0388 0,0.0212 0.019,0.0388 0.0405,0.0388 0.0526,0 0.23051,0.17795 0.23051,0.23052 0,0.0223 0.0151,0.0405 0.0335,0.0405 0.0487,0 0.16018,0.31219 0.16018,0.44928 0,0.19477 -0.11782,0.47907 -0.26477,0.63891 -0.0762,0.0828 -0.15981,0.15071 -0.18589,0.15071 -0.0686,0 -0.10592,0.15053 -0.0607,0.24658 0.0491,0.10514 0.20566,0.73381 0.23008,0.92475 0.009,0.08 0.0343,0.15507 0.0533,0.16679 0.0188,0.0114 0.0347,0.0632 0.0347,0.11422 0,0.0511 0.0172,0.13275 0.0359,0.18154 0.0196,0.049 0.0645,0.22831 0.0999,0.39864 0.0352,0.17038 0.0801,0.33995 0.0994,0.37692 0.0198,0.0371 0.0356,0.11119 0.0356,0.16509 0,0.0539 0.0151,0.12802 0.0352,0.16509 0.0443,0.0845 0.20061,0.71532 0.22543,0.90948 0.009,0.08 0.0342,0.15506 0.0533,0.16679 0.019,0.0113 0.0347,0.0728 0.0347,0.13577 0,0.063 0.0151,0.14467 0.0352,0.18154 0.0442,0.0845 0.20055,0.71525 0.2254,0.90928 0.009,0.0798 0.0342,0.14504 0.0531,0.14504 0.019,0 0.0347,0.0514 0.0347,0.11422 0,0.0628 0.0172,0.15431 0.036,0.20323 0.0198,0.049 0.0646,0.2283 0.10007,0.39863 0.0352,0.17038 0.08,0.33997 0.0994,0.37694 0.0196,0.0371 0.0356,0.1112 0.0356,0.16509 0,0.0539 0.0151,0.12822 0.0352,0.16509 0.0443,0.0845 0.20058,0.71535 0.2254,0.9095 0.009,0.08 0.0343,0.15507 0.0533,0.16679 0.0191,0.0114 0.0347,0.0584 0.0347,0.10344 0,0.0452 0.0172,0.13559 0.038,0.20096 0.0696,0.21702 0.20429,0.77484 0.22281,0.92244 0.009,0.08 0.0339,0.15506 0.0528,0.16678 0.019,0.0114 0.0347,0.0584 0.0347,0.10345 0,0.0452 0.0172,0.13558 0.0389,0.20096 0.0511,0.15563 0.1955,0.7449 0.21894,0.89316 0.009,0.0639 0.0327,0.1509 0.0503,0.19357 0.047,0.11421 0.20188,0.7514 0.22336,0.91944 0.009,0.08 0.0342,0.14504 0.0533,0.14504 0.0188,0 0.0347,0.0613 0.0347,0.13597 0,0.0747 0.0151,0.16622 0.0352,0.20325 0.0443,0.0845 0.20053,0.71525 0.22534,0.90925 0.009,0.08 0.0323,0.14504 0.0491,0.14504 0.0172,0 0.0396,0.0654 0.0505,0.14524 0.0114,0.0798 0.0491,0.25841 0.085,0.39679 0.0359,0.13843 0.0742,0.3171 0.0849,0.39709 0.0114,0.08 0.0355,0.15506 0.0546,0.16679 0.0188,0.0113 0.0347,0.0728 0.0347,0.13578 0,0.063 0.0153,0.14466 0.0352,0.18153 0.0443,0.0845 0.20056,0.71533 0.2254,0.9095 0.009,0.08 0.0343,0.15507 0.0533,0.16679 0.019,0.0114 0.0347,0.0584 0.0347,0.10344 0,0.0452 0.0172,0.13559 0.038,0.20099 0.0694,0.21678 0.20429,0.77476 0.22281,0.92218 0.009,0.08 0.0319,0.14523 0.0487,0.14523 0.0172,0 0.0388,0.0652 0.0488,0.14505 0.0188,0.1475 0.15335,0.7054 0.22278,0.92219 0.0209,0.0654 0.038,0.15714 0.038,0.20378 0,0.0467 0.0154,0.11516 0.0352,0.15203 0.0443,0.0845 0.20055,0.71524 0.22537,0.90924 0.009,0.0798 0.0342,0.14504 0.0533,0.14504 0.0193,0 0.0347,0.0467 0.0347,0.10363 0,0.0571 0.0172,0.15715 0.038,0.2226 0.0694,0.2168 0.20428,0.77478 0.2228,0.92218 0.009,0.0798 0.0319,0.14524 0.0487,0.14524 0.0172,0 0.0388,0.0652 0.0487,0.14504 0.019,0.1475 0.15335,0.70538 0.22278,0.92219 0.0209,0.0654 0.0379,0.15714 0.0379,0.20378 0,0.0467 0.0151,0.11516 0.0352,0.15204 0.0442,0.0845 0.20058,0.71521 0.22538,0.90923 0.009,0.08 0.0342,0.14505 0.0533,0.14505 0.019,0 0.0347,0.0468 0.0347,0.10363 0,0.0571 0.0172,0.15714 0.0367,0.2226 0.0807,0.26068 0.15677,0.59376 0.15677,0.68634 0,0.0875 -0.0655,0.13086 -0.6291,0.41418 -0.346,0.17398 -0.64942,0.31613 -0.67426,0.31581 -0.0249,-2.2e-4 -0.0508,0.0113 -0.058,0.0286 -0.0172,0.039 -1.82094,0.93881 -1.88159,0.93881 -0.0262,0 -0.0477,0.017 -0.0477,0.0386 0,0.0215 -0.0313,0.0388 -0.0696,0.0388 -0.0384,0 -0.0861,0.0151 -0.10647,0.0339 -0.0679,0.0626 -0.40677,0.23709 -0.46072,0.23709 -0.0296,0 -0.0594,0.0133 -0.0664,0.0291 -0.0172,0.0386 -0.42698,0.24196 -0.48776,0.24196 -0.0262,0 -0.0478,0.017 -0.0478,0.0388 0,0.0216 -0.0246,0.0386 -0.0542,0.0386 -0.03,0 -0.16226,0.0611 -0.29408,0.13558 -0.13182,0.0747 -0.26416,0.1356 -0.29408,0.1356 -0.03,0 -0.0542,0.017 -0.0542,0.0388 0,0.0212 -0.0246,0.0388 -0.0542,0.0388 -0.03,0 -0.16225,0.0609 -0.29406,0.13558 -0.13179,0.0745 -0.26276,0.13559 -0.29086,0.13559 -0.0281,0 -0.057,0.0133 -0.0638,0.0292 -0.0132,0.0314 -0.42786,0.24522 -0.45873,0.23699 -0.009,-0.004 -0.28877,-0.14165 -0.61881,-0.30856 z m 0.28998,-5.56481 c -0.0114,-0.0113 -0.0409,2.5e-4 -0.066,0.0255 -0.0251,0.0252 -0.0772,0.046 -0.11555,0.046 -0.0384,0 -0.07,0.0132 -0.0702,0.0291 0,0.0151 -0.12197,0.0813 -0.2704,0.14524 -0.14846,0.0639 -0.27012,0.12915 -0.27046,0.14504 0,0.0151 -0.0339,0.0293 -0.0747,0.0293 -0.0407,0 -0.08,0.0132 -0.087,0.0291 -0.0172,0.0386 -0.42701,0.24194 -0.48778,0.24194 -0.0262,0 -0.0478,0.017 -0.0478,0.0388 0,0.0216 -0.0349,0.0386 -0.0773,0.0386 -0.0426,0 -0.0773,0.0132 -0.0773,0.0301 0,0.017 -0.0871,0.0639 -0.1936,0.10533 -0.10625,0.0412 -0.19354,0.0887 -0.19354,0.10533 0,0.017 -0.0349,0.0301 -0.0776,0.0301 -0.0426,0 -0.0777,0.0132 -0.0782,0.0291 0,0.0151 -0.12199,0.0813 -0.27043,0.14524 -0.14845,0.0639 -0.27008,0.12915 -0.27043,0.14504 0,0.0151 -0.0354,0.0291 -0.0782,0.0291 -0.0426,0 -0.0778,0.0133 -0.0782,0.0292 0,0.0151 -0.12197,0.0813 -0.27043,0.14504 -0.14849,0.0641 -0.27012,0.12916 -0.27043,0.14506 0,0.017 -0.0222,0.0291 -0.0484,0.0291 -0.0607,0 -0.47056,0.20327 -0.48779,0.24194 -0.007,0.0151 -0.0464,0.0292 -0.087,0.0292 -0.0408,0 -0.0741,0.017 -0.0741,0.0388 0,0.0215 -0.0217,0.0386 -0.0478,0.0386 -0.0607,0 -0.47058,0.20327 -0.48776,0.24198 -0.007,0.0151 -0.0463,0.0291 -0.0872,0.0291 -0.0408,0 -0.0742,0.017 -0.0742,0.0386 0,0.0215 -0.033,0.0388 -0.0734,0.0388 -0.0403,0 -0.0834,0.0263 -0.0956,0.058 -0.0132,0.0354 -8e-5,0.058 0.0347,0.058 0.0311,0 0.057,0.017 0.057,0.0386 0,0.0215 0.0349,0.0388 0.0773,0.0388 0.0426,0 0.0775,0.017 0.0775,0.0386 0,0.0216 0.0217,0.0388 0.0477,0.0388 0.0607,0 0.47059,0.2033 0.48779,0.24197 0.007,0.0151 0.0464,0.0291 0.0872,0.0291 0.0407,0 0.0741,0.017 0.0741,0.0388 0,0.0216 0.0172,0.0386 0.0376,0.0386 0.0575,0 0.48326,0.20559 0.4979,0.2404 0.007,0.017 0.0329,0.0304 0.0576,0.0304 0.0586,0 0.46786,0.20446 0.48455,0.24196 0.007,0.0151 0.0463,0.0292 0.0871,0.0292 0.0409,0 0.0741,0.017 0.0741,0.0386 0,0.0216 0.0217,0.0388 0.0478,0.0388 0.0607,0 0.47056,0.20329 0.48776,0.24196 0.007,0.0151 0.0333,0.0288 0.0581,0.0288 0.0586,-2.3e-4 0.62188,0.28156 0.63879,0.31955 0.007,0.0151 0.0318,0.0291 0.0546,0.0291 0.0567,0 0.62622,0.28314 0.64228,0.3194 0.007,0.0151 0.0329,0.0292 0.0576,0.0292 0.0584,0 0.46786,0.20443 0.48453,0.24194 0.007,0.017 0.0358,0.0291 0.0634,0.0291 0.0278,0 0.10025,0.0259 0.16132,0.0575 l 0.11099,0.0575 0.009,-2.50265 c 0.005,-1.37643 0.004,-2.51176 -0.009,-2.52292 z m 0.82625,4.94411 c 0.007,-0.019 0.0463,-0.0337 0.0871,-0.0337 0.0407,0 0.0742,-0.017 0.0742,-0.0388 0,-0.0215 0.0217,-0.0386 0.0479,-0.0386 0.0607,0 0.47056,-0.20328 0.48773,-0.24197 0.007,-0.0151 0.0333,-0.0288 0.058,-0.0288 0.0586,2.4e-4 0.62188,-0.28157 0.63878,-0.31957 0.007,-0.017 0.0315,-0.0292 0.0546,-0.0292 0.0568,0 0.62621,-0.28314 0.64233,-0.31939 0.007,-0.0151 0.0329,-0.0291 0.0575,-0.0291 0.0587,0 1.16472,-0.55251 1.18139,-0.59021 0.007,-0.017 0.0315,-0.0291 0.0546,-0.0291 0.0568,0 0.62619,-0.28313 0.6423,-0.31937 0.007,-0.0151 0.0327,-0.0291 0.057,-0.0291 0.0718,0 0.76248,-0.35599 0.76248,-0.39304 0,-0.019 -0.0653,-0.0643 -0.14523,-0.10117 -0.08,-0.0368 -0.15089,-0.0801 -0.15809,-0.0962 -0.007,-0.0151 -0.0463,-0.0291 -0.0872,-0.0291 -0.0407,0 -0.0744,-0.0133 -0.0747,-0.0292 0,-0.017 -0.122,-0.0813 -0.27046,-0.14504 -0.14843,-0.064 -0.27008,-0.12917 -0.27043,-0.14505 0,-0.017 -0.0222,-0.0292 -0.0484,-0.0292 -0.0607,0 -0.47059,-0.20329 -0.48776,-0.24195 -0.007,-0.017 -0.0464,-0.0292 -0.0872,-0.0292 -0.0407,0 -0.0741,-0.017 -0.0741,-0.0388 0,-0.0215 -0.0217,-0.0386 -0.0478,-0.0386 -0.0607,0 -0.47059,-0.20331 -0.48776,-0.24199 -0.007,-0.017 -0.0463,-0.0293 -0.0871,-0.0293 -0.0407,0 -0.0744,-0.0133 -0.0747,-0.0291 0,-0.0151 -0.12197,-0.0813 -0.27043,-0.14523 -0.14843,-0.0639 -0.27009,-0.12916 -0.27043,-0.14504 0,-0.0151 -0.0222,-0.0291 -0.0484,-0.0291 -0.0607,0 -0.47059,-0.20329 -0.48776,-0.24196 -0.007,-0.0151 -0.0464,-0.0291 -0.0871,-0.0291 -0.0407,0 -0.0742,-0.017 -0.0742,-0.0388 0,-0.0216 -0.0217,-0.0386 -0.0478,-0.0386 -0.0607,0 -0.47056,-0.20329 -0.48776,-0.24198 -0.007,-0.0151 -0.0463,-0.0291 -0.087,-0.0291 -0.0407,0 -0.0742,-0.017 -0.0742,-0.0386 0,-0.0216 -0.0172,-0.0388 -0.0376,-0.0388 -0.0574,0 -0.48316,-0.20558 -0.4979,-0.24041 -0.007,-0.017 -0.0464,-0.0305 -0.0872,-0.0305 -0.0724,0 -0.0741,0.0622 -0.0741,2.51901 v 2.51898 l 0.0871,-0.0268 c 0.048,-0.0151 0.0928,-0.0421 0.10004,-0.0607 z m -5.98768,-3.04546 c 0.0151,-0.038 2.36106,-1.2079 2.42141,-1.2079 0.0238,0 0.0491,-0.0132 0.0562,-0.0291 0.0172,-0.0384 0.58356,-0.31939 0.6437,-0.31939 0.0257,0 0.0467,-0.017 0.0467,-0.0388 0,-0.0216 0.0201,-0.0388 0.0447,-0.0388 0.0611,0 0.47501,-0.20281 0.49101,-0.24055 0.007,-0.017 0.0463,-0.0305 0.0871,-0.0305 0.0408,0 0.0741,-0.0151 0.0741,-0.0359 0,-0.0197 0.0305,-0.0452 0.0679,-0.0566 0.0372,-0.0113 0.0241,-0.0132 -0.0292,-0.006 -0.15034,0.0242 -0.38714,0.11346 -0.38714,0.14598 0,0.0151 -0.0262,0.0291 -0.0586,0.0291 -0.0323,0 -0.0889,0.0151 -0.12575,0.0344 -0.037,0.0189 -0.13693,0.065 -0.2221,0.1025 -0.0852,0.0375 -0.18513,0.0828 -0.22206,0.10117 -0.037,0.0189 -0.0936,0.0331 -0.12576,0.0331 -0.0323,0 -0.0586,0.017 -0.0586,0.0386 0,0.0216 -0.0339,0.0388 -0.0753,0.0388 -0.0411,0 -0.0858,0.017 -0.0989,0.0386 -0.0132,0.0216 -0.0486,0.0388 -0.0787,0.0388 -0.0301,0 -0.15526,0.0454 -0.2784,0.1008 -0.12292,0.0554 -0.25849,0.11573 -0.30107,0.13426 -0.0426,0.0189 -0.17983,0.0775 -0.30487,0.13162 -0.12499,0.0539 -0.25136,0.0981 -0.28067,0.0981 -0.0292,0 -0.0533,0.017 -0.0533,0.0388 0,0.0216 -0.0435,0.0386 -0.0968,0.0386 -0.0533,0 -0.0968,0.017 -0.0968,0.0388 0,0.0216 -0.0262,0.0388 -0.0583,0.0388 -0.0319,0 -0.14861,0.0435 -0.25887,0.0968 -0.11025,0.0533 -0.22349,0.0968 -0.25146,0.0968 -0.0278,0 -0.0508,0.017 -0.0508,0.0388 0,0.0216 -0.0292,0.0386 -0.0645,0.0386 -0.1235,0 -0.3547,0.12859 -0.39661,0.22065 -0.0515,0.1127 -0.0558,0.32134 -0.007,0.32134 0.0193,0 0.0411,-0.0133 0.0484,-0.031 z m 11.07162,-0.13048 c -0.0204,-0.21439 -0.0809,-0.27134 -0.44151,-0.41524 -0.048,-0.0192 -0.15071,-0.0628 -0.22847,-0.0968 -0.0777,-0.0341 -0.15203,-0.062 -0.16489,-0.062 -0.0132,0 -0.10628,-0.0369 -0.20709,-0.0819 -0.10078,-0.045 -0.24442,-0.10836 -0.31895,-0.1405 -0.0744,-0.0323 -0.2041,-0.0911 -0.28792,-0.13106 -0.084,-0.0399 -0.18402,-0.0724 -0.22265,-0.0724 -0.0386,0 -0.07,-0.017 -0.07,-0.0386 0,-0.0212 -0.0339,-0.0388 -0.0753,-0.0388 -0.0411,0 -0.086,-0.017 -0.0989,-0.0388 -0.0132,-0.0216 -0.0486,-0.0388 -0.0787,-0.0388 -0.0301,0 -0.15547,-0.0454 -0.27839,-0.10079 -0.12311,-0.0554 -0.25853,-0.11573 -0.3011,-0.13426 -0.0426,-0.0189 -0.17984,-0.0775 -0.30482,-0.13162 -0.12499,-0.0539 -0.25138,-0.0982 -0.2807,-0.0982 -0.0292,0 -0.0533,-0.017 -0.0533,-0.0388 0,-0.0212 -0.0435,-0.0388 -0.0969,-0.0388 -0.0533,0 -0.0968,-0.017 -0.0968,-0.0388 0,-0.0212 -0.0306,-0.0393 -0.0679,-0.0399 -0.0372,-5.3e-4 -0.1016,-0.0268 -0.14295,-0.0579 -0.0411,-0.0312 -0.1197,-0.0547 -0.17415,-0.0524 -0.0656,0.004 -0.076,0.009 -0.0313,0.0221 0.0372,0.009 0.0679,0.0339 0.0679,0.0535 0,0.0197 0.0349,0.0357 0.0773,0.0357 0.0426,0 0.0776,0.017 0.0776,0.0388 0,0.0212 0.0204,0.0388 0.0452,0.0388 0.0249,0 0.48328,0.21775 1.01859,0.4839 0.53536,0.26614 0.99264,0.48392 1.01616,0.48392 0.0235,0 0.0486,0.0132 0.0558,0.0295 0.007,0.017 0.36134,0.20271 0.78719,0.4144 0.42584,0.21171 0.78007,0.39879 0.78718,0.41573 0.007,0.017 0.0339,0.0308 0.0591,0.0308 0.0308,0 0.0412,-0.0537 0.0308,-0.16149 z m -10.77751,-1.03531 c 0.17888,-0.0942 0.52054,-0.23559 0.56925,-0.23559 0.03,0 0.0655,-0.017 0.0787,-0.0386 0.0132,-0.0212 0.0577,-0.0388 0.0989,-0.0388 0.0412,0 0.0753,-0.017 0.0753,-0.0388 0,-0.0216 0.0435,-0.0388 0.0968,-0.0388 0.0533,0 0.0968,-0.017 0.0968,-0.0388 0,-0.0216 0.0257,-0.0388 0.0572,-0.0388 0.0507,0 0.38934,-0.13975 0.57155,-0.23558 0.037,-0.0195 0.0843,-0.0354 0.10552,-0.0354 0.0212,0 0.1388,-0.0454 0.26183,-0.10098 0.12293,-0.0554 0.25853,-0.1146 0.30112,-0.13162 0.0426,-0.017 0.17794,-0.076 0.30107,-0.13143 0.1229,-0.0554 0.24929,-0.10079 0.28065,-0.10079 0.0313,0 0.0572,-0.017 0.0572,-0.0388 0,-0.0212 0.0262,-0.0388 0.0586,-0.0388 0.0323,0 0.0889,-0.0151 0.12573,-0.0354 0.037,-0.0195 0.16301,-0.0736 0.28017,-0.12027 0.25667,-0.10231 0.38407,-0.1562 0.63876,-0.27116 0.10647,-0.048 0.23709,-0.0993 0.29038,-0.11365 0.14769,-0.0403 0.13502,-0.12897 -0.0285,-0.20221 -0.15716,-0.0704 -0.67243,-0.34986 -0.81206,-0.4405 -0.0473,-0.0305 -0.11252,-0.0558 -0.14523,-0.0558 -0.0327,0 -0.0594,-0.017 -0.0594,-0.0388 0,-0.0212 -0.0262,-0.0388 -0.0579,-0.0388 -0.0317,0 -0.0584,-0.0132 -0.0586,-0.0291 0,-0.0151 -0.10911,-0.0813 -0.24196,-0.14524 -0.13271,-0.0639 -0.25,-0.12499 -0.26067,-0.13559 -0.0276,-0.0278 -0.30331,-0.17832 -0.47423,-0.25926 -0.0801,-0.0378 -0.14505,-0.0821 -0.14505,-0.0983 0,-0.017 -0.0333,-0.0295 -0.0742,-0.0295 -0.0407,0 -0.08,-0.0132 -0.0871,-0.0291 -0.007,-0.0151 -0.0827,-0.0637 -0.16772,-0.10608 -0.0851,-0.0424 -0.16359,-0.086 -0.17417,-0.0974 -0.0114,-0.0114 -0.15431,-0.0896 -0.31933,-0.17455 -0.16491,-0.0849 -0.30001,-0.16868 -0.30003,-0.18608 -6e-5,-0.017 -0.0262,-0.006 -0.058,0.0265 -0.0319,0.032 -0.058,0.10174 -0.058,0.15526 0,0.0535 -0.0172,0.10817 -0.0388,0.12121 -0.0212,0.0132 -0.0388,0.0743 -0.0388,0.13597 0,0.0616 -0.0151,0.15204 -0.0347,0.20098 -0.0441,0.1129 -0.0983,0.3211 -0.18023,0.68899 -0.0355,0.1596 -0.08,0.3206 -0.0989,0.35756 -0.019,0.0371 -0.0347,0.11119 -0.0347,0.16508 0,0.0539 -0.0151,0.12803 -0.0352,0.16509 -0.0443,0.0845 -0.20053,0.71533 -0.22538,0.9095 -0.009,0.08 -0.0343,0.15507 -0.0533,0.16679 -0.019,0.0113 -0.0347,0.073 -0.0347,0.13578 0,0.063 -0.0151,0.14466 -0.0342,0.18154 -0.035,0.0688 -0.12062,0.40572 -0.12062,0.47423 0,0.0473 0.0212,0.048 0.10702,0.004 z m 10.50052,-0.0785 c 0,-0.0628 -0.0151,-0.12348 -0.0347,-0.13521 -0.019,-0.0113 -0.0438,-0.0868 -0.0548,-0.16679 -0.0114,-0.08 -0.0382,-0.2151 -0.0599,-0.30028 -0.13366,-0.52138 -0.16922,-0.67342 -0.187,-0.8033 -0.0114,-0.0798 -0.0339,-0.14523 -0.0507,-0.14523 -0.0172,0 -0.0391,-0.0652 -0.0499,-0.14504 -0.009,-0.08 -0.066,-0.3281 -0.12311,-0.55166 -0.0572,-0.22357 -0.11268,-0.45005 -0.12329,-0.50328 -0.0114,-0.0531 -0.0343,-0.13162 -0.0526,-0.17417 -0.0188,-0.0426 -0.0413,-0.12972 -0.0517,-0.19358 -0.0335,-0.21087 -0.14465,-0.61849 -0.17756,-0.65151 -0.0172,-0.017 -0.15791,0.0388 -0.31142,0.12576 -0.15335,0.0868 -0.30353,0.15809 -0.33356,0.15809 -0.03,0 -0.0546,0.0132 -0.0546,0.0291 -3e-5,0.0151 -0.13502,0.0987 -0.30004,0.18362 -0.16507,0.0849 -0.32192,0.17549 -0.34874,0.20087 -0.0269,0.0254 -0.1097,0.0681 -0.18384,0.0951 -0.0743,0.0268 -0.13501,0.0626 -0.13501,0.0798 0,0.017 -0.0349,0.031 -0.0774,0.031 -0.0426,0 -0.0775,0.0151 -0.0775,0.0342 0,0.0189 -0.0305,0.0439 -0.0677,0.0556 -0.0947,0.0299 -0.37478,0.19457 -0.39036,0.22959 -0.007,0.0151 -0.0463,0.0291 -0.0872,0.0291 -0.0407,0 -0.0742,0.0132 -0.0742,0.031 0,0.017 -0.0607,0.053 -0.13502,0.0798 -0.0743,0.0268 -0.15716,0.0696 -0.18401,0.0949 -0.0269,0.0254 -0.12706,0.0868 -0.22302,0.13691 -0.0958,0.0499 -0.27437,0.14315 -0.3968,0.20717 -0.12234,0.0641 -0.22256,0.12877 -0.22256,0.1439 0,0.0151 0.10025,0.0669 0.22256,0.11498 0.12235,0.048 0.25287,0.10344 0.28983,0.1233 0.037,0.0197 0.0936,0.0361 0.12575,0.0361 0.0323,0 0.0586,0.017 0.0586,0.0388 0,0.0212 0.0262,0.0388 0.0585,0.0388 0.0323,0 0.0889,0.017 0.12576,0.0369 0.0602,0.0329 0.23376,0.1076 0.45437,0.19543 0.0426,0.017 0.14107,0.0586 0.21876,0.0929 0.0778,0.0342 0.15205,0.062 0.16488,0.062 0.0132,0 0.10629,0.0365 0.20707,0.0813 0.10078,0.0446 0.21833,0.0955 0.2609,0.1129 0.0426,0.017 0.17645,0.0768 0.29766,0.13161 0.12102,0.055 0.24741,0.0998 0.28067,0.0998 0.0331,0 0.0605,0.017 0.0605,0.0388 0,0.0212 0.0262,0.0388 0.0586,0.0388 0.0323,0 0.0887,0.0151 0.12575,0.0354 0.037,0.0195 0.16301,0.0737 0.2802,0.12046 0.11705,0.0467 0.28257,0.11611 0.36774,0.15394 0.0851,0.0378 0.25069,0.10703 0.36783,0.15393 0.11705,0.0467 0.24315,0.10098 0.28011,0.12045 0.037,0.0195 0.0936,0.0354 0.12576,0.0354 0.0323,0 0.0586,0.017 0.0586,0.0386 0,0.0216 0.0172,0.0388 0.0386,0.0388 0.0212,0 0.0388,-0.0512 0.0388,-0.11384 z m -6.66922,-0.83866 c -0.0132,-0.0132 -0.0463,-0.0151 -0.0742,-0.004 -0.031,0.0114 -0.0217,0.0216 0.0233,0.0235 0.0407,10e-4 0.0635,-0.008 0.0507,-0.0204 z m 2.84625,-0.004 c -0.0267,-0.0113 -0.07,-0.0113 -0.0968,0 -0.0267,0.0114 -0.004,0.0195 0.0484,0.0195 0.0533,0 0.0751,-0.009 0.0484,-0.0195 z m -1.79051,-3.65409 v -2.16995 l -0.12954,0.0989 c -0.0713,0.0543 -0.14828,0.0989 -0.17095,0.0989 -0.0228,0 -0.0473,0.0132 -0.0545,0.031 -0.0198,0.0478 -0.52038,0.39483 -0.56946,0.39483 -0.0241,0 -0.0435,0.0132 -0.0435,0.0305 0,0.017 -0.0567,0.0635 -0.12573,0.1042 -0.0692,0.0407 -0.14599,0.0938 -0.17057,0.11819 -0.0246,0.0244 -0.13788,0.10344 -0.25167,0.17567 -0.11364,0.0722 -0.2126,0.14486 -0.21969,0.16112 -0.007,0.017 -0.0374,0.0297 -0.0679,0.0297 -0.0301,0 -0.0548,0.0132 -0.0548,0.0299 0,0.017 -0.0609,0.0626 -0.13557,0.10287 -0.0744,0.0401 -0.13542,0.0876 -0.13542,0.10552 0,0.0189 -0.0188,0.0325 -0.0417,0.0325 -0.0227,0 -0.24148,0.13937 -0.48569,0.3097 -0.24429,0.17038 -0.45927,0.3097 -0.47781,0.3097 -0.019,0 -0.0396,0.0132 -0.0466,0.0305 -0.007,0.017 -0.0696,0.0701 -0.1388,0.11876 -0.13124,0.0921 -0.16772,0.1992 -0.0677,0.1992 0.0318,0 0.0582,0.0132 0.0584,0.0291 0,0.0151 0.0394,0.0478 0.0871,0.0707 0.22546,0.10798 0.51393,0.27106 0.52555,0.29718 0.007,0.0151 0.0464,0.0291 0.087,0.0291 0.0409,0 0.0742,0.0151 0.0742,0.0327 0,0.0189 0.0742,0.0654 0.16451,0.10552 0.0906,0.0399 0.1732,0.0817 0.184,0.093 0.0114,0.0113 0.0714,0.0465 0.1356,0.0785 0.0638,0.0318 0.12498,0.0685 0.13557,0.0813 0.0114,0.0132 0.0891,0.0556 0.17417,0.0949 0.0853,0.0393 0.16357,0.0821 0.17418,0.0949 0.0114,0.0132 0.0978,0.0613 0.19351,0.10741 0.22821,0.10968 0.40334,0.21441 0.41945,0.25064 0.007,0.0151 0.0448,0.0291 0.084,0.0291 0.0392,0 0.0767,0.0132 0.084,0.0291 0.007,0.0151 0.0827,0.0637 0.16775,0.10608 0.0851,0.0424 0.16356,0.086 0.17415,0.0968 0.0301,0.0306 0.40298,0.22799 0.43555,0.23045 0.0172,10e-4 0.0292,-0.97427 0.0292,-2.16775 z m 0.8264,2.10219 c 0.0674,-0.0373 0.12782,-0.0807 0.13501,-0.0968 0.007,-0.0151 0.0448,-0.0291 0.084,-0.0291 0.0392,0 0.0767,-0.0132 0.084,-0.0291 0.0151,-0.0352 0.29543,-0.19966 0.39034,-0.22961 0.0372,-0.0113 0.0677,-0.0367 0.0677,-0.0556 0,-0.0189 0.0349,-0.0342 0.0775,-0.0342 0.0426,0 0.0773,-0.017 0.0773,-0.0388 0,-0.0212 0.0201,-0.0388 0.045,-0.0388 0.0249,0 0.22944,-0.10345 0.45487,-0.2299 0.71109,-0.39882 0.98853,-0.54838 1.0583,-0.5706 0.0372,-0.0113 0.0679,-0.0371 0.0679,-0.0558 0,-0.0189 0.0349,-0.0342 0.0773,-0.0342 0.0426,0 0.0775,-0.0151 0.0775,-0.0329 0,-0.0189 0.0742,-0.0654 0.16455,-0.10552 0.0906,-0.0399 0.1732,-0.0824 0.18399,-0.0947 0.0114,-0.0113 0.0775,-0.0495 0.14883,-0.0832 l 0.12951,-0.0613 -0.0883,-0.0823 c -0.0486,-0.0452 -0.10742,-0.0823 -0.13047,-0.0823 -0.0233,0 -0.0674,-0.0348 -0.0981,-0.0773 -0.0306,-0.0426 -0.0692,-0.0773 -0.086,-0.0773 -0.0172,0 -0.11481,-0.0609 -0.21868,-0.13559 -0.10361,-0.0745 -0.20034,-0.13559 -0.21471,-0.13559 -0.0151,0 -0.0731,-0.0437 -0.13047,-0.0968 -0.0576,-0.0531 -0.12255,-0.0968 -0.14467,-0.0968 -0.022,0 -0.0653,-0.0348 -0.0961,-0.0775 -0.0307,-0.0426 -0.0695,-0.0774 -0.0861,-0.0774 -0.0172,0 -0.11724,-0.0609 -0.22334,-0.13558 -0.10591,-0.0745 -0.21037,-0.13559 -0.23188,-0.13559 -0.0217,0 -0.0391,-0.0132 -0.0391,-0.0291 -8e-5,-0.0151 -0.0782,-0.0813 -0.17344,-0.14504 -0.0953,-0.0639 -0.17359,-0.12916 -0.17415,-0.14524 0,-0.0151 -0.019,-0.0291 -0.0405,-0.0291 -0.037,0 -0.34407,-0.18608 -0.38632,-0.23424 -0.0535,-0.0609 -0.5383,-0.38517 -0.57595,-0.38517 -0.0241,0 -0.0435,-0.0151 -0.0435,-0.0325 0,-0.017 -0.0609,-0.0654 -0.13557,-0.10552 -0.0744,-0.0401 -0.13557,-0.0876 -0.13557,-0.10514 0,-0.017 -0.0172,-0.0213 -0.0386,-0.008 -0.0566,0.0352 -0.0529,4.31656 0.004,4.31656 0.0233,0 0.0974,-0.0305 0.16451,-0.0679 z m -4.49287,-2.4494 c 0.21551,-0.18192 0.28554,-0.23144 0.32742,-0.23146 0.0267,-4e-5 0.0484,-0.017 0.0484,-0.0388 0,-0.0212 0.0262,-0.0388 0.0581,-0.0388 0.0319,0 0.058,-0.0132 0.058,-0.0299 0,-0.017 0.0609,-0.0626 0.13557,-0.10288 0.0744,-0.0401 0.13558,-0.0876 0.13558,-0.10552 0,-0.017 0.0262,-0.0325 0.0581,-0.0325 0.0318,0 0.0584,-0.0132 0.0587,-0.0291 0,-0.0151 0.0871,-0.0813 0.19283,-0.14523 0.10551,-0.0639 0.19246,-0.12916 0.19283,-0.14505 0,-0.0151 0.0269,-0.0291 0.0587,-0.0291 0.0319,0 0.0581,-0.0132 0.0581,-0.0299 0,-0.017 0.0609,-0.0626 0.13557,-0.10287 0.0744,-0.0401 0.1356,-0.0876 0.1356,-0.10552 0,-0.0189 0.0196,-0.0325 0.0438,-0.0325 0.0507,0 0.43389,-0.26697 0.45305,-0.31567 0.007,-0.0189 0.0292,-0.0327 0.0487,-0.0327 0.0198,0 0.12253,-0.0609 0.22862,-0.13559 0.1061,-0.0745 0.20894,-0.13559 0.22868,-0.13559 0.0196,0 0.0416,-0.0132 0.0488,-0.0297 0.0209,-0.0478 0.40627,-0.31872 0.45357,-0.31872 0.0238,0 0.0433,-0.0151 0.0433,-0.0322 0,-0.017 0.0433,-0.0552 0.0963,-0.0836 0.0744,-0.0399 0.0863,-0.0633 0.0533,-0.10325 -0.0236,-0.0284 -0.0669,-0.0518 -0.0963,-0.0518 -0.0294,0 -0.0533,-0.017 -0.0533,-0.0388 0,-0.0212 -0.0349,-0.0388 -0.0776,-0.0388 -0.0426,0 -0.0775,-0.0132 -0.078,-0.0291 0,-0.0151 -0.0742,-0.0635 -0.16451,-0.1059 -0.0902,-0.0422 -0.17286,-0.0859 -0.18341,-0.0968 -0.0114,-0.0114 -0.0716,-0.046 -0.1356,-0.0781 -0.0638,-0.0318 -0.12483,-0.0673 -0.1356,-0.0785 -0.0114,-0.0113 -0.0934,-0.0531 -0.18381,-0.093 -0.0906,-0.0399 -0.16451,-0.0874 -0.16451,-0.10552 0,-0.0189 -0.0333,-0.0329 -0.0742,-0.0329 -0.0408,0 -0.08,-0.0132 -0.0871,-0.0291 -0.007,-0.0151 -0.0913,-0.07 -0.18701,-0.1197 -0.38502,-0.20053 -0.75697,-0.40601 -0.79171,-0.43738 -0.0201,-0.0189 -0.048,-0.0331 -0.0616,-0.0331 -0.0325,0 -0.13216,0.33876 -0.25066,0.85169 -0.037,0.15979 -0.0813,0.3252 -0.0983,0.36777 -0.0172,0.0426 -0.0401,0.12973 -0.0508,0.19359 -0.0114,0.0639 -0.0364,0.18589 -0.0574,0.27098 -0.16867,0.69466 -0.21175,0.86149 -0.23966,0.92913 -0.0172,0.0426 -0.0399,0.12973 -0.0497,0.19357 -0.0196,0.12859 -0.16436,0.71389 -0.21772,0.88072 -0.0355,0.111 0.004,0.13936 0.0867,0.0669 z m 8.03503,-0.13578 c -0.0222,-0.0845 -0.0491,-0.21911 -0.06,-0.29895 -0.0114,-0.08 -0.0331,-0.14524 -0.0499,-0.14524 -0.0172,0 -0.0391,-0.0652 -0.0499,-0.14504 -0.009,-0.0798 -0.066,-0.32809 -0.12311,-0.55167 -0.0571,-0.22356 -0.1125,-0.45005 -0.1233,-0.50327 -0.0114,-0.0533 -0.0342,-0.13161 -0.0526,-0.17416 -0.019,-0.0426 -0.0412,-0.12954 -0.051,-0.19355 -0.03,-0.19448 -0.18568,-0.80869 -0.22317,-0.88023 -0.0193,-0.0371 -0.0352,-0.11875 -0.0352,-0.18154 0,-0.063 -0.0172,-0.12499 -0.0388,-0.13842 -0.0212,-0.0132 -0.0388,-0.0754 -0.0388,-0.13843 0,-0.063 -0.0204,-0.14693 -0.0452,-0.18664 -0.0435,-0.0696 -0.0521,-0.0686 -0.22262,0.0251 -0.0974,0.0537 -0.21646,0.11687 -0.26422,0.14069 -0.0479,0.0238 -0.0868,0.0562 -0.087,0.0722 0,0.0151 -0.0318,0.0291 -0.07,0.0291 -0.0384,0 -0.0862,0.0151 -0.10647,0.0339 -0.0386,0.0357 -0.29162,0.17606 -0.71424,0.39626 -0.13843,0.072 -0.26038,0.13993 -0.27101,0.1509 -0.0114,0.0114 -0.0891,0.0545 -0.17415,0.0968 -0.0851,0.0424 -0.16076,0.0902 -0.16775,0.10609 -0.007,0.0151 -0.0463,0.0291 -0.087,0.0291 -0.0408,0 -0.0743,0.0151 -0.0743,0.0314 0,0.017 -0.0604,0.0552 -0.1339,0.0842 -0.17169,0.0673 -0.20188,0.14523 -0.0783,0.20159 0.0528,0.024 0.0961,0.0584 0.0961,0.0762 0,0.0189 0.0262,0.0325 0.058,0.0325 0.032,0 0.0581,0.0132 0.0581,0.0299 0,0.017 0.0609,0.0626 0.13557,0.10287 0.0745,0.0401 0.1356,0.0877 0.1356,0.10552 0,0.017 0.0217,0.0325 0.0484,0.0327 0.0267,4e-5 0.10949,0.0524 0.18399,0.1163 0.0744,0.0639 0.16606,0.12613 0.20326,0.13805 0.0372,0.0113 0.0677,0.038 0.0677,0.058 0,0.0197 0.0246,0.0361 0.0548,0.0361 0.0301,0 0.0606,0.0132 0.0679,0.0297 0.007,0.017 0.10591,0.0889 0.21971,0.16111 0.11364,0.0722 0.22699,0.15129 0.25165,0.17568 0.0246,0.0244 0.10149,0.0775 0.17057,0.11819 0.0692,0.0407 0.12576,0.0876 0.12576,0.1042 0,0.017 0.0196,0.0305 0.0435,0.0305 0.0491,0 0.54961,0.34699 0.56951,0.39483 0.007,0.017 0.0316,0.031 0.0545,0.031 0.0228,0 0.0987,0.0435 0.16848,0.0968 0.0697,0.0533 0.14542,0.0968 0.16812,0.0968 0.023,0 0.0411,0.0132 0.0411,0.0305 0,0.017 0.0567,0.0633 0.12578,0.10344 0.0692,0.0403 0.13444,0.0847 0.14505,0.0989 0.023,0.0304 0.17018,0.11328 0.18153,0.10212 0.004,-0.004 -0.009,-0.0772 -0.0327,-0.16169 z m -4.36856,-4.35748 v -1.55185 l -0.2032,0.14788 c -0.11176,0.0813 -0.20908,0.16112 -0.2162,0.17757 -0.007,0.017 -0.0298,0.0297 -0.0501,0.0297 -0.0352,0 -0.0801,0.0316 -0.20664,0.14524 -0.0298,0.0267 -0.0713,0.0484 -0.0922,0.0484 -0.0209,0 -0.0438,0.0132 -0.0513,0.0297 -0.0191,0.0427 -0.40389,0.31873 -0.44506,0.31873 -0.019,0 -0.06,0.0348 -0.0906,0.0773 -0.0306,0.0426 -0.0702,0.0775 -0.0876,0.0775 -0.0301,0 -0.0778,0.0344 -0.20132,0.14504 -0.0298,0.0267 -0.0711,0.0484 -0.0922,0.0484 -0.0212,0 -0.0438,0.0151 -0.0513,0.0327 -0.0151,0.0374 -0.39679,0.31569 -0.43341,0.31569 -0.0132,0 -0.0664,0.0369 -0.11819,0.0819 -0.0963,0.0838 -0.0958,0.18912 0.004,0.18912 0.0296,0 0.0538,0.017 0.0538,0.0388 0,0.0212 0.0349,0.0388 0.0773,0.0388 0.0426,0 0.0776,0.017 0.0776,0.0388 0,0.0212 0.0217,0.039 0.0484,0.0391 0.0266,2.5e-4 0.26352,0.12236 0.52647,0.27099 0.26294,0.14883 0.50247,0.27042 0.53231,0.27042 0.0298,0 0.0542,0.0151 0.0542,0.0329 0,0.0189 0.074,0.0654 0.16452,0.10552 0.0906,0.0399 0.17325,0.0819 0.18383,0.093 0.0114,0.0114 0.0716,0.0465 0.13557,0.0785 0.0638,0.0319 0.12502,0.0668 0.1356,0.0775 0.0265,0.0267 0.28348,0.14939 0.31941,0.15242 0.0151,0.001 0.0292,-0.69585 0.0292,-1.54938 z m 0.8264,1.48408 c 0.0674,-0.0373 0.12782,-0.0808 0.13501,-0.0968 0.007,-0.0151 0.0448,-0.0291 0.084,-0.0291 0.0392,0 0.0767,-0.0132 0.084,-0.0291 0.007,-0.0151 0.0913,-0.0675 0.18722,-0.1146 0.20013,-0.0983 0.63687,-0.33895 0.76321,-0.42044 0.0473,-0.0306 0.1125,-0.0554 0.14505,-0.0554 0.0327,0 0.0593,-0.0132 0.0593,-0.0295 0,-0.017 0.0655,-0.0605 0.14504,-0.0983 0.23125,-0.10949 0.45379,-0.23738 0.46779,-0.2689 0.007,-0.0151 0.0445,-0.0291 0.0831,-0.0291 0.11063,0 0.12161,-0.1006 0.0172,-0.15658 -0.0515,-0.0276 -0.0936,-0.0647 -0.0936,-0.0823 0,-0.017 -0.0246,-0.0321 -0.0548,-0.0321 -0.0301,0 -0.0607,-0.0151 -0.0679,-0.0327 -0.019,-0.0486 -0.40232,-0.31569 -0.45304,-0.31569 -0.0241,0 -0.0439,-0.0132 -0.0439,-0.0291 0,-0.0151 -0.0605,-0.0701 -0.13443,-0.12046 -0.0738,-0.0503 -0.18251,-0.13294 -0.2417,-0.18381 -0.0591,-0.0509 -0.1193,-0.0925 -0.13369,-0.0925 -0.0151,-2e-5 -0.0491,-0.0223 -0.0776,-0.0494 -0.0281,-0.0272 -0.19923,-0.15204 -0.38023,-0.27748 -0.18097,-0.12556 -0.33777,-0.23957 -0.34843,-0.25359 -0.0114,-0.0132 -0.076,-0.0584 -0.14523,-0.0987 -0.0693,-0.0403 -0.12576,-0.0879 -0.12576,-0.1059 0,-0.0189 -0.0172,-0.0217 -0.0386,-0.009 -0.0566,0.035 -0.0528,3.07772 0.004,3.07772 0.0233,0 0.0976,-0.0304 0.16454,-0.0677 z m -3.00125,-2.2054 c 0.0281,-0.0272 0.064,-0.0496 0.0801,-0.0496 0.0151,0 0.0625,-0.0304 0.10363,-0.0679 0.0411,-0.0373 0.14484,-0.11895 0.2299,-0.18192 0.0851,-0.0626 0.16357,-0.12367 0.17415,-0.13559 0.0114,-0.0114 0.0646,-0.0446 0.11991,-0.0732 0.0873,-0.045 0.17433,-0.10949 0.37198,-0.27645 0.0259,-0.0217 0.0649,-0.0393 0.0871,-0.0393 0.022,0 0.0408,-0.0132 0.0412,-0.0291 0,-0.0151 0.0789,-0.0813 0.17415,-0.14504 0.0953,-0.0639 0.17322,-0.12916 0.17341,-0.14523 5e-5,-0.0151 0.0262,-0.0291 0.0581,-0.0291 0.0319,0 0.058,-0.0151 0.058,-0.0325 0,-0.017 0.0435,-0.0524 0.0968,-0.0766 0.0533,-0.0244 0.0961,-0.0662 0.0956,-0.0934 -0.004,-0.0444 -1.32821,-0.72047 -1.53757,-0.78325 -0.0747,-0.0225 -0.0872,-0.0113 -0.0872,0.0737 0,0.055 -0.0151,0.1301 -0.034,0.16716 -0.0459,0.0908 -0.15941,0.56322 -0.15941,0.66397 0,0.0444 -0.0172,0.0807 -0.0388,0.0807 -0.0212,0 -0.0388,0.0467 -0.0388,0.10363 0,0.0571 -0.0172,0.15715 -0.038,0.2226 -0.0709,0.22134 -0.20447,0.77616 -0.22336,0.92814 l -0.0188,0.1511 0.13049,-0.0917 c 0.0718,-0.0507 0.15354,-0.11422 0.18153,-0.14145 z m 5.2687,-0.0339 c -0.0249,-0.10457 -0.0604,-0.23012 -0.0791,-0.27904 -0.019,-0.049 -0.0339,-0.13067 -0.0339,-0.18154 0,-0.0509 -0.0151,-0.10231 -0.0347,-0.11403 -0.0193,-0.0113 -0.0431,-0.0868 -0.0533,-0.16679 -0.0249,-0.19417 -0.18113,-0.82501 -0.22537,-0.90948 -0.0193,-0.0371 -0.0352,-0.11876 -0.0352,-0.18154 0,-0.063 -0.0172,-0.12519 -0.0388,-0.13843 -0.0212,-0.0132 -0.0388,-0.0579 -0.0388,-0.0991 0,-0.0962 0,-0.0962 -0.29644,0.041 -0.13803,0.0639 -0.26715,0.1163 -0.28694,0.1163 -0.0198,0 -0.0361,0.017 -0.0361,0.0388 0,0.0212 -0.0349,0.0388 -0.0775,0.0388 -0.0426,0 -0.0775,0.0132 -0.078,0.0291 0,0.0151 -0.12197,0.0813 -0.27043,0.14523 -0.14846,0.0639 -0.27009,0.12916 -0.27041,0.14505 0,0.0151 -0.031,0.0295 -0.0683,0.0303 -0.0821,0.001 -0.20325,0.0881 -0.20325,0.14561 0,0.0229 0.0566,0.0813 0.12575,0.12991 0.0693,0.0486 0.14883,0.11082 0.17701,0.13824 0.0281,0.0272 0.063,0.0497 0.0776,0.0497 0.0151,4e-5 0.0873,0.0524 0.16169,0.11611 0.0744,0.0637 0.15735,0.11611 0.18402,0.11611 0.0267,4e-5 0.0486,0.0132 0.0491,0.0291 0,0.0151 0.0789,0.0813 0.1742,0.14504 0.0953,0.0639 0.17319,0.12916 0.17338,0.14504 3e-5,0.0151 0.0188,0.0291 0.0415,0.0291 0.023,0 0.0658,0.0217 0.0956,0.0484 0.12652,0.11347 0.17171,0.14505 0.20669,0.14505 0.0204,0 0.0429,0.0132 0.0501,0.0295 0.0172,0.0393 0.41135,0.3189 0.44964,0.3189 0.0172,0 0.055,0.0346 0.0855,0.077 0.0868,0.12027 0.12404,0.0318 0.0744,-0.17719 z m -3.09385,-2.842 c 0,-0.51101 -0.0132,-0.9291 -0.0292,-0.92907 -0.0151,2e-5 -0.0796,0.0435 -0.14144,0.0968 -0.0619,0.0533 -0.12388,0.0968 -0.13788,0.0968 -0.0132,0 -0.0595,0.0305 -0.10149,0.0679 -0.16584,0.14769 -0.56026,0.43553 -0.59672,0.43553 -0.0212,0 -0.0392,0.0132 -0.0396,0.0291 0,0.0151 -0.0789,0.0813 -0.17417,0.14504 -0.0954,0.0639 -0.17323,0.12916 -0.17341,0.14524 0,0.0151 -0.0262,0.0291 -0.0581,0.0291 -0.12272,0 -0.0489,0.0826 0.16451,0.18437 0.12237,0.0584 0.22839,0.11914 0.23551,0.13502 0.007,0.0151 0.0448,0.0291 0.084,0.0291 0.039,0 0.0765,0.0132 0.084,0.0291 0.0172,0.0374 0.42611,0.24196 0.48456,0.24196 0.0246,0 0.0505,0.0132 0.0575,0.0302 0.0132,0.0316 0.26263,0.16093 0.31293,0.16245 0.0151,5.2e-4 0.0292,-0.41723 0.0292,-0.92825 z m 1.16144,0.68802 c 0.26614,-0.1335 0.48969,-0.25587 0.49681,-0.27185 0.007,-0.0151 0.0354,-0.0291 0.0628,-0.0291 0.0724,0 0.40812,-0.19378 0.40812,-0.23559 0,-0.0195 -0.0191,-0.0354 -0.0405,-0.0354 -0.0222,0 -0.0841,-0.0435 -0.13729,-0.0968 -0.0533,-0.0531 -0.11102,-0.0968 -0.12803,-0.0968 -0.0172,0 -0.086,-0.0524 -0.1528,-0.11611 -0.0667,-0.0639 -0.13501,-0.11611 -0.15129,-0.11611 -0.0172,0 -0.0733,-0.0395 -0.12612,-0.0877 -0.0529,-0.0482 -0.1922,-0.15695 -0.30928,-0.24139 -0.11705,-0.0845 -0.24672,-0.18438 -0.28799,-0.22195 -0.1704,-0.15507 -0.17664,-0.12481 -0.17664,0.86078 0,0.51102 0.0132,0.92951 0.0291,0.92998 0.0151,5.3e-4 0.24678,-0.10836 0.51293,-0.24196 z m -2.61022,-1.31709 c 0.12594,-0.10552 0.16227,-0.1337 0.45069,-0.34843 0.16433,-0.12235 0.30803,-0.22261 0.31932,-0.22261 0.0114,0 0.0851,-0.0609 0.16415,-0.13559 0.0789,-0.0745 0.16621,-0.13559 0.19362,-0.13559 0.12026,0 0.0398,-0.14239 -0.13388,-0.23659 -0.40058,-0.21765 -0.57263,-0.31644 -0.6078,-0.34889 -0.0204,-0.0189 -0.0681,-0.0339 -0.10649,-0.0339 -0.0513,0 -0.0695,0.0301 -0.0695,0.11384 0,0.0626 -0.0151,0.12348 -0.0347,0.13521 -0.0193,0.0113 -0.0431,0.0868 -0.0533,0.16679 -0.0249,0.19417 -0.18113,0.82502 -0.22534,0.90948 -0.0807,0.15393 -0.0172,0.23719 0.10324,0.13596 z m 3.65548,-0.017 c 0,-0.0653 -0.0873,-0.42957 -0.15677,-0.65373 -0.0201,-0.0654 -0.0367,-0.15583 -0.0367,-0.20098 0,-0.0452 -0.0172,-0.0928 -0.0388,-0.1059 -0.0212,-0.0132 -0.0388,-0.0696 -0.0388,-0.12538 0,-0.23161 -0.13824,-0.44063 -0.2123,-0.32087 -0.0132,0.0206 -0.0878,0.0679 -0.16679,0.10438 -0.0789,0.0367 -0.15222,0.0775 -0.16298,0.0908 -0.0111,0.0132 -0.11915,0.0804 -0.24112,0.14959 -0.122,0.0692 -0.23034,0.13955 -0.2408,0.15638 -0.009,0.017 0.0753,0.0957 0.19042,0.17493 0.11518,0.0794 0.24562,0.17568 0.28994,0.2141 0.0445,0.0384 0.1411,0.111 0.21505,0.1615 0.074,0.0505 0.13443,0.10457 0.13464,0.12046 0,0.0151 0.0251,0.0291 0.0552,0.0291 0.0301,0 0.0607,0.0132 0.0677,0.0299 0.0172,0.0408 0.27694,0.24026 0.31295,0.24079 0.0151,2.6e-4 0.0292,-0.0289 0.0292,-0.0647 z m -2.20792,-2.07372 c -0.004,-0.46707 -0.009,-0.54127 -0.0526,-0.48392 -0.0281,0.0373 -0.0625,0.0677 -0.076,0.0677 -0.037,0 -0.567,0.53668 -0.567,0.57435 0,0.0189 0.0789,0.0734 0.17532,0.12311 0.0965,0.0495 0.23151,0.12991 0.30003,0.17832 0.21776,0.15412 0.22154,0.14618 0.22019,-0.45967 z m 0.77549,0.51747 c 0,-0.0189 0.0305,-0.0439 0.0679,-0.0556 0.0868,-0.0274 0.36256,-0.18684 0.42569,-0.24618 0.0267,-0.0251 0.0486,-0.0635 0.0486,-0.0855 0,-0.0579 -0.62918,-0.66092 -0.66593,-0.63821 -0.0172,0.0113 -0.031,0.25327 -0.031,0.53946 0,0.49455 0.004,0.52036 0.0773,0.52036 0.0426,0 0.0776,-0.0151 0.0776,-0.0342 z m -1.30746,-1.40479 c 0.28696,-0.29199 0.30541,-0.32023 0.2404,-0.36777 -0.0388,-0.0284 -0.0932,-0.0514 -0.12102,-0.0514 -0.0278,0 -0.0505,-0.017 -0.0505,-0.0388 0,-0.0212 -0.0333,-0.0388 -0.0742,-0.0388 -0.0407,0 -0.082,-0.0217 -0.0915,-0.0484 -0.0304,-0.0849 -0.0602,-0.0151 -0.16132,0.37315 -0.10118,0.38933 -0.1165,0.48823 -0.0756,0.48823 0.0132,0 0.16301,-0.1424 0.33398,-0.3163 z m 1.98757,-0.0868 c -0.0333,-0.11478 -0.0613,-0.24092 -0.0621,-0.28021 -0.004,-0.097 -0.11023,-0.23676 -0.14539,-0.18684 -0.0151,0.0216 -0.11028,0.0807 -0.21138,0.13162 -0.1012,0.0511 -0.18402,0.0985 -0.18402,0.10571 0,0.008 0.14375,0.15185 0.31938,0.32161 0.29546,0.28541 0.32031,0.30138 0.33168,0.2127 0.007,-0.0528 -0.0151,-0.18978 -0.0484,-0.30461 z m -1.45438,-1.11467 v -0.27906 l -0.17415,0.17096 c -0.0958,0.0942 -0.17418,0.19031 -0.17418,0.21395 0,0.0444 0.21434,0.16641 0.30001,0.17076 0.0347,10e-4 0.0484,-0.0779 0.0484,-0.27658 z m 0.86886,0.19781 c 0.0756,-0.0446 0.13785,-0.0866 0.13785,-0.0932 0,-0.0216 -0.34494,-0.36751 -0.36634,-0.36751 -0.0114,0 -0.0209,0.12198 -0.0209,0.27101 0,0.3069 0.0222,0.32378 0.24943,0.18973 z m -1.00766,-1.17627 0.13877,-0.13483 v -0.4717 c 0,-0.25944 -0.009,-0.46183 -0.0222,-0.44977 -0.0114,0.0113 -0.0486,0.14126 -0.0807,0.28715 -0.0325,0.14581 -0.0756,0.33485 -0.0963,0.42002 -0.0503,0.20872 -0.10057,0.48393 -0.0883,0.48393 0.005,0 0.0724,-0.0607 0.14864,-0.13484 z m 1.07939,0.009 c -0.0222,-0.0478 -0.0702,-0.22642 -0.10684,-0.39674 -0.0364,-0.17038 -0.0825,-0.33995 -0.10181,-0.37694 -0.019,-0.0371 -0.0352,-0.11101 -0.0352,-0.16452 0,-0.0535 -0.0172,-0.0974 -0.0386,-0.0974 -0.0236,0 -0.0388,0.16887 -0.0388,0.42889 v 0.42888 l 0.15738,0.15583 c 0.16375,0.16225 0.23296,0.17151 0.16375,0.0219 z m -0.41992,-4.06929 c 0.19812,-0.18362 0.0801,-0.49297 -0.19116,-0.50065 -0.10364,-0.004 -0.16301,0.0221 -0.23416,0.0989 -0.1057,0.11403 -0.11745,0.18608 -0.0503,0.31197 0.10608,0.19926 0.31494,0.23868 0.47559,0.0898 z m -2.26277,1.55548 c -0.0533,-0.0673 -0.11859,-0.14447 -0.14526,-0.17114 -0.0267,-0.0267 -0.0484,-0.0673 -0.0484,-0.09 0,-0.0229 -0.0151,-0.0414 -0.0349,-0.0414 -0.019,0 -0.0672,-0.0783 -0.10628,-0.17416 -0.0394,-0.0957 -0.0848,-0.17417 -0.10057,-0.17417 -0.0151,-7e-5 -0.0292,-0.0339 -0.0292,-0.0753 0,-0.0412 -0.0151,-0.084 -0.0321,-0.0949 -0.18418,-0.11384 -0.18418,-1.82998 0,-1.94386 0.0172,-0.0114 0.0321,-0.0537 0.0321,-0.0949 0,-0.0412 0.0172,-0.0753 0.0388,-0.0753 0.0214,0 0.0388,-0.0248 0.0388,-0.0548 0,-0.0692 0.12573,-0.29293 0.16452,-0.29325 0.0151,-1.5e-4 0.0292,-0.0189 0.0292,-0.0406 0,-0.1337 0.78073,-0.85006 0.92639,-0.85006 0.023,0 0.0413,-0.017 0.0413,-0.0388 0,-0.0212 0.0313,-0.0388 0.0695,-0.0388 0.0384,0 0.0861,-0.0151 0.10647,-0.032 0.0335,-0.0291 0.17947,-0.0766 0.61743,-0.201 0.16738,-0.0477 0.78592,-0.0312 1.04532,0.0278 0.28911,0.0658 0.52258,0.14372 0.52258,0.17435 0,0.017 0.0267,0.0306 0.0593,0.0306 0.17116,0 0.89585,0.59041 1.05466,0.85928 0.0352,0.0598 0.0778,0.10854 0.0945,0.10854 0.0172,0 0.0305,0.0348 0.0305,0.0773 0,0.0426 0.0172,0.0773 0.0388,0.0773 0.0214,0 0.0388,0.017 0.0388,0.0389 0,0.0214 0.0435,0.12916 0.0968,0.23952 0.0531,0.11025 0.0968,0.22373 0.0968,0.25198 0,0.0282 0.0172,0.0817 0.0359,0.11857 0.0763,0.14296 0.11348,0.71673 0.0674,1.04176 -0.0249,0.17398 -0.058,0.32934 -0.0741,0.34519 -0.0151,0.0151 -0.0292,0.065 -0.029,0.10949 1.6e-4,0.0794 -0.25403,0.62225 -0.32925,0.70287 -0.0212,0.0229 -0.0823,0.10552 -0.1356,0.18362 -0.0892,0.13105 -0.23225,0.19493 -0.23225,0.104 0,-0.0212 -0.0259,-0.0388 -0.0581,-0.0388 -0.0317,0 -0.058,-0.0132 -0.0582,-0.0291 -5e-5,-0.0151 -0.0524,-0.0639 -0.1161,-0.10646 -0.10988,-0.0734 -0.16055,-0.21294 -0.0773,-0.21294 0.0212,0 0.0388,-0.0261 0.0388,-0.0579 0,-0.032 0.0132,-0.0581 0.0294,-0.0581 0.0272,0 0.26167,-0.43739 0.35271,-0.65812 0.0736,-0.17851 0.10684,-0.64066 0.0694,-0.96324 -0.0201,-0.17284 -0.0515,-0.31431 -0.07,-0.31431 -0.0188,0 -0.033,-0.0316 -0.033,-0.0702 0,-0.0921 -0.13975,-0.37914 -0.26683,-0.54788 -0.12764,-0.16943 -0.38986,-0.42724 -0.43469,-0.42724 -0.0188,0 -0.0341,-0.017 -0.0341,-0.0388 0,-0.0212 -0.0246,-0.0388 -0.0546,-0.0388 -0.03,0 -0.0607,-0.0151 -0.0679,-0.0322 -0.0193,-0.0486 -0.44233,-0.23886 -0.53086,-0.23886 -0.0426,0 -0.0883,-0.017 -0.10158,-0.0388 -0.0318,-0.0512 -0.93617,-0.0512 -0.96787,0 -0.0132,0.0212 -0.0742,0.0388 -0.13539,0.0388 -0.0613,0 -0.1216,0.0151 -0.13372,0.0357 -0.0114,0.0197 -0.0741,0.0473 -0.13763,0.0613 -0.0635,0.0132 -0.11557,0.0373 -0.11557,0.0516 0,0.0151 -0.0567,0.0511 -0.12573,0.0813 -0.14243,0.0622 -0.63201,0.5478 -0.66845,0.66275 -0.0132,0.0414 -0.0403,0.0754 -0.06,0.0754 -0.0199,0 -0.036,0.0263 -0.036,0.0586 0,0.0323 -0.0172,0.0932 -0.0388,0.13559 -0.0212,0.0424 -0.0572,0.1129 -0.0794,0.15715 -0.087,0.17114 -0.12914,0.71088 -0.0816,1.04663 0.0251,0.17682 0.0628,0.33865 0.0842,0.35983 0.0212,0.0212 0.0386,0.07 0.0386,0.10817 0,0.0384 0.0172,0.0696 0.0388,0.0696 0.0212,0 0.0388,0.0267 0.0388,0.0594 0,0.0567 0.0906,0.22014 0.17377,0.31371 0.11804,0.13256 0.17476,0.21253 0.17476,0.24621 0,0.0322 -0.36727,0.42657 -0.39632,0.42558 -0.005,-1.7e-4 -0.0538,-0.0556 -0.10684,-0.12292 z"
       id="path8920-9-7"
       inkscape:connector-curvature="0" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501806px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="704.65417"
       y="32.314243"
       id="text14-4-1-6-4-8-6-7"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-4-8-0-4-8-0-6"
         x="704.65417"
         y="32.314243"
         style="stroke-width:0.06087548">Cell Tower</tspan></text>
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501806px;line-height:1.25;font-family:sans-serif;text-align:center;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="580.01447"
       y="27.646822"
       id="text14-4-4-1-1-4-8-8-0-0-7"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-78-5-2-5-7-9-3-1-1-3"
         x="580.01447"
         y="27.646822"
         style="text-align:center;text-anchor:middle;stroke-width:0.06087548">Cable</tspan><tspan
         sodipodi:role="line"
         x="580.01447"
         y="30.690594"
         style="text-align:center;text-anchor:middle;stroke-width:0.06087548"
         id="tspan10703-6">Modem</tspan></text>
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501806px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="639.72961"
       y="26.816378"
       id="text14-4-1-6-3-5"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-4-8-0-40-63"
         x="639.72961"
         y="26.816378"
         style="text-align:center;text-anchor:middle;stroke-width:0.06087548">On-Site</tspan><tspan
         sodipodi:role="line"
         x="639.72961"
         y="29.860149"
         style="text-align:center;text-anchor:middle;stroke-width:0.06087548"
         id="tspan8665-9">LoRa Gateway</tspan></text>
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.38568735px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.05964219"
       x="665.50934"
       y="27.357698"
       id="text14-6-0-9-2-1-4"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-7-7-2-6-5-8"
         x="665.50934"
         y="27.357698"
         style="stroke-width:0.05964219">Relay Node</tspan></text>
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.71197772px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06779945"
       x="670.84259"
       y="31.776979"
       id="text1121-1"><tspan
         sodipodi:role="line"
         id="tspan1119-2"
         x="670.84259"
         y="31.776979"
         style="stroke-width:0.06779945">+</tspan></text>
    <path
       style="fill:none;stroke:#000000;stroke-width:0.09198696;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="m -70.184136,3.3524556 h -9.69277"
       id="path58-7-2-0-4-8-6-8"
       inkscape:connector-curvature="0"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501782px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="-38.933617"
       y="23.672457"
       id="text14-2-2-1-6-0-1"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         x="-38.933617"
         y="23.672457"
         style="stroke-width:0.06087548"
         id="tspan227-0-1-7">Smartphone</tspan></text>
    <rect
       id="rect10-7-6-3-1-6-6-3-9-6"
       width="20.244879"
       height="8.4462175"
       x="-25.725426"
       y="-26.03668"
       style="fill:#00ffff;stroke:#000000;stroke-width:0.09550962"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501806px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="-15.477639"
       y="-22.858496"
       id="text14-4-1-6-3-1"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-4-8-0-40-1"
         x="-15.477639"
         y="-22.858496"
         style="text-align:center;text-anchor:middle;stroke-width:0.06087548">Off-Site</tspan><tspan
         sodipodi:role="line"
         x="-15.47764"
         y="-19.814724"
         style="text-align:center;text-anchor:middle;stroke-width:0.06087548"
         id="tspan8665-59">LoRa Gateway</tspan></text>
    <path
       style="fill:none;stroke:#000000;stroke-width:0.11443014;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="M 21.563414,-2.5875676 -5.475856,-22.250264"
       id="path58-4-5-2-9-0"
       inkscape:connector-curvature="0"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <g
       id="g2624"
       transform="rotate(9.9270805,67.511391,-1175.5021)">
      <path
         inkscape:export-ydpi="96"
         inkscape:export-xdpi="96"
         inkscape:export-filename="/home/dwblair/cloud001.png"
         inkscape:connector-curvature="0"
         id="path2525-4-2-3-9-3"
         d="m 212.08197,-19.988817 c 0.22565,-0.644069 1.61413,-1.857613 1.6429,-0.711167 -0.27043,0.481672 -0.38311,1.918238 0.33985,1.016071 0.21938,-0.592751 1.40466,-1.424397 1.06485,-0.265042 -0.45394,0.545044 -1.06966,2.488691 0.0902,1.523145 0.39475,-0.212259 0.99055,-1.616652 1.25297,-1.050976 -0.0471,0.370892 -0.45813,0.851619 -0.17583,1.162087"
         style="fill:none;stroke:#000000;stroke-width:0.14102559px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
      <text
         transform="rotate(25.575022)"
         inkscape:export-ydpi="96"
         inkscape:export-xdpi="96"
         inkscape:export-filename="/home/dwblair/cloud001.png"
         id="text2576-9-8-7-1-04"
         y="-109.49752"
         x="188.08064"
         style="font-style:normal;font-weight:normal;font-size:2.52020955px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06300524"
         xml:space="preserve"><tspan
           style="stroke-width:0.06300524"
           y="-109.49752"
           x="188.08064"
           id="tspan2574-2-9-5-4-4"
           sodipodi:role="line">LoRa</tspan></text>
    </g>
    <path
       style="fill:none;stroke:#000000;stroke-width:0.1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
       d="m -88.113666,-16.245944 62.48034,-6.604948"
       id="path2619"
       inkscape:connector-curvature="0" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501806px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="151.18283"
       y="3.9525154"
       id="text14-4-4-1-1-2-2-7-9-9-5-7-3"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         x="151.18283"
         y="3.9525154"
         style="stroke-width:0.06087548"
         id="tspan1749-4-6">Farmer</tspan></text>
    <rect
       id="rect10-7-6-3-1-8-9"
       width="17.003429"
       height="6.3783278"
       x="275.05118"
       y="-15.197515"
       style="display:inline;fill:#00ffff;stroke:#000000;stroke-width:0.07606415"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.38568735px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;display:inline;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.05964219"
       x="276.62994"
       y="-11.451852"
       id="text14-6-0-9-2-1"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-7-7-2-6-5"
         x="276.62994"
         y="-11.451852"
         style="stroke-width:0.05964219">Relay Node</tspan></text>
    <path
       style="display:inline;fill:none;stroke:#000000;stroke-width:0.26458332px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
       d="m 283.10251,-7.6151659 v 3.63063"
       id="path2687"
       inkscape:connector-curvature="0" />
    <rect
       id="rect10-7-6-3-1-8-9-7"
       width="17.003429"
       height="6.3783278"
       x="218.20511"
       y="-4.4793258"
       style="display:inline;fill:#00ffff;stroke:#000000;stroke-width:0.07606415"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.38568735px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;display:inline;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.05964219"
       x="222.22882"
       y="-0.48916754"
       id="text14-6-0-9-2-1-0"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         id="tspan12-7-7-2-6-5-9"
         x="222.22882"
         y="-0.48916754"
         style="stroke-width:0.05964219">Sensor</tspan></text>
    <text
       xml:space="preserve"
       style="font-style:normal;font-weight:normal;font-size:2.43501806px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;display:inline;fill:#000000;fill-opacity:1;stroke:none;stroke-width:0.06087548"
       x="221.10535"
       y="7.6803179"
       id="text14-4-4-1-1-2-2-7-9-9-5-7-3-7"
       inkscape:export-filename="/home/dwblair/cloud001.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><tspan
         sodipodi:role="line"
         x="221.10535"
         y="7.6803179"
         style="stroke-width:0.06087548"
         id="tspan1749-4-6-5">Soil Temp?</tspan></text>
    <path
       inkscape:connector-curvature="0"
       id="path844"
       d="M 226.56576,9.9812824 V 16.896767"
       style="display:inline;fill:none;stroke:#000000;stroke-width:0.26499999;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker5259-3)" />
    <path
       style="display:inline;fill:none;stroke:#000000;stroke-width:0.26499999;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker5259-3)"
       d="M 226.56576,9.9812824 V 16.896767"
       id="path2163"
       inkscape:connector-curvature="0" />
    <path
       inkscape:connector-curvature="0"
       id="path2192"
       d="M 226.56576,9.9812824 V 16.896767"
       style="display:inline;fill:none;stroke:#000000;stroke-width:0.26499999;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker-end:url(#marker2198-3)" />
  </g>
  <g
     inkscape:groupmode="layer"
     id="layer8"
     inkscape:label="slide1"
     style="display:inline" />
  <g
     style="display:inline"
     inkscape:label="slide2"
     id="g4562"
     inkscape:groupmode="layer" />
  <script
     id="JessyInk"
     ns0:version="1.5.5">// Copyright 2008, 2009 Hannes Hochreiner
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/.

// Set onload event handler.
window.onload = jessyInkInit;

// Creating a namespace dictionary. The standard Inkscape namespaces are taken from inkex.py.
var NSS = new Object();
NSS['sodipodi']='http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd';
NSS['cc']='http://web.resource.org/cc/';
NSS['svg']='http://www.w3.org/2000/svg';
NSS['dc']='http://purl.org/dc/elements/1.1/';
NSS['rdf']='http://www.w3.org/1999/02/22-rdf-syntax-ns#';
NSS['inkscape']='http://www.inkscape.org/namespaces/inkscape';
NSS['xlink']='http://www.w3.org/1999/xlink';
NSS['xml']='http://www.w3.org/XML/1998/namespace';
NSS['jessyink']='https://launchpad.net/jessyink';

// Keycodes.
var LEFT_KEY = 37; // cursor left keycode
var UP_KEY = 38; // cursor up keycode
var RIGHT_KEY = 39; // cursor right keycode
var DOWN_KEY = 40; // cursor down keycode
var PAGE_UP_KEY = 33; // page up keycode
var PAGE_DOWN_KEY = 34; // page down keycode
var HOME_KEY = 36; // home keycode
var END_KEY = 35; // end keycode
var ENTER_KEY = 13; // next slide
var SPACE_KEY = 32;
var ESCAPE_KEY = 27;

// Presentation modes.
var SLIDE_MODE = 1;
var INDEX_MODE = 2;
var DRAWING_MODE = 3;

// Mouse handler actions.
var MOUSE_UP = 1;
var MOUSE_DOWN = 2;
var MOUSE_MOVE = 3;
var MOUSE_WHEEL = 4;

// Parameters.
var ROOT_NODE = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;svg&quot;)[0];
var HEIGHT = 0;
var WIDTH = 0;
var INDEX_COLUMNS_DEFAULT = 4;
var INDEX_COLUMNS = INDEX_COLUMNS_DEFAULT;
var INDEX_OFFSET = 0;
var STATE_START = -1;
var STATE_END = -2;
var BACKGROUND_COLOR = null;
var slides = new Array();

// Initialisation.
var currentMode = SLIDE_MODE;
var masterSlide = null;
var activeSlide = 0;
var activeEffect = 0;
var timeStep = 30; // 40 ms equal 25 frames per second.
var lastFrameTime = null;
var processingEffect = false;
var transCounter = 0;
var effectArray = 0;
var defaultTransitionInDict = new Object();
defaultTransitionInDict[&quot;name&quot;] = &quot;appear&quot;;
var defaultTransitionOutDict = new Object();
defaultTransitionOutDict[&quot;name&quot;] = &quot;appear&quot;;
var jessyInkInitialised = false;

// Initialise char and key code dictionaries.
var charCodeDictionary = getDefaultCharCodeDictionary();
var keyCodeDictionary = getDefaultKeyCodeDictionary();

// Initialise mouse handler dictionary.
var mouseHandlerDictionary = getDefaultMouseHandlerDictionary();

var progress_bar_visible = false;
var timer_elapsed = 0;
var timer_start = timer_elapsed;
var timer_duration = 15; // 15 minutes

var history_counter = 0;
var history_original_elements = new Array();
var history_presentation_elements = new Array();

var mouse_original_path = null;
var mouse_presentation_path = null;
var mouse_last_x = -1;
var mouse_last_y = -1;
var mouse_min_dist_sqr = 3 * 3;
var path_colour = &quot;red&quot;;
var path_width_default = 3;
var path_width = path_width_default;
var path_paint_width = path_width;

var number_of_added_slides = 0;

/** Initialisation function.
 *  The whole presentation is set-up in this function.
 */
function jessyInkInit()
{
	// Make sure we only execute this code once. Double execution can occur if the onload event handler is set
	// in the main svg tag as well (as was recommended in earlier versions). Executing this function twice does
	// not lead to any problems, but it takes more time.
	if (jessyInkInitialised)
		return;

	// Making the presentation scaleable.
	var VIEWBOX = ROOT_NODE.getAttribute(&quot;viewBox&quot;);

	if (VIEWBOX)
	{
		WIDTH = ROOT_NODE.viewBox.animVal.width;
		HEIGHT = ROOT_NODE.viewBox.animVal.height;
	}
	else
	{
		HEIGHT = parseFloat(ROOT_NODE.getAttribute(&quot;height&quot;));
		WIDTH = parseFloat(ROOT_NODE.getAttribute(&quot;width&quot;));
		ROOT_NODE.setAttribute(&quot;viewBox&quot;, &quot;0 0 &quot; + WIDTH + &quot; &quot; + HEIGHT);
	}

	ROOT_NODE.setAttribute(&quot;width&quot;, &quot;100%&quot;);
	ROOT_NODE.setAttribute(&quot;height&quot;, &quot;100%&quot;);

	// Setting the background color.
	var namedViews = document.getElementsByTagNameNS(NSS[&quot;sodipodi&quot;], &quot;namedview&quot;);

	for (var counter = 0; counter &lt; namedViews.length; counter++)
	{
		if (namedViews[counter].hasAttribute(&quot;id&quot;) &amp;&amp; namedViews[counter].hasAttribute(&quot;pagecolor&quot;))
		{
			if (namedViews[counter].getAttribute(&quot;id&quot;) == &quot;base&quot;)
			{
				BACKGROUND_COLOR = namedViews[counter].getAttribute(&quot;pagecolor&quot;);
				var newAttribute = &quot;background-color:&quot; + BACKGROUND_COLOR + &quot;;&quot;;

				if (ROOT_NODE.hasAttribute(&quot;style&quot;))
					newAttribute += ROOT_NODE.getAttribute(&quot;style&quot;);

				ROOT_NODE.setAttribute(&quot;style&quot;, newAttribute);
			}
		}
	}

	// Defining clip-path.
	var defsNodes = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;defs&quot;);

	if (defsNodes.length &gt; 0)
	{
		var existingClipPath = document.getElementById(&quot;jessyInkSlideClipPath&quot;);

		if (!existingClipPath)
		{
			var rectNode = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);
			var clipPath = document.createElementNS(NSS[&quot;svg&quot;], &quot;clipPath&quot;);

			rectNode.setAttribute(&quot;x&quot;, 0);
			rectNode.setAttribute(&quot;y&quot;, 0);
			rectNode.setAttribute(&quot;width&quot;, WIDTH);
			rectNode.setAttribute(&quot;height&quot;, HEIGHT);

			clipPath.setAttribute(&quot;id&quot;, &quot;jessyInkSlideClipPath&quot;);
			clipPath.setAttribute(&quot;clipPathUnits&quot;, &quot;userSpaceOnUse&quot;);

			clipPath.appendChild(rectNode);
			defsNodes[0].appendChild(clipPath);
		}
	}

	// Making a list of the slide and finding the master slide.
	var nodes = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;g&quot;);
	var tempSlides = new Array();
	var existingJessyInkPresentationLayer = null;

	for (var counter = 0; counter &lt; nodes.length; counter++)
	{
		if (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;) &amp;&amp; (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;) == &quot;layer&quot;))
		{
			if (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;) &amp;&amp; nodes[counter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;masterSlide&quot;) == &quot;masterSlide&quot;)
				masterSlide = nodes[counter];
			else if (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;) &amp;&amp; nodes[counter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;presentationLayer&quot;) == &quot;presentationLayer&quot;)
				existingJessyInkPresentationLayer = nodes[counter];
			else
				tempSlides.push(nodes[counter].getAttribute(&quot;id&quot;));
		}
		else if (nodes[counter].getAttributeNS(NSS['jessyink'], 'element'))
		{
			handleElement(nodes[counter]);
		}
	}

	// Hide master slide set default transitions.
	if (masterSlide)
	{
		masterSlide.style.display = &quot;none&quot;;

		if (masterSlide.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;))
			defaultTransitionInDict = propStrToDict(masterSlide.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;));

		if (masterSlide.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;))
			defaultTransitionOutDict = propStrToDict(masterSlide.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;));
	}

	if (existingJessyInkPresentationLayer != null)
	{
		existingJessyInkPresentationLayer.parentNode.removeChild(existingJessyInkPresentationLayer);
	}

	// Set start slide.
	var hashObj = new LocationHash(window.location.hash);

	activeSlide = hashObj.slideNumber;
	activeEffect = hashObj.effectNumber;

	if (activeSlide &lt; 0)
		activeSlide = 0;
	else if (activeSlide &gt;= tempSlides.length)
		activeSlide = tempSlides.length - 1;

	var originalNode = document.getElementById(tempSlides[counter]);

	var JessyInkPresentationLayer = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);
	JessyInkPresentationLayer.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);
	JessyInkPresentationLayer.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, &quot;JessyInk Presentation Layer&quot;);
	JessyInkPresentationLayer.setAttributeNS(NSS[&quot;jessyink&quot;], &quot;presentationLayer&quot;, &quot;presentationLayer&quot;);
	JessyInkPresentationLayer.setAttribute(&quot;id&quot;, &quot;jessyink_presentation_layer&quot;);
	JessyInkPresentationLayer.style.display = &quot;inherit&quot;;
	ROOT_NODE.appendChild(JessyInkPresentationLayer);

	// Gathering all the information about the transitions and effects of the slides, set the background
	// from the master slide and substitute the auto-texts.
	for (var counter = 0; counter &lt; tempSlides.length; counter++)
	{
		var originalNode = document.getElementById(tempSlides[counter]);
		originalNode.style.display = &quot;none&quot;;
		var node = suffixNodeIds(originalNode.cloneNode(true), &quot;_&quot; + counter);
		JessyInkPresentationLayer.appendChild(node);
		slides[counter] = new Object();
		slides[counter][&quot;original_element&quot;] = originalNode;
		slides[counter][&quot;element&quot;] = node;

		// Set build in transition.
		slides[counter][&quot;transitionIn&quot;] = new Object();

		var dict;

		if (node.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;))
			dict = propStrToDict(node.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;));
		else
			dict = defaultTransitionInDict;

		slides[counter][&quot;transitionIn&quot;][&quot;name&quot;] = dict[&quot;name&quot;];
		slides[counter][&quot;transitionIn&quot;][&quot;options&quot;] = new Object();

		for (key in dict)
			if (key != &quot;name&quot;)
				slides[counter][&quot;transitionIn&quot;][&quot;options&quot;][key] = dict[key];

		// Set build out transition.
		slides[counter][&quot;transitionOut&quot;] = new Object();

		if (node.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;))
			dict = propStrToDict(node.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;));
		else
			dict = defaultTransitionOutDict;

		slides[counter][&quot;transitionOut&quot;][&quot;name&quot;] = dict[&quot;name&quot;];
		slides[counter][&quot;transitionOut&quot;][&quot;options&quot;] = new Object();

		for (key in dict)
			if (key != &quot;name&quot;)
				slides[counter][&quot;transitionOut&quot;][&quot;options&quot;][key] = dict[key];

		// Copy master slide content.
		if (masterSlide)
		{
			var clonedNode = suffixNodeIds(masterSlide.cloneNode(true), &quot;_&quot; + counter);
			clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;);
			clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;);
			clonedNode.style.display = &quot;inherit&quot;;

			node.insertBefore(clonedNode, node.firstChild);
		}

		// Setting clip path.
		node.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);

		// Substitute auto texts.
		substituteAutoTexts(node, node.getAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;), counter + 1, tempSlides.length);

		node.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;);
		node.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;);

		// Set effects.
		var tempEffects = new Array();
		var groups = new Object();

		for (var IOCounter = 0; IOCounter &lt;= 1; IOCounter++)
		{
			var propName = &quot;&quot;;
			var dir = 0;

			if (IOCounter == 0)
			{
				propName = &quot;effectIn&quot;;
				dir = 1;
			}
			else if (IOCounter == 1)
			{
				propName = &quot;effectOut&quot;;
				dir = -1;
			}

			var effects = getElementsByPropertyNS(node, NSS[&quot;jessyink&quot;], propName);

			for (var effectCounter = 0; effectCounter &lt; effects.length; effectCounter++)
			{
				var element = document.getElementById(effects[effectCounter]);
				var dict = propStrToDict(element.getAttributeNS(NSS[&quot;jessyink&quot;], propName));

				// Put every element that has an effect associated with it, into its own group.
				// Unless of course, we already put it into its own group.
				if (!(groups[element.id]))
				{
					var newGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

					element.parentNode.insertBefore(newGroup, element);
					newGroup.appendChild(element.parentNode.removeChild(element));
					groups[element.id] = newGroup;
				}

				var effectDict = new Object();

				effectDict[&quot;effect&quot;] = dict[&quot;name&quot;];
				effectDict[&quot;dir&quot;] = dir;
				effectDict[&quot;element&quot;] = groups[element.id];

				for (var option in dict)
				{
					if ((option != &quot;name&quot;) &amp;&amp; (option != &quot;order&quot;))
					{
						if (!effectDict[&quot;options&quot;])
							effectDict[&quot;options&quot;] = new Object();

						effectDict[&quot;options&quot;][option] = dict[option];
					}
				}

				if (!tempEffects[dict[&quot;order&quot;]])
					tempEffects[dict[&quot;order&quot;]] = new Array();

				tempEffects[dict[&quot;order&quot;]][tempEffects[dict[&quot;order&quot;]].length] = effectDict;
			}
		}

		// Make invisible, but keep in rendering tree to ensure that bounding box can be calculated.
		node.setAttribute(&quot;opacity&quot;,0);
		node.style.display = &quot;inherit&quot;;

		// Create a transform group.
		var transformGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

		// Add content to transform group.
		while (node.firstChild)
			transformGroup.appendChild(node.firstChild);

		// Transfer the transform attribute from the node to the transform group.
		if (node.getAttribute(&quot;transform&quot;))
		{
			transformGroup.setAttribute(&quot;transform&quot;, node.getAttribute(&quot;transform&quot;));
			node.removeAttribute(&quot;transform&quot;);
		}

		// Create a view group.
		var viewGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

		viewGroup.appendChild(transformGroup);
		slides[counter][&quot;viewGroup&quot;] = node.appendChild(viewGroup);

		// Insert background.
		if (BACKGROUND_COLOR != null)
		{
			var rectNode = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);

			rectNode.setAttribute(&quot;x&quot;, 0);
			rectNode.setAttribute(&quot;y&quot;, 0);
			rectNode.setAttribute(&quot;width&quot;, WIDTH);
			rectNode.setAttribute(&quot;height&quot;, HEIGHT);
			rectNode.setAttribute(&quot;id&quot;, &quot;jessyInkBackground&quot; + counter);
			rectNode.setAttribute(&quot;fill&quot;, BACKGROUND_COLOR);

			slides[counter][&quot;viewGroup&quot;].insertBefore(rectNode, slides[counter][&quot;viewGroup&quot;].firstChild);
		}

		// Set views.
		var tempViews = new Array();
		var views = getElementsByPropertyNS(node, NSS[&quot;jessyink&quot;], &quot;view&quot;);
		var matrixOld = (new matrixSVG()).fromElements(1, 0, 0, 0, 1, 0, 0, 0, 1);

		// Set initial view even if there are no other views.
		slides[counter][&quot;viewGroup&quot;].setAttribute(&quot;transform&quot;, matrixOld.toAttribute());
		slides[counter].initialView = matrixOld.toAttribute();

		for (var viewCounter = 0; viewCounter &lt; views.length; viewCounter++)
		{
			var element = document.getElementById(views[viewCounter]);
			var dict = propStrToDict(element.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;view&quot;));

			if (dict[&quot;order&quot;] == 0)
			{
				matrixOld = pointMatrixToTransformation(rectToMatrix(element)).mult((new matrixSVG()).fromSVGMatrix(slides[counter].viewGroup.getScreenCTM()).inv().mult((new matrixSVG()).fromSVGMatrix(element.parentNode.getScreenCTM())).inv());
				slides[counter].initialView = matrixOld.toAttribute();
			}
			else
			{
				var effectDict = new Object();

				effectDict[&quot;effect&quot;] = dict[&quot;name&quot;];
				effectDict[&quot;dir&quot;] = 1;
				effectDict[&quot;element&quot;] = slides[counter][&quot;viewGroup&quot;];
				effectDict[&quot;order&quot;] = dict[&quot;order&quot;];

				for (var option in dict)
				{
					if ((option != &quot;name&quot;) &amp;&amp; (option != &quot;order&quot;))
					{
						if (!effectDict[&quot;options&quot;])
							effectDict[&quot;options&quot;] = new Object();

						effectDict[&quot;options&quot;][option] = dict[option];
					}
				}

				effectDict[&quot;options&quot;][&quot;matrixNew&quot;] = pointMatrixToTransformation(rectToMatrix(element)).mult((new matrixSVG()).fromSVGMatrix(slides[counter].viewGroup.getScreenCTM()).inv().mult((new matrixSVG()).fromSVGMatrix(element.parentNode.getScreenCTM())).inv());

				tempViews[dict[&quot;order&quot;]] = effectDict;
			}

			// Remove element.
			element.parentNode.removeChild(element);
		}

		// Consolidate view array and append it to the effect array.
		if (tempViews.length &gt; 0)
		{
			for (var viewCounter = 0; viewCounter &lt; tempViews.length; viewCounter++)
			{
				if (tempViews[viewCounter])
				{
					tempViews[viewCounter][&quot;options&quot;][&quot;matrixOld&quot;] = matrixOld;
					matrixOld = tempViews[viewCounter][&quot;options&quot;][&quot;matrixNew&quot;];

					if (!tempEffects[tempViews[viewCounter][&quot;order&quot;]])
						tempEffects[tempViews[viewCounter][&quot;order&quot;]] = new Array();

					tempEffects[tempViews[viewCounter][&quot;order&quot;]][tempEffects[tempViews[viewCounter][&quot;order&quot;]].length] = tempViews[viewCounter];
				}
			}
		}

		// Set consolidated effect array.
		if (tempEffects.length &gt; 0)
		{
			slides[counter][&quot;effects&quot;] = new Array();

			for (var effectCounter = 0; effectCounter &lt; tempEffects.length; effectCounter++)
			{
				if (tempEffects[effectCounter])
					slides[counter][&quot;effects&quot;][slides[counter][&quot;effects&quot;].length] = tempEffects[effectCounter];
			}
		}

		node.setAttribute(&quot;onmouseover&quot;, &quot;if ((currentMode == INDEX_MODE) &amp;&amp; ( activeSlide != &quot; + counter + &quot;)) { indexSetActiveSlide(&quot; + counter + &quot;); };&quot;);

		// Set visibility for initial state.
		if (counter == activeSlide)
		{
			node.style.display = &quot;inherit&quot;;
			node.setAttribute(&quot;opacity&quot;,1);
		}
		else
		{
			node.style.display = &quot;none&quot;;
			node.setAttribute(&quot;opacity&quot;,0);
		}
	}

	// Set key handler.
	var jessyInkObjects = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;g&quot;);

	for (var counter = 0; counter &lt; jessyInkObjects.length; counter++)
	{
		var elem = jessyInkObjects[counter];

		if (elem.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;customKeyBindings&quot;))
		{
			if (elem.getCustomKeyBindings != undefined)
				keyCodeDictionary = elem.getCustomKeyBindings();

			if (elem.getCustomCharBindings != undefined)
				charCodeDictionary = elem.getCustomCharBindings();
		}
	}

	// Set mouse handler.
	var jessyInkMouseHandler = document.getElementsByTagNameNS(NSS[&quot;jessyink&quot;], &quot;mousehandler&quot;);

	for (var counter = 0; counter &lt; jessyInkMouseHandler.length; counter++)
	{
		var elem = jessyInkMouseHandler[counter];

		if (elem.getMouseHandler != undefined)
		{
			var tempDict = elem.getMouseHandler();

			for (mode in tempDict)
			{
				if (!mouseHandlerDictionary[mode])
					mouseHandlerDictionary[mode] = new Object();

				for (handler in tempDict[mode])
					mouseHandlerDictionary[mode][handler] = tempDict[mode][handler];
			}
		}
	}

	// Check effect number.
	if ((activeEffect &lt; 0) || (!slides[activeSlide].effects))
	{
		activeEffect = 0;
	}
	else if (activeEffect &gt; slides[activeSlide].effects.length)
	{
		activeEffect = slides[activeSlide].effects.length;
	}

	createProgressBar(JessyInkPresentationLayer);
	hideProgressBar();
	setProgressBarValue(activeSlide);
	setTimeIndicatorValue(0);
	setInterval(&quot;updateTimer()&quot;, 1000);
	setSlideToState(activeSlide, activeEffect);
	jessyInkInitialised = true;
}

/** Function to subtitute the auto-texts.
 *
 *  @param node the node
 *  @param slideName name of the slide the node is on
 *  @param slideNumber number of the slide the node is on
 *  @param numberOfSlides number of slides in the presentation
 */
function substituteAutoTexts(node, slideName, slideNumber, numberOfSlides)
{
	var texts = node.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;tspan&quot;);

	for (var textCounter = 0; textCounter &lt; texts.length; textCounter++)
	{
		if (texts[textCounter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;autoText&quot;) == &quot;slideNumber&quot;)
			texts[textCounter].firstChild.nodeValue = slideNumber;
		else if (texts[textCounter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;autoText&quot;) == &quot;numberOfSlides&quot;)
			texts[textCounter].firstChild.nodeValue = numberOfSlides;
		else if (texts[textCounter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;autoText&quot;) == &quot;slideTitle&quot;)
			texts[textCounter].firstChild.nodeValue = slideName;
	}
}

/** Convenience function to get an element depending on whether it has a property with a particular name.
 *	This function emulates some dearly missed XPath functionality.
 *
 *  @param node the node
 *  @param namespace namespace of the attribute
 *  @param name attribute name
 */
function getElementsByPropertyNS(node, namespace, name)
{
	var elems = new Array();

	if (node.getAttributeNS(namespace, name))
		elems.push(node.getAttribute(&quot;id&quot;));

	for (var counter = 0; counter &lt; node.childNodes.length; counter++)
	{
		if (node.childNodes[counter].nodeType == 1)
			elems = elems.concat(getElementsByPropertyNS(node.childNodes[counter], namespace, name));
	}

	return elems;
}

/** Function to dispatch the next effect, if there is none left, change the slide.
 *
 *  @param dir direction of the change (1 = forwards, -1 = backwards)
 */
function dispatchEffects(dir)
{
	if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (((dir == 1) &amp;&amp; (activeEffect &lt; slides[activeSlide][&quot;effects&quot;].length)) || ((dir == -1) &amp;&amp; (activeEffect &gt; 0))))
	{
		processingEffect = true;

		if (dir == 1)
		{
			effectArray = slides[activeSlide][&quot;effects&quot;][activeEffect];
			activeEffect += dir;
		}
		else if (dir == -1)
		{
			activeEffect += dir;
			effectArray = slides[activeSlide][&quot;effects&quot;][activeEffect];
		}

		transCounter = 0;
		startTime = (new Date()).getTime();
		lastFrameTime = null;
		effect(dir);
	}
	else if (((dir == 1) &amp;&amp; (activeSlide &lt; (slides.length - 1))) || (((dir == -1) &amp;&amp; (activeSlide &gt; 0))))
	{
		changeSlide(dir);
	}
}

/** Function to skip effects and directly either put the slide into start or end state or change slides.
 *
 *  @param dir direction of the change (1 = forwards, -1 = backwards)
 */
function skipEffects(dir)
{
	if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (((dir == 1) &amp;&amp; (activeEffect &lt; slides[activeSlide][&quot;effects&quot;].length)) || ((dir == -1) &amp;&amp; (activeEffect &gt; 0))))
	{
		processingEffect = true;

		if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (dir == 1))
			activeEffect = slides[activeSlide][&quot;effects&quot;].length;
		else
			activeEffect = 0;

		if (dir == 1)
			setSlideToState(activeSlide, STATE_END);
		else
			setSlideToState(activeSlide, STATE_START);

		processingEffect = false;
	}
	else if (((dir == 1) &amp;&amp; (activeSlide &lt; (slides.length - 1))) || (((dir == -1) &amp;&amp; (activeSlide &gt; 0))))
	{
		changeSlide(dir);
	}
}

/** Function to change between slides.
 *
 *  @param dir direction (1 = forwards, -1 = backwards)
 */
function changeSlide(dir)
{
	processingEffect = true;
	effectArray = new Array();

	effectArray[0] = new Object();
	if (dir == 1)
	{
		effectArray[0][&quot;effect&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;name&quot;];
		effectArray[0][&quot;options&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;options&quot;];
		effectArray[0][&quot;dir&quot;] = -1;
	}
	else if (dir == -1)
	{
		effectArray[0][&quot;effect&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;name&quot;];
		effectArray[0][&quot;options&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;options&quot;];
		effectArray[0][&quot;dir&quot;] = 1;
	}
	effectArray[0][&quot;element&quot;] = slides[activeSlide][&quot;element&quot;];

	activeSlide += dir;
	setProgressBarValue(activeSlide);

	effectArray[1] = new Object();

	if (dir == 1)
	{
		effectArray[1][&quot;effect&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;name&quot;];
		effectArray[1][&quot;options&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;options&quot;];
		effectArray[1][&quot;dir&quot;] = 1;
	}
	else if (dir == -1)
	{
		effectArray[1][&quot;effect&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;name&quot;];
		effectArray[1][&quot;options&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;options&quot;];
		effectArray[1][&quot;dir&quot;] = -1;
	}

	effectArray[1][&quot;element&quot;] = slides[activeSlide][&quot;element&quot;];

	if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (dir == -1))
		activeEffect = slides[activeSlide][&quot;effects&quot;].length;
	else
		activeEffect = 0;

	if (dir == -1)
		setSlideToState(activeSlide, STATE_END);
	else
		setSlideToState(activeSlide, STATE_START);

	transCounter = 0;
	startTime = (new Date()).getTime();
	lastFrameTime = null;
	effect(dir);
}

/** Function to toggle between index and slide mode.
*/
function toggleSlideIndex()
{
	var suspendHandle = ROOT_NODE.suspendRedraw(500);

	if (currentMode == SLIDE_MODE)
	{
		hideProgressBar();		
		INDEX_OFFSET = -1;
		indexSetPageSlide(activeSlide);
		currentMode = INDEX_MODE;
	}
	else if (currentMode == INDEX_MODE)
	{
		for (var counter = 0; counter &lt; slides.length; counter++)
		{
			slides[counter][&quot;element&quot;].setAttribute(&quot;transform&quot;,&quot;scale(1)&quot;);

			if (counter == activeSlide)
			{
				slides[counter][&quot;element&quot;].style.display = &quot;inherit&quot;;
				slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,1);
				activeEffect = 0;
			}
			else
			{
				slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0);
				slides[counter][&quot;element&quot;].style.display = &quot;none&quot;;
			}
		}
		currentMode = SLIDE_MODE;
		setSlideToState(activeSlide, STATE_START);
		setProgressBarValue(activeSlide);

		if (progress_bar_visible)
		{
			showProgressBar();
		}
	}

	ROOT_NODE.unsuspendRedraw(suspendHandle);
	ROOT_NODE.forceRedraw();
}

/** Function to run an effect.
 *
 *  @param dir direction in which to play the effect (1 = forwards, -1 = backwards)
 */
function effect(dir)
{
	var done = true;

	var suspendHandle = ROOT_NODE.suspendRedraw(200);

	for (var counter = 0; counter &lt; effectArray.length; counter++)
	{
		if (effectArray[counter][&quot;effect&quot;] == &quot;fade&quot;)
			done &amp;= fade(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);
		else if (effectArray[counter][&quot;effect&quot;] == &quot;appear&quot;)
			done &amp;= appear(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);
		else if (effectArray[counter][&quot;effect&quot;] == &quot;pop&quot;)
			done &amp;= pop(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);
		else if (effectArray[counter][&quot;effect&quot;] == &quot;view&quot;)
			done &amp;= view(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);
	}

	ROOT_NODE.unsuspendRedraw(suspendHandle);
	ROOT_NODE.forceRedraw();

	if (!done)
	{
		var currentTime = (new Date()).getTime();
		var timeDiff = 1;

		transCounter = currentTime - startTime;

		if (lastFrameTime != null)
		{
			timeDiff = timeStep - (currentTime - lastFrameTime);

			if (timeDiff &lt;= 0)
				timeDiff = 1;
		}

		lastFrameTime = currentTime;

		window.setTimeout(&quot;effect(&quot; + dir + &quot;)&quot;, timeDiff);
	}
	else
	{
		window.location.hash = (activeSlide + 1) + '_' + activeEffect;
		processingEffect = false;
	}
}

/** Function to display the index sheet.
 *
 *  @param offsetNumber offset number
 */
function displayIndex(offsetNumber)
{
	var offsetX = 0;
	var offsetY = 0;

	if (offsetNumber &lt; 0)
		offsetNumber = 0;
	else if (offsetNumber &gt;= slides.length)
		offsetNumber = slides.length - 1;

	for (var counter = 0; counter &lt; slides.length; counter++)
	{
		if ((counter &lt; offsetNumber) || (counter &gt; offsetNumber + INDEX_COLUMNS * INDEX_COLUMNS - 1))
		{
			slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0);
			slides[counter][&quot;element&quot;].style.display = &quot;none&quot;;
		}
		else
		{
			offsetX = ((counter - offsetNumber) % INDEX_COLUMNS) * WIDTH;
			offsetY = Math.floor((counter - offsetNumber) / INDEX_COLUMNS) * HEIGHT;

			slides[counter][&quot;element&quot;].setAttribute(&quot;transform&quot;,&quot;scale(&quot;+1/INDEX_COLUMNS+&quot;) translate(&quot;+offsetX+&quot;,&quot;+offsetY+&quot;)&quot;);
			slides[counter][&quot;element&quot;].style.display = &quot;inherit&quot;;
			slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0.5);
		}

		setSlideToState(counter, STATE_END);
	}

	//do we need to save the current offset?
	if (INDEX_OFFSET != offsetNumber)
		INDEX_OFFSET = offsetNumber;
}

/** Function to set the active slide in the slide view.
 *
 *  @param nbr index of the active slide
 */
function slideSetActiveSlide(nbr)
{
	if (nbr &gt;= slides.length)
		nbr = slides.length - 1;
	else if (nbr &lt; 0)
		nbr = 0;

	slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0);
	slides[activeSlide][&quot;element&quot;].style.display = &quot;none&quot;;

	activeSlide = parseInt(nbr);

	setSlideToState(activeSlide, STATE_START);
	slides[activeSlide][&quot;element&quot;].style.display = &quot;inherit&quot;;
	slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,1);

	activeEffect = 0;
	setProgressBarValue(nbr);
}

/** Function to set the active slide in the index view.
 *
 *  @param nbr index of the active slide
 */
function indexSetActiveSlide(nbr)
{
	if (nbr &gt;= slides.length)
		nbr = slides.length - 1;
	else if (nbr &lt; 0)
		nbr = 0;

	slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0.5);

	activeSlide = parseInt(nbr);
	window.location.hash = (activeSlide + 1) + '_0';

	slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,1);
}

/** Function to set the page and active slide in index view. 
 *
 *  @param nbr index of the active slide
 *
 *  NOTE: To force a redraw,
 *  set INDEX_OFFSET to -1 before calling indexSetPageSlide().
 *
 *  This is necessary for zooming (otherwise the index might not
 *  get redrawn) and when switching to index mode.
 *
 *  INDEX_OFFSET = -1
 *  indexSetPageSlide(activeSlide);
 */
function indexSetPageSlide(nbr)
{
	if (nbr &gt;= slides.length)
		nbr = slides.length - 1;
	else if (nbr &lt; 0)
		nbr = 0;

	//calculate the offset
	var offset = nbr - nbr % (INDEX_COLUMNS * INDEX_COLUMNS);

	if (offset &lt; 0)
		offset = 0;

	//if different from kept offset, then record and change the page
	if (offset != INDEX_OFFSET)
	{
		INDEX_OFFSET = offset;
		displayIndex(INDEX_OFFSET);
	}

	//set the active slide
	indexSetActiveSlide(nbr);
}

/** Event handler for key press.
 *
 *  @param e the event
 */
function keydown(e)
{
	if (!e)
		e = window.event;

	code = e.keyCode || e.charCode;

	if (!processingEffect &amp;&amp; keyCodeDictionary[currentMode] &amp;&amp; keyCodeDictionary[currentMode][code])
		return keyCodeDictionary[currentMode][code]();
	else
		document.onkeypress = keypress;
}
// Set event handler for key down.
document.onkeydown = keydown;

/** Event handler for key press.
 *
 *  @param e the event
 */
function keypress(e)
{
	document.onkeypress = null;

	if (!e)
		e = window.event;

	str = String.fromCharCode(e.keyCode || e.charCode);

	if (!processingEffect &amp;&amp; charCodeDictionary[currentMode] &amp;&amp; charCodeDictionary[currentMode][str])
		return charCodeDictionary[currentMode][str]();
}

/** Function to supply the default char code dictionary.
 *
 * @returns default char code dictionary
 */
function getDefaultCharCodeDictionary()
{
	var charCodeDict = new Object();

	charCodeDict[SLIDE_MODE] = new Object();
	charCodeDict[INDEX_MODE] = new Object();
	charCodeDict[DRAWING_MODE] = new Object();

	charCodeDict[SLIDE_MODE][&quot;i&quot;] = function () { return toggleSlideIndex(); };
	charCodeDict[SLIDE_MODE][&quot;d&quot;] = function () { return slideSwitchToDrawingMode(); };
	charCodeDict[SLIDE_MODE][&quot;D&quot;] = function () { return slideQueryDuration(); };
	charCodeDict[SLIDE_MODE][&quot;n&quot;] = function () { return slideAddSlide(activeSlide); };
	charCodeDict[SLIDE_MODE][&quot;p&quot;] = function () { return slideToggleProgressBarVisibility(); };
	charCodeDict[SLIDE_MODE][&quot;t&quot;] = function () { return slideResetTimer(); };
	charCodeDict[SLIDE_MODE][&quot;e&quot;] = function () { return slideUpdateExportLayer(); };

	charCodeDict[DRAWING_MODE][&quot;d&quot;] = function () { return drawingSwitchToSlideMode(); };
	charCodeDict[DRAWING_MODE][&quot;0&quot;] = function () { return drawingResetPathWidth(); };
	charCodeDict[DRAWING_MODE][&quot;1&quot;] = function () { return drawingSetPathWidth(1.0); };
	charCodeDict[DRAWING_MODE][&quot;3&quot;] = function () { return drawingSetPathWidth(3.0); };
	charCodeDict[DRAWING_MODE][&quot;5&quot;] = function () { return drawingSetPathWidth(5.0); };
	charCodeDict[DRAWING_MODE][&quot;7&quot;] = function () { return drawingSetPathWidth(7.0); };
	charCodeDict[DRAWING_MODE][&quot;9&quot;] = function () { return drawingSetPathWidth(9.0); };
	charCodeDict[DRAWING_MODE][&quot;b&quot;] = function () { return drawingSetPathColour(&quot;blue&quot;); };
	charCodeDict[DRAWING_MODE][&quot;c&quot;] = function () { return drawingSetPathColour(&quot;cyan&quot;); };
	charCodeDict[DRAWING_MODE][&quot;g&quot;] = function () { return drawingSetPathColour(&quot;green&quot;); };
	charCodeDict[DRAWING_MODE][&quot;k&quot;] = function () { return drawingSetPathColour(&quot;black&quot;); };
	charCodeDict[DRAWING_MODE][&quot;m&quot;] = function () { return drawingSetPathColour(&quot;magenta&quot;); };
	charCodeDict[DRAWING_MODE][&quot;o&quot;] = function () { return drawingSetPathColour(&quot;orange&quot;); };
	charCodeDict[DRAWING_MODE][&quot;r&quot;] = function () { return drawingSetPathColour(&quot;red&quot;); };
	charCodeDict[DRAWING_MODE][&quot;w&quot;] = function () { return drawingSetPathColour(&quot;white&quot;); };
	charCodeDict[DRAWING_MODE][&quot;y&quot;] = function () { return drawingSetPathColour(&quot;yellow&quot;); };
	charCodeDict[DRAWING_MODE][&quot;z&quot;] = function () { return drawingUndo(); };

	charCodeDict[INDEX_MODE][&quot;i&quot;] = function () { return toggleSlideIndex(); };
	charCodeDict[INDEX_MODE][&quot;-&quot;] = function () { return indexDecreaseNumberOfColumns(); };
	charCodeDict[INDEX_MODE][&quot;=&quot;] = function () { return indexIncreaseNumberOfColumns(); };
	charCodeDict[INDEX_MODE][&quot;+&quot;] = function () { return indexIncreaseNumberOfColumns(); };
	charCodeDict[INDEX_MODE][&quot;0&quot;] = function () { return indexResetNumberOfColumns(); };

	return charCodeDict;
}

/** Function to supply the default key code dictionary.
 *
 * @returns default key code dictionary
 */
function getDefaultKeyCodeDictionary()
{
	var keyCodeDict = new Object();

	keyCodeDict[SLIDE_MODE] = new Object();
	keyCodeDict[INDEX_MODE] = new Object();
	keyCodeDict[DRAWING_MODE] = new Object();

	keyCodeDict[SLIDE_MODE][LEFT_KEY] = function() { return dispatchEffects(-1); };
	keyCodeDict[SLIDE_MODE][RIGHT_KEY] = function() { return dispatchEffects(1); };
	keyCodeDict[SLIDE_MODE][UP_KEY] = function() { return skipEffects(-1); };
	keyCodeDict[SLIDE_MODE][DOWN_KEY] = function() { return skipEffects(1); };
	keyCodeDict[SLIDE_MODE][PAGE_UP_KEY] = function() { return dispatchEffects(-1); };
	keyCodeDict[SLIDE_MODE][PAGE_DOWN_KEY] = function() { return dispatchEffects(1); };
	keyCodeDict[SLIDE_MODE][HOME_KEY] = function() { return slideSetActiveSlide(0); };
	keyCodeDict[SLIDE_MODE][END_KEY] = function() { return slideSetActiveSlide(slides.length - 1); };
	keyCodeDict[SLIDE_MODE][SPACE_KEY] = function() { return dispatchEffects(1); };

	keyCodeDict[INDEX_MODE][LEFT_KEY] = function() { return indexSetPageSlide(activeSlide - 1); };
	keyCodeDict[INDEX_MODE][RIGHT_KEY] = function() { return indexSetPageSlide(activeSlide + 1); };
	keyCodeDict[INDEX_MODE][UP_KEY] = function() { return indexSetPageSlide(activeSlide - INDEX_COLUMNS); };
	keyCodeDict[INDEX_MODE][DOWN_KEY] = function() { return indexSetPageSlide(activeSlide + INDEX_COLUMNS); };
	keyCodeDict[INDEX_MODE][PAGE_UP_KEY] = function() { return indexSetPageSlide(activeSlide - INDEX_COLUMNS * INDEX_COLUMNS); };
	keyCodeDict[INDEX_MODE][PAGE_DOWN_KEY] = function() { return indexSetPageSlide(activeSlide + INDEX_COLUMNS * INDEX_COLUMNS); };
	keyCodeDict[INDEX_MODE][HOME_KEY] = function() { return indexSetPageSlide(0); };
	keyCodeDict[INDEX_MODE][END_KEY] = function() { return indexSetPageSlide(slides.length - 1); };
	keyCodeDict[INDEX_MODE][ENTER_KEY] = function() { return toggleSlideIndex(); };

	keyCodeDict[DRAWING_MODE][ESCAPE_KEY] = function () { return drawingSwitchToSlideMode(); };

	return keyCodeDict;
}

/** Function to handle all mouse events.
 *
 *	@param	evnt	event
 *	@param	action	type of event (e.g. mouse up, mouse wheel)
 */
function mouseHandlerDispatch(evnt, action)
{
	if (!evnt)
		evnt = window.event;

	var retVal = true;

	if (!processingEffect &amp;&amp; mouseHandlerDictionary[currentMode] &amp;&amp; mouseHandlerDictionary[currentMode][action])
	{
		var subRetVal = mouseHandlerDictionary[currentMode][action](evnt);

		if (subRetVal != null &amp;&amp; subRetVal != undefined)
			retVal = subRetVal;
	}

	if (evnt.preventDefault &amp;&amp; !retVal)
		evnt.preventDefault();

	evnt.returnValue = retVal;

	return retVal;
}

// Set mouse event handler.
document.onmousedown = function(e) { return mouseHandlerDispatch(e, MOUSE_DOWN); };
document.onmouseup = function(e) { return mouseHandlerDispatch(e, MOUSE_UP); };
document.onmousemove = function(e) { return mouseHandlerDispatch(e, MOUSE_MOVE); };

// Moz
if (window.addEventListener)
{
	window.addEventListener('DOMMouseScroll', function(e) { return mouseHandlerDispatch(e, MOUSE_WHEEL); }, false);
}

// Opera Safari OK - may not work in IE
window.onmousewheel = function(e) { return mouseHandlerDispatch(e, MOUSE_WHEEL); };

/** Function to supply the default mouse handler dictionary.
 *
 * @returns default mouse handler dictionary
 */
function getDefaultMouseHandlerDictionary()
{
	var mouseHandlerDict = new Object();

	mouseHandlerDict[SLIDE_MODE] = new Object();
	mouseHandlerDict[INDEX_MODE] = new Object();
	mouseHandlerDict[DRAWING_MODE] = new Object();

	mouseHandlerDict[SLIDE_MODE][MOUSE_DOWN] = function(evnt) { return dispatchEffects(1); };
	mouseHandlerDict[SLIDE_MODE][MOUSE_WHEEL] = function(evnt) { return slideMousewheel(evnt); };

	mouseHandlerDict[INDEX_MODE][MOUSE_DOWN] = function(evnt) { return toggleSlideIndex(); };

	mouseHandlerDict[DRAWING_MODE][MOUSE_DOWN] = function(evnt) { return drawingMousedown(evnt); };
	mouseHandlerDict[DRAWING_MODE][MOUSE_UP] = function(evnt) { return drawingMouseup(evnt); };
	mouseHandlerDict[DRAWING_MODE][MOUSE_MOVE] = function(evnt) { return drawingMousemove(evnt); };

	return mouseHandlerDict;
}

/** Function to switch from slide mode to drawing mode.
*/
function slideSwitchToDrawingMode()
{
	currentMode = DRAWING_MODE;

	var tempDict;

	if (ROOT_NODE.hasAttribute(&quot;style&quot;))
		tempDict = propStrToDict(ROOT_NODE.getAttribute(&quot;style&quot;));
	else
		tempDict = new Object();

	tempDict[&quot;cursor&quot;] = &quot;crosshair&quot;;
	ROOT_NODE.setAttribute(&quot;style&quot;, dictToPropStr(tempDict));
}

/** Function to switch from drawing mode to slide mode.
*/
function drawingSwitchToSlideMode()
{
	currentMode = SLIDE_MODE;

	var tempDict;

	if (ROOT_NODE.hasAttribute(&quot;style&quot;))
		tempDict = propStrToDict(ROOT_NODE.getAttribute(&quot;style&quot;));
	else
		tempDict = new Object();

	tempDict[&quot;cursor&quot;] = &quot;auto&quot;;
	ROOT_NODE.setAttribute(&quot;style&quot;, dictToPropStr(tempDict));
}

/** Function to decrease the number of columns in index mode.
*/
function indexDecreaseNumberOfColumns()
{
	if (INDEX_COLUMNS &gt;= 3)
	{
		INDEX_COLUMNS -= 1;
		INDEX_OFFSET = -1
			indexSetPageSlide(activeSlide);
	}
}

/** Function to increase the number of columns in index mode.
*/
function indexIncreaseNumberOfColumns()
{
	if (INDEX_COLUMNS &lt; 7)
	{
		INDEX_COLUMNS += 1;
		INDEX_OFFSET = -1
			indexSetPageSlide(activeSlide);
	}
}

/** Function to reset the number of columns in index mode.
*/
function indexResetNumberOfColumns()
{
	if (INDEX_COLUMNS != INDEX_COLUMNS_DEFAULT)
	{
		INDEX_COLUMNS = INDEX_COLUMNS_DEFAULT;
		INDEX_OFFSET = -1
			indexSetPageSlide(activeSlide);
	}
}

/** Function to reset path width in drawing mode.
*/
function drawingResetPathWidth()
{
	path_width = path_width_default;
	set_path_paint_width();
}

/** Function to set path width in drawing mode.
 *
 * @param width new path width
 */
function drawingSetPathWidth(width)
{
	path_width = width;
	set_path_paint_width();
}

/** Function to set path colour in drawing mode.
 *
 * @param colour new path colour
 */
function drawingSetPathColour(colour)
{
	path_colour = colour;
}

/** Function to query the duration of the presentation from the user in slide mode.
*/
function slideQueryDuration()
{
	var new_duration = prompt(&quot;Length of presentation in minutes?&quot;, timer_duration);

	if ((new_duration != null) &amp;&amp; (new_duration != ''))
	{
		timer_duration = new_duration;
	}

	updateTimer();
}

/** Function to add new slide in slide mode.
 *
 * @param afterSlide after which slide to insert the new one
 */
function slideAddSlide(afterSlide)
{
	addSlide(afterSlide);
	slideSetActiveSlide(afterSlide + 1);
	updateTimer();
}

/** Function to toggle the visibility of the progress bar in slide mode.
*/
function slideToggleProgressBarVisibility()
{
	if (progress_bar_visible)
	{
		progress_bar_visible = false;
		hideProgressBar();
	}
	else
	{
		progress_bar_visible = true;
		showProgressBar();
	}
}

/** Function to reset the timer in slide mode.
*/
function slideResetTimer()
{
	timer_start = timer_elapsed;
	updateTimer();
}

/** Convenience function to pad a string with zero in front up to a certain length.
 */
function padString(str, len)
{
	var outStr = str;

	while (outStr.length &lt; len)
	{
		outStr = '0' + outStr;
	}

	return outStr;
}

/** Function to update the export layer.
 */
function slideUpdateExportLayer()
{
	// Suspend redraw since we are going to mess with the slides.
	var suspendHandle = ROOT_NODE.suspendRedraw(2000);

	var tmpActiveSlide = activeSlide;
	var tmpActiveEffect = activeEffect;
	var exportedLayers = new Array();

	for (var counterSlides = 0; counterSlides &lt; slides.length; counterSlides++)
	{
		var exportNode;

		setSlideToState(counterSlides, STATE_START);

		var maxEffect = 0;

		if (slides[counterSlides].effects)
		{
			maxEffect = slides[counterSlides].effects.length;
		}

		exportNode = slides[counterSlides].element.cloneNode(true);
		exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);
		exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, &quot;slide_&quot; + padString((counterSlides + 1).toString(), slides.length.toString().length) + &quot;_effect_&quot; + padString(&quot;0&quot;, maxEffect.toString().length));

		exportedLayers.push(exportNode);

		if (slides[counterSlides][&quot;effects&quot;])
		{	
			for (var counter = 0; counter &lt; slides[counterSlides][&quot;effects&quot;].length; counter++)
			{
				for (var subCounter = 0; subCounter &lt; slides[counterSlides][&quot;effects&quot;][counter].length; subCounter++)
				{
					var effect = slides[counterSlides][&quot;effects&quot;][counter][subCounter];
					if (effect[&quot;effect&quot;] == &quot;fade&quot;)
						fade(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;appear&quot;)
						appear(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;pop&quot;)
						pop(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;view&quot;)
						view(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
				}

				var layerName = &quot;slide_&quot; + padString((counterSlides + 1).toString(), slides.length.toString().length) + &quot;_effect_&quot; + padString((counter + 1).toString(), maxEffect.toString().length);
				exportNode = slides[counterSlides].element.cloneNode(true);
				exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);
				exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, layerName);
				exportNode.setAttribute(&quot;id&quot;, layerName);

				exportedLayers.push(exportNode);
			}
		}
	}

	activeSlide = tmpActiveSlide;
	activeEffect = tmpActiveEffect;
	setSlideToState(activeSlide, activeEffect);

	// Copy image.
	var newDoc = document.documentElement.cloneNode(true);

	// Delete viewbox form new imag and set width and height.
	newDoc.removeAttribute('viewbox');
	newDoc.setAttribute('width', WIDTH);
	newDoc.setAttribute('height', HEIGHT);

	// Delete all layers and script elements.
	var nodesToBeRemoved = new Array();

	for (var childCounter = 0; childCounter &lt;  newDoc.childNodes.length; childCounter++)
	{
		var child = newDoc.childNodes[childCounter];

		if (child.nodeType == 1)
		{
			if ((child.nodeName.toUpperCase() == 'G') || (child.nodeName.toUpperCase() == 'SCRIPT'))
			{
				nodesToBeRemoved.push(child);
			}
		}
	}

	for (var ndCounter = 0; ndCounter &lt; nodesToBeRemoved.length; ndCounter++)
	{
		var nd = nodesToBeRemoved[ndCounter];

		// Before removing the node, check whether it contains any definitions.
		var defs = nd.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;defs&quot;);

		for (var defsCounter = 0; defsCounter &lt; defs.length; defsCounter++)
		{
			if (defs[defsCounter].id)
			{
				newDoc.appendChild(defs[defsCounter].cloneNode(true));
			}
		}

		// Remove node.
		nd.parentNode.removeChild(nd);
	}

	// Set current layer.
	if (exportedLayers[0])
	{
		var namedView;

		for (var nodeCounter = 0; nodeCounter &lt; newDoc.childNodes.length; nodeCounter++)
		{
			if ((newDoc.childNodes[nodeCounter].nodeType == 1) &amp;&amp; (newDoc.childNodes[nodeCounter].getAttribute('id') == 'base'))
			{
				namedView = newDoc.childNodes[nodeCounter];
			}
		}

		if (namedView)
		{
			namedView.setAttributeNS(NSS['inkscape'], 'current-layer', exportedLayers[0].getAttributeNS(NSS['inkscape'], 'label'));
		}
	}

	// Add exported layers.
	while (exportedLayers.length &gt; 0)
	{
		var nd = exportedLayers.pop();

		nd.setAttribute(&quot;opacity&quot;,1);
		nd.style.display = &quot;inherit&quot;;

		newDoc.appendChild(nd);
	}

	// Serialise the new document.
  window.location = 'data:application/svg+xml;base64;charset=utf-8,' + window.btoa(unescape(encodeURIComponent((new XMLSerializer()).serializeToString(newDoc))));

	// Unsuspend redraw.
	ROOT_NODE.unsuspendRedraw(suspendHandle);
	ROOT_NODE.forceRedraw();
}

/** Function to undo last drawing operation.
*/
function drawingUndo()
{
	mouse_presentation_path = null;
	mouse_original_path = null;

	if (history_presentation_elements.length &gt; 0)
	{
		var p = history_presentation_elements.pop();
		var parent = p.parentNode.removeChild(p);

		p = history_original_elements.pop();
		parent = p.parentNode.removeChild(p);
	}
}

/** Event handler for mouse down in drawing mode.
 *
 *  @param e the event
 */
function drawingMousedown(e)
{
	var value = 0;

	if (e.button)
		value = e.button;
	else if (e.which)
		value = e.which;

	if (value == 1)
	{
		history_counter++;

		var p = calcCoord(e);

		mouse_last_x = e.clientX;
		mouse_last_y = e.clientY;
		mouse_original_path = document.createElementNS(NSS[&quot;svg&quot;], &quot;path&quot;);
		mouse_original_path.setAttribute(&quot;stroke&quot;, path_colour);
		mouse_original_path.setAttribute(&quot;stroke-width&quot;, path_paint_width);
		mouse_original_path.setAttribute(&quot;fill&quot;, &quot;none&quot;);
		mouse_original_path.setAttribute(&quot;id&quot;, &quot;path &quot; + Date());
		mouse_original_path.setAttribute(&quot;d&quot;, &quot;M&quot; + p.x + &quot;,&quot; + p.y);
		slides[activeSlide][&quot;original_element&quot;].appendChild(mouse_original_path);
		history_original_elements.push(mouse_original_path);

		mouse_presentation_path = document.createElementNS(NSS[&quot;svg&quot;], &quot;path&quot;);
		mouse_presentation_path.setAttribute(&quot;stroke&quot;, path_colour);
		mouse_presentation_path.setAttribute(&quot;stroke-width&quot;, path_paint_width);
		mouse_presentation_path.setAttribute(&quot;fill&quot;, &quot;none&quot;);
		mouse_presentation_path.setAttribute(&quot;id&quot;, &quot;path &quot; + Date() + &quot; presentation copy&quot;);
		mouse_presentation_path.setAttribute(&quot;d&quot;, &quot;M&quot; + p.x + &quot;,&quot; + p.y);

		if (slides[activeSlide][&quot;viewGroup&quot;])
			slides[activeSlide][&quot;viewGroup&quot;].appendChild(mouse_presentation_path);
		else
			slides[activeSlide][&quot;element&quot;].appendChild(mouse_presentation_path);

		history_presentation_elements.push(mouse_presentation_path);

		return false;
	}

	return true;
}

/** Event handler for mouse up in drawing mode.
 *
 *  @param e the event
 */
function drawingMouseup(e)
{
	if(!e)
		e = window.event;

	if (mouse_presentation_path != null)
	{
		var p = calcCoord(e);
		var d = mouse_presentation_path.getAttribute(&quot;d&quot;);
		d += &quot; L&quot; + p.x + &quot;,&quot; + p.y;
		mouse_presentation_path.setAttribute(&quot;d&quot;, d);
		mouse_presentation_path = null;
		mouse_original_path.setAttribute(&quot;d&quot;, d);
		mouse_original_path = null;

		return false;
	}

	return true;
}

/** Event handler for mouse move in drawing mode.
 *
 *  @param e the event
 */
function drawingMousemove(e)
{
	if(!e)
		e = window.event;

	var dist = (mouse_last_x - e.clientX) * (mouse_last_x - e.clientX) + (mouse_last_y - e.clientY) * (mouse_last_y - e.clientY);

	if (mouse_presentation_path == null)
	{
		return true;
	}

	if (dist &gt;= mouse_min_dist_sqr)
	{
		var p = calcCoord(e);
		var d = mouse_presentation_path.getAttribute(&quot;d&quot;);
		d += &quot; L&quot; + p.x + &quot;,&quot; + p.y;
		mouse_presentation_path.setAttribute(&quot;d&quot;, d);
		mouse_original_path.setAttribute(&quot;d&quot;, d);
		mouse_last_x = e.clientX;
		mouse_last_y = e.clientY;
	}

	return false;
}

/** Event handler for mouse wheel events in slide mode.
 *  based on http://adomas.org/javascript-mouse-wheel/
 *
 *  @param e the event
 */
function slideMousewheel(e)
{
	var delta = 0;

	if (!e)
		e = window.event;

	if (e.wheelDelta)
	{ // IE Opera
		delta = e.wheelDelta/120;
	}
	else if (e.detail)
	{ // MOZ
		delta = -e.detail/3;
	}

	if (delta &gt; 0)
		skipEffects(-1);
	else if (delta &lt; 0)
		skipEffects(1);

	if (e.preventDefault)
		e.preventDefault();

	e.returnValue = false;
}

/** Event handler for mouse wheel events in index mode.
 *  based on http://adomas.org/javascript-mouse-wheel/
 *
 *  @param e the event
 */
function indexMousewheel(e)
{
	var delta = 0;

	if (!e)
		e = window.event;

	if (e.wheelDelta)
	{ // IE Opera
		delta = e.wheelDelta/120;
	}
	else if (e.detail)
	{ // MOZ
		delta = -e.detail/3;
	}

	if (delta &gt; 0)
		indexSetPageSlide(activeSlide - INDEX_COLUMNS * INDEX_COLUMNS);
	else if (delta &lt; 0)
		indexSetPageSlide(activeSlide + INDEX_COLUMNS * INDEX_COLUMNS);

	if (e.preventDefault)
		e.preventDefault();

	e.returnValue = false;
}

/** Function to set the path paint width.
*/
function set_path_paint_width()
{
	var svgPoint1 = document.documentElement.createSVGPoint();
	var svgPoint2 = document.documentElement.createSVGPoint();

	svgPoint1.x = 0.0;
	svgPoint1.y = 0.0;
	svgPoint2.x = 1.0;
	svgPoint2.y = 0.0;

	var matrix = slides[activeSlide][&quot;element&quot;].getTransformToElement(ROOT_NODE);

	if (slides[activeSlide][&quot;viewGroup&quot;])
		matrix = slides[activeSlide][&quot;viewGroup&quot;].getTransformToElement(ROOT_NODE);

	svgPoint1 = svgPoint1.matrixTransform(matrix);
	svgPoint2 = svgPoint2.matrixTransform(matrix);

	path_paint_width = path_width / Math.sqrt((svgPoint2.x - svgPoint1.x) * (svgPoint2.x - svgPoint1.x) + (svgPoint2.y - svgPoint1.y) * (svgPoint2.y - svgPoint1.y));
}

/** The view effect.
 *
 *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)
 *  @param element the element the effect should be applied to
 *  @param time the time that has elapsed since the beginning of the effect
 *  @param options a dictionary with additional options (e.g. length of the effect); for the view effect the options need to contain the old and the new matrix.
 */
function view(dir, element, time, options)
{
	var length = 250;
	var fraction;

	if (!options[&quot;matrixInitial&quot;])
	{
		var tempString = slides[activeSlide][&quot;viewGroup&quot;].getAttribute(&quot;transform&quot;);

		if (tempString)
			options[&quot;matrixInitial&quot;] = (new matrixSVG()).fromAttribute(tempString);
		else
			options[&quot;matrixInitial&quot;] = (new matrixSVG()).fromSVGElements(1, 0, 0, 1, 0, 0);
	}

	if ((time == STATE_END) || (time == STATE_START))
		fraction = 1;
	else
	{
		if (options &amp;&amp; options[&quot;length&quot;])
			length = options[&quot;length&quot;];

		fraction = time / length;
	}

	if (dir == 1)
	{
		if (fraction &lt;= 0)
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].toAttribute());
		}
		else if (fraction &gt;= 1)
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixNew&quot;].toAttribute());

			set_path_paint_width();

			options[&quot;matrixInitial&quot;] = null;
			return true;
		}
		else
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].mix(options[&quot;matrixNew&quot;], fraction).toAttribute());
		}
	}
	else if (dir == -1)
	{
		if (fraction &lt;= 0)
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].toAttribute());
		}
		else if (fraction &gt;= 1)
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixOld&quot;].toAttribute());
			set_path_paint_width();

			options[&quot;matrixInitial&quot;] = null;
			return true;
		}
		else
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].mix(options[&quot;matrixOld&quot;], fraction).toAttribute());
		}
	}

	return false;
}

/** The fade effect.
 *
 *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)
 *  @param element the element the effect should be applied to
 *  @param time the time that has elapsed since the beginning of the effect
 *  @param options a dictionary with additional options (e.g. length of the effect)
 */
function fade(dir, element, time, options)
{
	var length = 250;
	var fraction;

	if ((time == STATE_END) || (time == STATE_START))
		fraction = 1;
	else
	{
		if (options &amp;&amp; options[&quot;length&quot;])
			length = options[&quot;length&quot;];

		fraction = time / length;
	}

	if (dir == 1)
	{
		if (fraction &lt;= 0)
		{
			element.style.display = &quot;none&quot;;
			element.setAttribute(&quot;opacity&quot;, 0);
		}
		else if (fraction &gt;= 1)
		{
			element.style.display = &quot;inherit&quot;;
			element.setAttribute(&quot;opacity&quot;, 1);
			return true;
		}
		else
		{
			element.style.display = &quot;inherit&quot;;
			element.setAttribute(&quot;opacity&quot;, fraction);
		}
	}
	else if (dir == -1)
	{
		if (fraction &lt;= 0)
		{
			element.style.display = &quot;inherit&quot;;
			element.setAttribute(&quot;opacity&quot;, 1);
		}
		else if (fraction &gt;= 1)
		{
			element.setAttribute(&quot;opacity&quot;, 0);
			element.style.display = &quot;none&quot;;
			return true;
		}
		else
		{
			element.style.display = &quot;inherit&quot;;
			element.setAttribute(&quot;opacity&quot;, 1 - fraction);
		}
	}
	return false;
}

/** The appear effect.
 *
 *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)
 *  @param element the element the effect should be applied to
 *  @param time the time that has elapsed since the beginning of the effect
 *  @param options a dictionary with additional options (e.g. length of the effect)
 */
function appear(dir, element, time, options)
{
	if (dir == 1)
	{
		element.style.display = &quot;inherit&quot;;
		element.setAttribute(&quot;opacity&quot;,1);
	}
	else if (dir == -1)
	{
		element.style.display = &quot;none&quot;;
		element.setAttribute(&quot;opacity&quot;,0);
	}
	return true;
}

/** The pop effect.
 *
 *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)
 *  @param element the element the effect should be applied to
 *  @param time the time that has elapsed since the beginning of the effect
 *  @param options a dictionary with additional options (e.g. length of the effect)
 */
function pop(dir, element, time, options)
{
	var length = 500;
	var fraction;

	if ((time == STATE_END) || (time == STATE_START))
		fraction = 1;
	else
	{
		if (options &amp;&amp; options[&quot;length&quot;])
			length = options[&quot;length&quot;];

		fraction = time / length;
	}

	if (dir == 1)
	{
		if (fraction &lt;= 0)
		{
			element.setAttribute(&quot;opacity&quot;, 0);
			element.setAttribute(&quot;transform&quot;, &quot;scale(0)&quot;);
			element.style.display = &quot;none&quot;;
		}
		else if (fraction &gt;= 1)
		{
			element.setAttribute(&quot;opacity&quot;, 1);
			element.removeAttribute(&quot;transform&quot;);
			element.style.display = &quot;inherit&quot;;
			return true;
		}
		else
		{
			element.style.display = &quot;inherit&quot;;
			var opacityFraction = fraction * 3;
			if (opacityFraction &gt; 1)
				opacityFraction = 1;
			element.setAttribute(&quot;opacity&quot;, opacityFraction);
			var offsetX = WIDTH * (1.0 - fraction) / 2.0;
			var offsetY = HEIGHT * (1.0 - fraction) / 2.0;
			element.setAttribute(&quot;transform&quot;, &quot;translate(&quot; + offsetX + &quot;,&quot; + offsetY + &quot;) scale(&quot; + fraction + &quot;)&quot;);
		}
	}
	else if (dir == -1)
	{
		if (fraction &lt;= 0)
		{
			element.setAttribute(&quot;opacity&quot;, 1);
			element.setAttribute(&quot;transform&quot;, &quot;scale(1)&quot;);
			element.style.display = &quot;inherit&quot;;
		}
		else if (fraction &gt;= 1)
		{
			element.setAttribute(&quot;opacity&quot;, 0);
			element.removeAttribute(&quot;transform&quot;);
			element.style.display = &quot;none&quot;;
			return true;
		}
		else
		{
			element.setAttribute(&quot;opacity&quot;, 1 - fraction);
			element.setAttribute(&quot;transform&quot;, &quot;scale(&quot; + 1 - fraction + &quot;)&quot;);
			element.style.display = &quot;inherit&quot;;
		}
	}
	return false;
}

/** Function to set a slide either to the start or the end state.
 *  
 *  @param slide the slide to use
 *  @param state the state into which the slide should be set
 */
function setSlideToState(slide, state)
{
	slides[slide][&quot;viewGroup&quot;].setAttribute(&quot;transform&quot;, slides[slide].initialView);

	if (slides[slide][&quot;effects&quot;])
	{	
		if (state == STATE_END)
		{
			for (var counter = 0; counter &lt; slides[slide][&quot;effects&quot;].length; counter++)
			{
				for (var subCounter = 0; subCounter &lt; slides[slide][&quot;effects&quot;][counter].length; subCounter++)
				{
					var effect = slides[slide][&quot;effects&quot;][counter][subCounter];
					if (effect[&quot;effect&quot;] == &quot;fade&quot;)
						fade(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;appear&quot;)
						appear(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;pop&quot;)
						pop(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;view&quot;)
						view(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
				}
			}
		}
		else if (state == STATE_START)
		{
			for (var counter = slides[slide][&quot;effects&quot;].length - 1; counter &gt;= 0; counter--)
			{
				for (var subCounter = 0; subCounter &lt; slides[slide][&quot;effects&quot;][counter].length; subCounter++)
				{
					var effect = slides[slide][&quot;effects&quot;][counter][subCounter];
					if (effect[&quot;effect&quot;] == &quot;fade&quot;)
						fade(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;appear&quot;)
						appear(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;pop&quot;)
						pop(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;view&quot;)
						view(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);	
				}
			}
		}
		else
		{
			setSlideToState(slide, STATE_START);

			for (var counter = 0; counter &lt; slides[slide][&quot;effects&quot;].length &amp;&amp; counter &lt; state; counter++)
			{
				for (var subCounter = 0; subCounter &lt; slides[slide][&quot;effects&quot;][counter].length; subCounter++)
				{
					var effect = slides[slide][&quot;effects&quot;][counter][subCounter];
					if (effect[&quot;effect&quot;] == &quot;fade&quot;)
						fade(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;appear&quot;)
						appear(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;pop&quot;)
						pop(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;view&quot;)
						view(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
				}
			}
		}
	}

	window.location.hash = (activeSlide + 1) + '_' + activeEffect;
}

/** Convenience function to translate a attribute string into a dictionary.
 *
 *	@param str the attribute string
 *  @return a dictionary
 *  @see dictToPropStr
 */
function propStrToDict(str)
{
	var list = str.split(&quot;;&quot;);
	var obj = new Object();

	for (var counter = 0; counter &lt; list.length; counter++)
	{
		var subStr = list[counter];
		var subList = subStr.split(&quot;:&quot;);
		if (subList.length == 2)
		{
			obj[subList[0]] = subList[1];
		}	
	}

	return obj;
}

/** Convenience function to translate a dictionary into a string that can be used as an attribute.
 *
 *  @param dict the dictionary to convert
 *  @return a string that can be used as an attribute
 *  @see propStrToDict
 */
function dictToPropStr(dict)
{
	var str = &quot;&quot;;

	for (var key in dict)
	{
		str += key + &quot;:&quot; + dict[key] + &quot;;&quot;;
	}

	return str;
}

/** Sub-function to add a suffix to the ids of the node and all its children.
 *	
 *	@param node the node to change
 *	@param suffix the suffix to add
 *	@param replace dictionary of replaced ids
 *  @see suffixNodeIds
 */
function suffixNoneIds_sub(node, suffix, replace)
{
	if (node.nodeType == 1)
	{
		if (node.getAttribute(&quot;id&quot;))
		{
			var id = node.getAttribute(&quot;id&quot;)
				replace[&quot;#&quot; + id] = id + suffix;
			node.setAttribute(&quot;id&quot;, id + suffix);
		}

		if ((node.nodeName == &quot;use&quot;) &amp;&amp; (node.getAttributeNS(NSS[&quot;xlink&quot;], &quot;href&quot;)) &amp;&amp; (replace[node.getAttribute(NSS[&quot;xlink&quot;], &quot;href&quot;)]))
			node.setAttribute(NSS[&quot;xlink&quot;], &quot;href&quot;, node.getAttribute(NSS[&quot;xlink&quot;], &quot;href&quot;) + suffix);

		if (node.childNodes)
		{
			for (var counter = 0; counter &lt; node.childNodes.length; counter++)
				suffixNoneIds_sub(node.childNodes[counter], suffix, replace);
		}
	}
}

/** Function to add a suffix to the ids of the node and all its children.
 *	
 *	@param node the node to change
 *	@param suffix the suffix to add
 *  @return the changed node
 *  @see suffixNodeIds_sub
 */
function suffixNodeIds(node, suffix)
{
	var replace = new Object();

	suffixNoneIds_sub(node, suffix, replace);

	return node;
}

/** Function to build a progress bar.
 *	
 *  @param parent node to attach the progress bar to
 */
function createProgressBar(parent_node)
{
	var g = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);
	g.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);
	g.setAttribute(&quot;id&quot;, &quot;layer_progress_bar&quot;);
	g.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);

	var rect_progress_bar = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);
	rect_progress_bar.setAttribute(&quot;style&quot;, &quot;marker: none; fill: rgb(128, 128, 128); stroke: none;&quot;);
	rect_progress_bar.setAttribute(&quot;id&quot;, &quot;rect_progress_bar&quot;);
	rect_progress_bar.setAttribute(&quot;x&quot;, 0);
	rect_progress_bar.setAttribute(&quot;y&quot;, 0.99 * HEIGHT);
	rect_progress_bar.setAttribute(&quot;width&quot;, 0);
	rect_progress_bar.setAttribute(&quot;height&quot;, 0.01 * HEIGHT);
	g.appendChild(rect_progress_bar);

	var circle_timer_indicator = document.createElementNS(NSS[&quot;svg&quot;], &quot;circle&quot;);
	circle_timer_indicator.setAttribute(&quot;style&quot;, &quot;marker: none; fill: rgb(255, 0, 0); stroke: none;&quot;);
	circle_timer_indicator.setAttribute(&quot;id&quot;, &quot;circle_timer_indicator&quot;);
	circle_timer_indicator.setAttribute(&quot;cx&quot;, 0.005 * HEIGHT);
	circle_timer_indicator.setAttribute(&quot;cy&quot;, 0.995 * HEIGHT);
	circle_timer_indicator.setAttribute(&quot;r&quot;, 0.005 * HEIGHT);
	g.appendChild(circle_timer_indicator);

	parent_node.appendChild(g);
}

/** Function to hide the progress bar.
 *	
 */
function hideProgressBar()
{
	var progress_bar = document.getElementById(&quot;layer_progress_bar&quot;);

	if (!progress_bar)
	{
		return;
	}

	progress_bar.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);
}

/** Function to show the progress bar.
 *	
 */
function showProgressBar()
{
	var progress_bar = document.getElementById(&quot;layer_progress_bar&quot;);

	if (!progress_bar)
	{
		return;
	}

	progress_bar.setAttribute(&quot;style&quot;, &quot;display: inherit;&quot;);
}

/** Set progress bar value.
 *	
 *	@param value the current slide number
 *
 */
function setProgressBarValue(value)
{
	var rect_progress_bar = document.getElementById(&quot;rect_progress_bar&quot;);

	if (!rect_progress_bar)
	{
		return;
	}

	if (value &lt; 1)
	{
		// First slide, assumed to be the title of the presentation
		var x = 0;
		var w = 0.01 * HEIGHT;
	}
	else if (value &gt;= slides.length - 1)
	{
		// Last slide, assumed to be the end of the presentation
		var x = WIDTH - 0.01 * HEIGHT;
		var w = 0.01 * HEIGHT;
	}
	else
	{
		value -= 1;
		value /= (slides.length - 2);

		var x = WIDTH * value;
		var w = WIDTH / (slides.length - 2);
	}

	rect_progress_bar.setAttribute(&quot;x&quot;, x);
	rect_progress_bar.setAttribute(&quot;width&quot;, w);
}

/** Set time indicator.
 *	
 *	@param value the percentage of time elapse so far between 0.0 and 1.0
 *
 */
function setTimeIndicatorValue(value)
{
	var circle_timer_indicator = document.getElementById(&quot;circle_timer_indicator&quot;);

	if (!circle_timer_indicator)
	{
		return;
	}

	if (value &lt; 0.0)
	{
		value = 0.0;
	}

	if (value &gt; 1.0)
	{
		value = 1.0;
	}

	var cx = (WIDTH - 0.01 * HEIGHT) * value + 0.005 * HEIGHT;
	circle_timer_indicator.setAttribute(&quot;cx&quot;, cx);
}

/** Update timer.
 *	
 */
function updateTimer()
{
	timer_elapsed += 1;
	setTimeIndicatorValue((timer_elapsed - timer_start) / (60 * timer_duration));
}

/** Convert screen coordinates to document coordinates.
 *
 *  @param e event with screen coordinates
 *
 *  @return coordinates in SVG file coordinate system	
 */
function calcCoord(e)
{
	var svgPoint = document.documentElement.createSVGPoint();
	svgPoint.x = e.clientX + window.pageXOffset;
	svgPoint.y = e.clientY + window.pageYOffset;

	var matrix = slides[activeSlide][&quot;element&quot;].getScreenCTM();

	if (slides[activeSlide][&quot;viewGroup&quot;])
		matrix = slides[activeSlide][&quot;viewGroup&quot;].getScreenCTM();

	svgPoint = svgPoint.matrixTransform(matrix.inverse());
	return svgPoint;
}

/** Add slide.
 *
 *	@param after_slide after which slide the new slide should be inserted into the presentation
 */
function addSlide(after_slide)
{
	number_of_added_slides++;

	var g = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);
	g.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);
	g.setAttribute(&quot;id&quot;, &quot;Whiteboard &quot; + Date() + &quot; presentation copy&quot;);
	g.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);

	var new_slide = new Object();
	new_slide[&quot;element&quot;] = g;

	// Set build in transition.
	new_slide[&quot;transitionIn&quot;] = new Object();
	var dict = defaultTransitionInDict;
	new_slide[&quot;transitionIn&quot;][&quot;name&quot;] = dict[&quot;name&quot;];
	new_slide[&quot;transitionIn&quot;][&quot;options&quot;] = new Object();

	for (key in dict)
		if (key != &quot;name&quot;)
			new_slide[&quot;transitionIn&quot;][&quot;options&quot;][key] = dict[key];

	// Set build out transition.
	new_slide[&quot;transitionOut&quot;] = new Object();
	dict = defaultTransitionOutDict;
	new_slide[&quot;transitionOut&quot;][&quot;name&quot;] = dict[&quot;name&quot;];
	new_slide[&quot;transitionOut&quot;][&quot;options&quot;] = new Object();

	for (key in dict)
		if (key != &quot;name&quot;)
			new_slide[&quot;transitionOut&quot;][&quot;options&quot;][key] = dict[key];

	// Copy master slide content.
	if (masterSlide)
	{
		var clonedNode = suffixNodeIds(masterSlide.cloneNode(true), &quot;_&quot; + Date() + &quot; presentation_copy&quot;);
		clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;);
		clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;);
		clonedNode.style.display = &quot;inherit&quot;;

		g.appendChild(clonedNode);
	}

	// Substitute auto texts.
	substituteAutoTexts(g, &quot;Whiteboard &quot; + number_of_added_slides, &quot;W&quot; + number_of_added_slides, slides.length);

	g.setAttribute(&quot;onmouseover&quot;, &quot;if ((currentMode == INDEX_MODE) &amp;&amp; ( activeSlide != &quot; + (after_slide + 1) + &quot;)) { indexSetActiveSlide(&quot; + (after_slide + 1) + &quot;); };&quot;);

	// Create a transform group.
	var transformGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

	// Add content to transform group.
	while (g.firstChild)
		transformGroup.appendChild(g.firstChild);

	// Transfer the transform attribute from the node to the transform group.
	if (g.getAttribute(&quot;transform&quot;))
	{
		transformGroup.setAttribute(&quot;transform&quot;, g.getAttribute(&quot;transform&quot;));
		g.removeAttribute(&quot;transform&quot;);
	}

	// Create a view group.
	var viewGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

	viewGroup.appendChild(transformGroup);
	new_slide[&quot;viewGroup&quot;] = g.appendChild(viewGroup);

	// Insert background.
	if (BACKGROUND_COLOR != null)
	{
		var rectNode = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);

		rectNode.setAttribute(&quot;x&quot;, 0);
		rectNode.setAttribute(&quot;y&quot;, 0);
		rectNode.setAttribute(&quot;width&quot;, WIDTH);
		rectNode.setAttribute(&quot;height&quot;, HEIGHT);
		rectNode.setAttribute(&quot;id&quot;, &quot;jessyInkBackground&quot; + Date());
		rectNode.setAttribute(&quot;fill&quot;, BACKGROUND_COLOR);

		new_slide[&quot;viewGroup&quot;].insertBefore(rectNode, new_slide[&quot;viewGroup&quot;].firstChild);
	}

	// Set initial view even if there are no other views.
	var matrixOld = (new matrixSVG()).fromElements(1, 0, 0, 0, 1, 0, 0, 0, 1);

	new_slide[&quot;viewGroup&quot;].setAttribute(&quot;transform&quot;, matrixOld.toAttribute());
	new_slide.initialView = matrixOld.toAttribute();

	// Insert slide
	var node = slides[after_slide][&quot;element&quot;];
	var next_node = node.nextSibling;
	var parent_node = node.parentNode;

	if (next_node)
	{
		parent_node.insertBefore(g, next_node);
	}
	else
	{
		parent_node.appendChild(g);
	}

	g = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);
	g.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);
	g.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, &quot;Whiteboard &quot; + number_of_added_slides);
	g.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);
	g.setAttribute(&quot;id&quot;, &quot;Whiteboard &quot; + Date());
	g.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);

	new_slide[&quot;original_element&quot;] = g;

	node = slides[after_slide][&quot;original_element&quot;];
	next_node = node.nextSibling;
	parent_node = node.parentNode;

	if (next_node)
	{
		parent_node.insertBefore(g, next_node);
	}
	else
	{
		parent_node.appendChild(g);
	}

	before_new_slide = slides.slice(0, after_slide + 1);
	after_new_slide = slides.slice(after_slide + 1);
	slides = before_new_slide.concat(new_slide, after_new_slide);

	//resetting the counter attributes on the slides that follow the new slide...
	for (var counter = after_slide+2; counter &lt; slides.length; counter++)
	{
		slides[counter][&quot;element&quot;].setAttribute(&quot;onmouseover&quot;, &quot;if ((currentMode == INDEX_MODE) &amp;&amp; ( activeSlide != &quot; + counter + &quot;)) { indexSetActiveSlide(&quot; + counter + &quot;); };&quot;);
	}
}

/** Convenience function to obtain a transformation matrix from a point matrix.
 *
 *	@param mPoints Point matrix.
 *	@return A transformation matrix.
 */
function pointMatrixToTransformation(mPoints)
{
	mPointsOld = (new matrixSVG()).fromElements(0, WIDTH, WIDTH, 0, 0, HEIGHT, 1, 1, 1);

	return mPointsOld.mult(mPoints.inv());
}

/** Convenience function to obtain a matrix with three corners of a rectangle.
 *
 *	@param rect an svg rectangle
 *	@return a matrixSVG containing three corners of the rectangle
 */
function rectToMatrix(rect)
{
	rectWidth = rect.getBBox().width;
	rectHeight = rect.getBBox().height;
	rectX = rect.getBBox().x;
	rectY = rect.getBBox().y;
	rectXcorr = 0;
	rectYcorr = 0;

	scaleX = WIDTH / rectWidth;
	scaleY = HEIGHT / rectHeight;

	if (scaleX &gt; scaleY)
	{
		scaleX = scaleY;
		rectXcorr -= (WIDTH / scaleX - rectWidth) / 2;
		rectWidth = WIDTH / scaleX;
	}	
	else
	{
		scaleY = scaleX;
		rectYcorr -= (HEIGHT / scaleY - rectHeight) / 2;
		rectHeight = HEIGHT / scaleY;
	}

	if (rect.transform.baseVal.numberOfItems &lt; 1)
	{
		mRectTrans = (new matrixSVG()).fromElements(1, 0, 0, 0, 1, 0, 0, 0, 1);
	}
	else
	{
		mRectTrans = (new matrixSVG()).fromSVGMatrix(rect.transform.baseVal.consolidate().matrix);
	}

	newBasePoints = (new matrixSVG()).fromElements(rectX, rectX, rectX, rectY, rectY, rectY, 1, 1, 1);
	newVectors = (new matrixSVG()).fromElements(rectXcorr, rectXcorr + rectWidth, rectXcorr + rectWidth, rectYcorr, rectYcorr, rectYcorr + rectHeight, 0, 0, 0);

	return mRectTrans.mult(newBasePoints.add(newVectors));
}

/** Function to handle JessyInk elements.
 *
 *	@param	node	Element node.
 */
function handleElement(node)
{
	if (node.getAttributeNS(NSS['jessyink'], 'element') == 'core.video')
	{
		var url;
		var width;
		var height;
		var x;
		var y;
		var transform;

		var tspans = node.getElementsByTagNameNS(&quot;http://www.w3.org/2000/svg&quot;, &quot;tspan&quot;);

		for (var tspanCounter = 0; tspanCounter &lt; tspans.length; tspanCounter++)
		{
			if (tspans[tspanCounter].getAttributeNS(&quot;https://launchpad.net/jessyink&quot;, &quot;video&quot;) == &quot;url&quot;)
			{
				url = tspans[tspanCounter].firstChild.nodeValue;
			}
		}

		var rects = node.getElementsByTagNameNS(&quot;http://www.w3.org/2000/svg&quot;, &quot;rect&quot;);

		for (var rectCounter = 0; rectCounter &lt; rects.length; rectCounter++)
		{
			if (rects[rectCounter].getAttributeNS(&quot;https://launchpad.net/jessyink&quot;, &quot;video&quot;) == &quot;rect&quot;)
			{
				x = rects[rectCounter].getAttribute(&quot;x&quot;);
				y = rects[rectCounter].getAttribute(&quot;y&quot;);
				width = rects[rectCounter].getAttribute(&quot;width&quot;);
				height = rects[rectCounter].getAttribute(&quot;height&quot;);
				transform = rects[rectCounter].getAttribute(&quot;transform&quot;);
			}
		}

		for (var childCounter = 0; childCounter &lt; node.childNodes.length; childCounter++)
		{
			if (node.childNodes[childCounter].nodeType == 1)
			{
				if (node.childNodes[childCounter].style)
				{
					node.childNodes[childCounter].style.display = 'none';
				}
				else
				{
					node.childNodes[childCounter].setAttribute(&quot;style&quot;, &quot;display: none;&quot;);
				}
			}
		}

		var foreignNode = document.createElementNS(&quot;http://www.w3.org/2000/svg&quot;, &quot;foreignObject&quot;);
		foreignNode.setAttribute(&quot;x&quot;, x);
		foreignNode.setAttribute(&quot;y&quot;, y);
		foreignNode.setAttribute(&quot;width&quot;, width);
		foreignNode.setAttribute(&quot;height&quot;, height);
		foreignNode.setAttribute(&quot;transform&quot;, transform);

		var videoNode = document.createElementNS(&quot;http://www.w3.org/1999/xhtml&quot;, &quot;video&quot;);
		videoNode.setAttribute(&quot;src&quot;, url);

		foreignNode.appendChild(videoNode);
		node.appendChild(foreignNode);
	}
}

/** Class processing the location hash.
 *
 *	@param str location hash
 */
function LocationHash(str)
{
	this.slideNumber = 0;
	this.effectNumber = 0;

	str = str.substr(1, str.length - 1);

	var parts = str.split('_');

	// Try to extract slide number.
	if (parts.length &gt;= 1)
	{
		try
		{
			var slideNumber = parseInt(parts[0]);

			if (!isNaN(slideNumber))
			{
				this.slideNumber = slideNumber - 1;
			}
		}
		catch (e)
		{
		}
	}
	
	// Try to extract effect number.
	if (parts.length &gt;= 2)
	{
		try
		{
			var effectNumber = parseInt(parts[1]);

			if (!isNaN(effectNumber))
			{
				this.effectNumber = effectNumber;
			}
		}
		catch (e)
		{
		}
	}
}

/** Class representing an svg matrix.
*/
function matrixSVG()
{
	this.e11 = 0; // a
	this.e12 = 0; // c
	this.e13 = 0; // e
	this.e21 = 0; // b
	this.e22 = 0; // d
	this.e23 = 0; // f
	this.e31 = 0;
	this.e32 = 0;
	this.e33 = 0;
}

/** Constructor function.
 *
 *	@param a element a (i.e. 1, 1) as described in the svg standard.
 *	@param b element b (i.e. 2, 1) as described in the svg standard.
 *	@param c element c (i.e. 1, 2) as described in the svg standard.
 *	@param d element d (i.e. 2, 2) as described in the svg standard.
 *	@param e element e (i.e. 1, 3) as described in the svg standard.
 *	@param f element f (i.e. 2, 3) as described in the svg standard.
 */
matrixSVG.prototype.fromSVGElements = function(a, b, c, d, e, f)
{
	this.e11 = a;
	this.e12 = c;
	this.e13 = e;
	this.e21 = b;
	this.e22 = d;
	this.e23 = f;
	this.e31 = 0;
	this.e32 = 0;
	this.e33 = 1;

	return this;
}

/** Constructor function.
 *
 *	@param matrix an svg matrix as described in the svg standard.
 */
matrixSVG.prototype.fromSVGMatrix = function(m)
{
	this.e11 = m.a;
	this.e12 = m.c;
	this.e13 = m.e;
	this.e21 = m.b;
	this.e22 = m.d;
	this.e23 = m.f;
	this.e31 = 0;
	this.e32 = 0;
	this.e33 = 1;

	return this;
}

/** Constructor function.
 *
 *	@param e11 element 1, 1 of the matrix.
 *	@param e12 element 1, 2 of the matrix.
 *	@param e13 element 1, 3 of the matrix.
 *	@param e21 element 2, 1 of the matrix.
 *	@param e22 element 2, 2 of the matrix.
 *	@param e23 element 2, 3 of the matrix.
 *	@param e31 element 3, 1 of the matrix.
 *	@param e32 element 3, 2 of the matrix.
 *	@param e33 element 3, 3 of the matrix.
 */
matrixSVG.prototype.fromElements = function(e11, e12, e13, e21, e22, e23, e31, e32, e33)
{
	this.e11 = e11;
	this.e12 = e12;
	this.e13 = e13;
	this.e21 = e21;
	this.e22 = e22;
	this.e23 = e23;
	this.e31 = e31;
	this.e32 = e32;
	this.e33 = e33;

	return this;
}

/** Constructor function.
 *
 *	@param attrString string value of the &quot;transform&quot; attribute (currently only &quot;matrix&quot; is accepted)
 */
matrixSVG.prototype.fromAttribute = function(attrString)
{
	str = attrString.substr(7, attrString.length - 8);

	str = str.trim();

	strArray = str.split(&quot;,&quot;);

	// Opera does not use commas to separate the values of the matrix, only spaces.
	if (strArray.length != 6)
		strArray = str.split(&quot; &quot;);

	this.e11 = parseFloat(strArray[0]);
	this.e21 = parseFloat(strArray[1]);
	this.e31 = 0;
	this.e12 = parseFloat(strArray[2]);
	this.e22 = parseFloat(strArray[3]);
	this.e32 = 0;
	this.e13 = parseFloat(strArray[4]);
	this.e23 = parseFloat(strArray[5]);
	this.e33 = 1;

	return this;
}

/** Output function
 *
 *	@return a string that can be used as the &quot;transform&quot; attribute.
 */
matrixSVG.prototype.toAttribute = function()
{
	return &quot;matrix(&quot; + this.e11 + &quot;, &quot; + this.e21 + &quot;, &quot; + this.e12 + &quot;, &quot; + this.e22 + &quot;, &quot; + this.e13 + &quot;, &quot; + this.e23 + &quot;)&quot;;
}

/** Matrix nversion.
 *
 *	@return the inverse of the matrix
 */
matrixSVG.prototype.inv = function()
{
	out = new matrixSVG();

	det = this.e11 * (this.e33 * this.e22 - this.e32 * this.e23) - this.e21 * (this.e33 * this.e12 - this.e32 * this.e13) + this.e31 * (this.e23 * this.e12 - this.e22 * this.e13);

	out.e11 =  (this.e33 * this.e22 - this.e32 * this.e23) / det;
	out.e12 = -(this.e33 * this.e12 - this.e32 * this.e13) / det;
	out.e13 =  (this.e23 * this.e12 - this.e22 * this.e13) / det;
	out.e21 = -(this.e33 * this.e21 - this.e31 * this.e23) / det;
	out.e22 =  (this.e33 * this.e11 - this.e31 * this.e13) / det;
	out.e23 = -(this.e23 * this.e11 - this.e21 * this.e13) / det;
	out.e31 =  (this.e32 * this.e21 - this.e31 * this.e22) / det;
	out.e32 = -(this.e32 * this.e11 - this.e31 * this.e12) / det;
	out.e33 =  (this.e22 * this.e11 - this.e21 * this.e12) / det;

	return out;
}

/** Matrix multiplication.
 *
 *	@param op another svg matrix
 *	@return this * op
 */
matrixSVG.prototype.mult = function(op)
{
	out = new matrixSVG();

	out.e11 = this.e11 * op.e11 + this.e12 * op.e21 + this.e13 * op.e31;
	out.e12 = this.e11 * op.e12 + this.e12 * op.e22 + this.e13 * op.e32;
	out.e13 = this.e11 * op.e13 + this.e12 * op.e23 + this.e13 * op.e33;
	out.e21 = this.e21 * op.e11 + this.e22 * op.e21 + this.e23 * op.e31;
	out.e22 = this.e21 * op.e12 + this.e22 * op.e22 + this.e23 * op.e32;
	out.e23 = this.e21 * op.e13 + this.e22 * op.e23 + this.e23 * op.e33;
	out.e31 = this.e31 * op.e11 + this.e32 * op.e21 + this.e33 * op.e31;
	out.e32 = this.e31 * op.e12 + this.e32 * op.e22 + this.e33 * op.e32;
	out.e33 = this.e31 * op.e13 + this.e32 * op.e23 + this.e33 * op.e33;

	return out;
}

/** Matrix addition.
 *
 *	@param op another svg matrix
 *	@return this + op
 */
matrixSVG.prototype.add = function(op)
{
	out = new matrixSVG();

	out.e11 = this.e11 + op.e11;
	out.e12 = this.e12 + op.e12;
	out.e13 = this.e13 + op.e13;
	out.e21 = this.e21 + op.e21;
	out.e22 = this.e22 + op.e22;
	out.e23 = this.e23 + op.e23;
	out.e31 = this.e31 + op.e31;
	out.e32 = this.e32 + op.e32;
	out.e33 = this.e33 + op.e33;

	return out;
}

/** Matrix mixing.
 *
 *	@param op another svg matrix
 *	@parma contribOp contribution of the other matrix (0 &lt;= contribOp &lt;= 1)
 *	@return (1 - contribOp) * this + contribOp * op
 */
matrixSVG.prototype.mix = function(op, contribOp)
{
	contribThis = 1.0 - contribOp;
	out = new matrixSVG();

	out.e11 = contribThis * this.e11 + contribOp * op.e11;
	out.e12 = contribThis * this.e12 + contribOp * op.e12;
	out.e13 = contribThis * this.e13 + contribOp * op.e13;
	out.e21 = contribThis * this.e21 + contribOp * op.e21;
	out.e22 = contribThis * this.e22 + contribOp * op.e22;
	out.e23 = contribThis * this.e23 + contribOp * op.e23;
	out.e31 = contribThis * this.e31 + contribOp * op.e31;
	out.e32 = contribThis * this.e32 + contribOp * op.e32;
	out.e33 = contribThis * this.e33 + contribOp * op.e33;

	return out;
}

/** Trimming function for strings.
*/
String.prototype.trim = function()
{
	return this.replace(/^\s+|\s+$/g, '');
}

/** SVGElement.getTransformToElement polyfill */
SVGElement.prototype.getTransformToElement = SVGElement.prototype.getTransformToElement || function(elem) {
    return elem.getScreenCTM().inverse().multiply(this.getScreenCTM());
};
</script>
</svg>
